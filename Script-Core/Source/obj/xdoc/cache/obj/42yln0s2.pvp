id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: Chroma
  commentId: N:Chroma
  language: CSharp
  name:
    CSharp: Chroma
    VB: Chroma
  nameWithType:
    CSharp: Chroma
    VB: Chroma
  qualifiedName:
    CSharp: Chroma
    VB: Chroma
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Chroma.Audio
    commentId: T:Chroma.Audio
    language: CSharp
    name:
      CSharp: Audio
      VB: Audio
    nameWithType:
      CSharp: Audio
      VB: Audio
    qualifiedName:
      CSharp: Chroma.Audio
      VB: Chroma.Audio
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Audio
      path: ''
      startLine: 8
    summary: "\nAudio management class. These set of functions wrap the internal engine audio api and the FMOD api.\n"
    example: []
    syntax:
      content:
        CSharp: public static class Audio
        VB: Public Module Audio
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Chroma.Audio.PlayEvent(System.String)
      commentId: M:Chroma.Audio.PlayEvent(System.String)
      language: CSharp
      name:
        CSharp: PlayEvent(String)
        VB: PlayEvent(String)
      nameWithType:
        CSharp: Audio.PlayEvent(String)
        VB: Audio.PlayEvent(String)
      qualifiedName:
        CSharp: Chroma.Audio.PlayEvent(System.String)
        VB: Chroma.Audio.PlayEvent(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: PlayEvent
        path: ''
        startLine: 14
      summary: "\nPlays an audio event.\n"
      example: []
      syntax:
        content:
          CSharp: public static void PlayEvent(string event_name)
          VB: Public Shared Sub PlayEvent(event_name As String)
        parameters:
        - id: event_name
          type: System.String
          description: Name/ID of the event.
      overload: Chroma.Audio.PlayEvent*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Audio.PlayEventIfStopped(System.String)
      commentId: M:Chroma.Audio.PlayEventIfStopped(System.String)
      language: CSharp
      name:
        CSharp: PlayEventIfStopped(String)
        VB: PlayEventIfStopped(String)
      nameWithType:
        CSharp: Audio.PlayEventIfStopped(String)
        VB: Audio.PlayEventIfStopped(String)
      qualifiedName:
        CSharp: Chroma.Audio.PlayEventIfStopped(System.String)
        VB: Chroma.Audio.PlayEventIfStopped(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: PlayEventIfStopped
        path: ''
        startLine: 24
      summary: "\nPlays an audio event ONLY if it is not playing. \nThis function can be used if the playing state of the event us unknown.\n"
      example: []
      syntax:
        content:
          CSharp: public static void PlayEventIfStopped(string event_name)
          VB: Public Shared Sub PlayEventIfStopped(event_name As String)
        parameters:
        - id: event_name
          type: System.String
          description: Name/ID of the event.
      overload: Chroma.Audio.PlayEventIfStopped*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Audio.StopEvent(System.String,System.Boolean)
      commentId: M:Chroma.Audio.StopEvent(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: StopEvent(String, Boolean)
        VB: StopEvent(String, Boolean)
      nameWithType:
        CSharp: Audio.StopEvent(String, Boolean)
        VB: Audio.StopEvent(String, Boolean)
      qualifiedName:
        CSharp: Chroma.Audio.StopEvent(System.String, System.Boolean)
        VB: Chroma.Audio.StopEvent(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: StopEvent
        path: ''
        startLine: 34
      summary: "\nStops an audio event from playing.\n"
      example: []
      syntax:
        content:
          CSharp: public static void StopEvent(string event_name, bool immediate = false)
          VB: Public Shared Sub StopEvent(event_name As String, immediate As Boolean = False)
        parameters:
        - id: event_name
          type: System.String
          description: Name/ID of the event.
        - id: immediate
          type: System.Boolean
          description: Whether the event should stop immediately. If not, the event will follow any ending/fading behavior specified.
      overload: Chroma.Audio.StopEvent*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Audio.GetEventParameter(System.String,System.String)
      commentId: M:Chroma.Audio.GetEventParameter(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetEventParameter(String, String)
        VB: GetEventParameter(String, String)
      nameWithType:
        CSharp: Audio.GetEventParameter(String, String)
        VB: Audio.GetEventParameter(String, String)
      qualifiedName:
        CSharp: Chroma.Audio.GetEventParameter(System.String, System.String)
        VB: Chroma.Audio.GetEventParameter(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetEventParameter
        path: ''
        startLine: 45
      summary: "\nGet a parameter value of an event.\n"
      example: []
      syntax:
        content:
          CSharp: public static float GetEventParameter(string event_name, string parameter)
          VB: Public Shared Function GetEventParameter(event_name As String, parameter As String) As Single
        parameters:
        - id: event_name
          type: System.String
          description: Name/ID of the event.
        - id: parameter
          type: System.String
          description: Name/ID of the parameter.
        return:
          type: System.Single
          description: ''
      overload: Chroma.Audio.GetEventParameter*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Audio.SetEventParameter(System.String,System.String,System.Single)
      commentId: M:Chroma.Audio.SetEventParameter(System.String,System.String,System.Single)
      language: CSharp
      name:
        CSharp: SetEventParameter(String, String, Single)
        VB: SetEventParameter(String, String, Single)
      nameWithType:
        CSharp: Audio.SetEventParameter(String, String, Single)
        VB: Audio.SetEventParameter(String, String, Single)
      qualifiedName:
        CSharp: Chroma.Audio.SetEventParameter(System.String, System.String, System.Single)
        VB: Chroma.Audio.SetEventParameter(System.String, System.String, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: SetEventParameter
        path: ''
        startLine: 56
      summary: "\nSet a parameter value of an event.\n"
      example: []
      syntax:
        content:
          CSharp: public static void SetEventParameter(string event_name, string parameter, float value)
          VB: Public Shared Sub SetEventParameter(event_name As String, parameter As String, value As Single)
        parameters:
        - id: event_name
          type: System.String
          description: Name/ID of the event.
        - id: parameter
          type: System.String
          description: Name/ID of the parameter to set.
        - id: value
          type: System.Single
          description: Value to set the parameter
      overload: Chroma.Audio.SetEventParameter*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Audio.IsEventPlaying(System.String)
      commentId: M:Chroma.Audio.IsEventPlaying(System.String)
      language: CSharp
      name:
        CSharp: IsEventPlaying(String)
        VB: IsEventPlaying(String)
      nameWithType:
        CSharp: Audio.IsEventPlaying(String)
        VB: Audio.IsEventPlaying(String)
      qualifiedName:
        CSharp: Chroma.Audio.IsEventPlaying(System.String)
        VB: Chroma.Audio.IsEventPlaying(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: IsEventPlaying
        path: ''
        startLine: 66
      summary: "\nChecks whether the event is currently playing.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool IsEventPlaying(string event_name)
          VB: Public Shared Function IsEventPlaying(event_name As String) As Boolean
        parameters:
        - id: event_name
          type: System.String
          description: Name/ID of the event.
        return:
          type: System.Boolean
          description: Playing status.
      overload: Chroma.Audio.IsEventPlaying*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Audio.PlayEvent_Native(System.String)
      commentId: M:Chroma.Audio.PlayEvent_Native(System.String)
      language: CSharp
      name:
        CSharp: PlayEvent_Native(String)
        VB: PlayEvent_Native(String)
      nameWithType:
        CSharp: Audio.PlayEvent_Native(String)
        VB: Audio.PlayEvent_Native(String)
      qualifiedName:
        CSharp: Chroma.Audio.PlayEvent_Native(System.String)
        VB: Chroma.Audio.PlayEvent_Native(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void PlayEvent_Native(string event_name)
          VB: Shared Sub PlayEvent_Native(event_name As String)
        parameters:
        - id: event_name
          type: System.String
      overload: Chroma.Audio.PlayEvent_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Audio.PlayEventIfStopped_Native(System.String)
      commentId: M:Chroma.Audio.PlayEventIfStopped_Native(System.String)
      language: CSharp
      name:
        CSharp: PlayEventIfStopped_Native(String)
        VB: PlayEventIfStopped_Native(String)
      nameWithType:
        CSharp: Audio.PlayEventIfStopped_Native(String)
        VB: Audio.PlayEventIfStopped_Native(String)
      qualifiedName:
        CSharp: Chroma.Audio.PlayEventIfStopped_Native(System.String)
        VB: Chroma.Audio.PlayEventIfStopped_Native(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void PlayEventIfStopped_Native(string event_name)
          VB: Shared Sub PlayEventIfStopped_Native(event_name As String)
        parameters:
        - id: event_name
          type: System.String
      overload: Chroma.Audio.PlayEventIfStopped_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Audio.StopEvent_Native(System.String,System.Boolean)
      commentId: M:Chroma.Audio.StopEvent_Native(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: StopEvent_Native(String, Boolean)
        VB: StopEvent_Native(String, Boolean)
      nameWithType:
        CSharp: Audio.StopEvent_Native(String, Boolean)
        VB: Audio.StopEvent_Native(String, Boolean)
      qualifiedName:
        CSharp: Chroma.Audio.StopEvent_Native(System.String, System.Boolean)
        VB: Chroma.Audio.StopEvent_Native(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void StopEvent_Native(string event_name, bool immediate)
          VB: Shared Sub StopEvent_Native(event_name As String, immediate As Boolean)
        parameters:
        - id: event_name
          type: System.String
        - id: immediate
          type: System.Boolean
      overload: Chroma.Audio.StopEvent_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Audio.GetEventParameter_Native(System.String,System.String)
      commentId: M:Chroma.Audio.GetEventParameter_Native(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetEventParameter_Native(String, String)
        VB: GetEventParameter_Native(String, String)
      nameWithType:
        CSharp: Audio.GetEventParameter_Native(String, String)
        VB: Audio.GetEventParameter_Native(String, String)
      qualifiedName:
        CSharp: Chroma.Audio.GetEventParameter_Native(System.String, System.String)
        VB: Chroma.Audio.GetEventParameter_Native(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern float GetEventParameter_Native(string event_name, string parameter)
          VB: Shared Function GetEventParameter_Native(event_name As String, parameter As String) As Single
        parameters:
        - id: event_name
          type: System.String
        - id: parameter
          type: System.String
        return:
          type: System.Single
      overload: Chroma.Audio.GetEventParameter_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Audio.SetEventParameter_Native(System.String,System.String,System.Single)
      commentId: M:Chroma.Audio.SetEventParameter_Native(System.String,System.String,System.Single)
      language: CSharp
      name:
        CSharp: SetEventParameter_Native(String, String, Single)
        VB: SetEventParameter_Native(String, String, Single)
      nameWithType:
        CSharp: Audio.SetEventParameter_Native(String, String, Single)
        VB: Audio.SetEventParameter_Native(String, String, Single)
      qualifiedName:
        CSharp: Chroma.Audio.SetEventParameter_Native(System.String, System.String, System.Single)
        VB: Chroma.Audio.SetEventParameter_Native(System.String, System.String, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void SetEventParameter_Native(string event_name, string parameter, float value)
          VB: Shared Sub SetEventParameter_Native(event_name As String, parameter As String, value As Single)
        parameters:
        - id: event_name
          type: System.String
        - id: parameter
          type: System.String
        - id: value
          type: System.Single
      overload: Chroma.Audio.SetEventParameter_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Audio.IsEventPlaying_Native(System.String)
      commentId: M:Chroma.Audio.IsEventPlaying_Native(System.String)
      language: CSharp
      name:
        CSharp: IsEventPlaying_Native(String)
        VB: IsEventPlaying_Native(String)
      nameWithType:
        CSharp: Audio.IsEventPlaying_Native(String)
        VB: Audio.IsEventPlaying_Native(String)
      qualifiedName:
        CSharp: Chroma.Audio.IsEventPlaying_Native(System.String)
        VB: Chroma.Audio.IsEventPlaying_Native(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern bool IsEventPlaying_Native(string event_name)
          VB: Shared Function IsEventPlaying_Native(event_name As String) As Boolean
        parameters:
        - id: event_name
          type: System.String
        return:
          type: System.Boolean
      overload: Chroma.Audio.IsEventPlaying_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
  - id: Chroma.Component
    commentId: T:Chroma.Component
    language: CSharp
    name:
      CSharp: Component
      VB: Component
    nameWithType:
      CSharp: Component
      VB: Component
    qualifiedName:
      CSharp: Chroma.Component
      VB: Chroma.Component
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Component
      path: ''
      startLine: 99
    summary: "\nBase component class.\n"
    example: []
    syntax:
      content:
        CSharp: public class Component
        VB: Public Class Component
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Chroma.Component.Entity
      commentId: P:Chroma.Component.Entity
      language: CSharp
      name:
        CSharp: Entity
        VB: Entity
      nameWithType:
        CSharp: Component.Entity
        VB: Component.Entity
      qualifiedName:
        CSharp: Chroma.Component.Entity
        VB: Chroma.Component.Entity
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Entity
        path: ''
        startLine: 104
      summary: "\nReference to the entity containing this component.\n"
      example: []
      syntax:
        content:
          CSharp: public Entity Entity { get; }
          VB: Public ReadOnly Property Entity As Entity
        parameters: []
        return:
          type: Chroma.Entity
      overload: Chroma.Component.Entity*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Chroma.Component.Enabled
      commentId: P:Chroma.Component.Enabled
      language: CSharp
      name:
        CSharp: Enabled
        VB: Enabled
      nameWithType:
        CSharp: Component.Enabled
        VB: Component.Enabled
      qualifiedName:
        CSharp: Chroma.Component.Enabled
        VB: Chroma.Component.Enabled
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Enabled
        path: ''
        startLine: 109
      summary: "\nValue representing whether the component is enabled.\n"
      example: []
      syntax:
        content:
          CSharp: public bool Enabled { get; set; }
          VB: Public Property Enabled As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Chroma.Component.Enabled*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Chroma.Component.GetEnabled_Native(System.UInt64,System.Type)
      commentId: M:Chroma.Component.GetEnabled_Native(System.UInt64,System.Type)
      language: CSharp
      name:
        CSharp: GetEnabled_Native(UInt64, Type)
        VB: GetEnabled_Native(UInt64, Type)
      nameWithType:
        CSharp: Component.GetEnabled_Native(UInt64, Type)
        VB: Component.GetEnabled_Native(UInt64, Type)
      qualifiedName:
        CSharp: Chroma.Component.GetEnabled_Native(System.UInt64, System.Type)
        VB: Chroma.Component.GetEnabled_Native(System.UInt64, System.Type)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern bool GetEnabled_Native(ulong entityID, Type type)
          VB: Shared Function GetEnabled_Native(entityID As ULong, type As Type) As Boolean
        parameters:
        - id: entityID
          type: System.UInt64
        - id: type
          type: System.Type
        return:
          type: System.Boolean
      overload: Chroma.Component.GetEnabled_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Component.SetEnabled_Native(System.UInt64,System.Type,System.Boolean)
      commentId: M:Chroma.Component.SetEnabled_Native(System.UInt64,System.Type,System.Boolean)
      language: CSharp
      name:
        CSharp: SetEnabled_Native(UInt64, Type, Boolean)
        VB: SetEnabled_Native(UInt64, Type, Boolean)
      nameWithType:
        CSharp: Component.SetEnabled_Native(UInt64, Type, Boolean)
        VB: Component.SetEnabled_Native(UInt64, Type, Boolean)
      qualifiedName:
        CSharp: Chroma.Component.SetEnabled_Native(System.UInt64, System.Type, System.Boolean)
        VB: Chroma.Component.SetEnabled_Native(System.UInt64, System.Type, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void SetEnabled_Native(ulong entityID, Type type, bool val)
          VB: Shared Sub SetEnabled_Native(entityID As ULong, type As Type, val As Boolean)
        parameters:
        - id: entityID
          type: System.UInt64
        - id: type
          type: System.Type
        - id: val
          type: System.Boolean
      overload: Chroma.Component.SetEnabled_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
  - id: Chroma.Coroutine
    commentId: T:Chroma.Coroutine
    language: CSharp
    name:
      CSharp: Coroutine
      VB: Coroutine
    nameWithType:
      CSharp: Coroutine
      VB: Coroutine
    qualifiedName:
      CSharp: Chroma.Coroutine
      VB: Chroma.Coroutine
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Coroutine
      path: ''
      startLine: 137
    summary: "\nCoroutine based on the IEnumerator system.\n\n"
    example: []
    syntax:
      content:
        CSharp: public class Coroutine
        VB: Public Class Coroutine
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Chroma.Coroutine.Active
      commentId: P:Chroma.Coroutine.Active
      language: CSharp
      name:
        CSharp: Active
        VB: Active
      nameWithType:
        CSharp: Coroutine.Active
        VB: Coroutine.Active
      qualifiedName:
        CSharp: Chroma.Coroutine.Active
        VB: Chroma.Coroutine.Active
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Active
        path: ''
        startLine: 142
      summary: "\nWhether the coroutine is active.\n"
      example: []
      syntax:
        content:
          CSharp: public bool Active { get; }
          VB: Public ReadOnly Property Active As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Chroma.Coroutine.Active*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Chroma.Coroutine.Finished
      commentId: P:Chroma.Coroutine.Finished
      language: CSharp
      name:
        CSharp: Finished
        VB: Finished
      nameWithType:
        CSharp: Coroutine.Finished
        VB: Coroutine.Finished
      qualifiedName:
        CSharp: Chroma.Coroutine.Finished
        VB: Chroma.Coroutine.Finished
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Finished
        path: ''
        startLine: 147
      summary: "\nWhether the coroutine has completed. Independent of <code>Active</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public bool Finished { get; }
          VB: Public ReadOnly Property Finished As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Chroma.Coroutine.Finished*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Chroma.Coroutine._func
      commentId: F:Chroma.Coroutine._func
      language: CSharp
      name:
        CSharp: _func
        VB: _func
      nameWithType:
        CSharp: Coroutine._func
        VB: Coroutine._func
      qualifiedName:
        CSharp: Chroma.Coroutine._func
        VB: Chroma.Coroutine._func
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _func
        path: ''
        startLine: 151
      syntax:
        content:
          CSharp: Coroutine.CoroutineFunction _func
          VB: _func As Coroutine.CoroutineFunction
        return:
          type: Chroma.Coroutine.CoroutineFunction
      modifiers:
        CSharp: []
        VB: []
    - id: Chroma.Coroutine._enumerators
      commentId: F:Chroma.Coroutine._enumerators
      language: CSharp
      name:
        CSharp: _enumerators
        VB: _enumerators
      nameWithType:
        CSharp: Coroutine._enumerators
        VB: Coroutine._enumerators
      qualifiedName:
        CSharp: Chroma.Coroutine._enumerators
        VB: Chroma.Coroutine._enumerators
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _enumerators
        path: ''
        startLine: 152
      syntax:
        content:
          CSharp: Stack<IEnumerator> _enumerators
          VB: _enumerators As Stack(Of IEnumerator)
        return:
          type: Stack{IEnumerator}
      modifiers:
        CSharp: []
        VB: []
    - id: Chroma.Coroutine._waitTimer
      commentId: F:Chroma.Coroutine._waitTimer
      language: CSharp
      name:
        CSharp: _waitTimer
        VB: _waitTimer
      nameWithType:
        CSharp: Coroutine._waitTimer
        VB: Coroutine._waitTimer
      qualifiedName:
        CSharp: Chroma.Coroutine._waitTimer
        VB: Chroma.Coroutine._waitTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _waitTimer
        path: ''
        startLine: 154
      syntax:
        content:
          CSharp: float _waitTimer
          VB: _waitTimer As Single
        return:
          type: System.Single
      modifiers:
        CSharp: []
        VB: []
    - id: Chroma.Coroutine._ended
      commentId: F:Chroma.Coroutine._ended
      language: CSharp
      name:
        CSharp: _ended
        VB: _ended
      nameWithType:
        CSharp: Coroutine._ended
        VB: Coroutine._ended
      qualifiedName:
        CSharp: Chroma.Coroutine._ended
        VB: Chroma.Coroutine._ended
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _ended
        path: ''
        startLine: 155
      syntax:
        content:
          CSharp: bool _ended
          VB: _ended As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp: []
        VB: []
    - id: Chroma.Coroutine.#ctor
      commentId: M:Chroma.Coroutine.#ctor
      language: CSharp
      name:
        CSharp: Coroutine()
        VB: Coroutine()
      nameWithType:
        CSharp: Coroutine.Coroutine()
        VB: Coroutine.Coroutine()
      qualifiedName:
        CSharp: Chroma.Coroutine.Coroutine()
        VB: Chroma.Coroutine.Coroutine()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 157
      syntax:
        content:
          CSharp: Coroutine()
          VB: Sub New
      overload: Chroma.Coroutine.#ctor*
      modifiers:
        CSharp: []
        VB: []
    - id: Chroma.Coroutine.#ctor(Chroma.Coroutine.CoroutineFunction)
      commentId: M:Chroma.Coroutine.#ctor(Chroma.Coroutine.CoroutineFunction)
      language: CSharp
      name:
        CSharp: Coroutine(Coroutine.CoroutineFunction)
        VB: Coroutine(Coroutine.CoroutineFunction)
      nameWithType:
        CSharp: Coroutine.Coroutine(Coroutine.CoroutineFunction)
        VB: Coroutine.Coroutine(Coroutine.CoroutineFunction)
      qualifiedName:
        CSharp: Chroma.Coroutine.Coroutine(Chroma.Coroutine.CoroutineFunction)
        VB: Chroma.Coroutine.Coroutine(Chroma.Coroutine.CoroutineFunction)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 163
      syntax:
        content:
          CSharp: Coroutine(Coroutine.CoroutineFunction function)
          VB: Sub New(function As Coroutine.CoroutineFunction)
        parameters:
        - id: function
          type: Chroma.Coroutine.CoroutineFunction
      overload: Chroma.Coroutine.#ctor*
      modifiers:
        CSharp: []
        VB: []
    - id: Chroma.Coroutine.Update
      commentId: M:Chroma.Coroutine.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: Coroutine.Update()
        VB: Coroutine.Update()
      qualifiedName:
        CSharp: Chroma.Coroutine.Update()
        VB: Chroma.Coroutine.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Update
        path: ''
        startLine: 170
      syntax:
        content:
          CSharp: void Update()
          VB: Sub Update
      overload: Chroma.Coroutine.Update*
      modifiers:
        CSharp: []
        VB: []
    - id: Chroma.Coroutine.Start
      commentId: M:Chroma.Coroutine.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: Coroutine.Start()
        VB: Coroutine.Start()
      qualifiedName:
        CSharp: Chroma.Coroutine.Start()
        VB: Chroma.Coroutine.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Start
        path: ''
        startLine: 211
      summary: "\nStarts the coroutine.\n"
      example: []
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Chroma.Coroutine.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Coroutine.Pause
      commentId: M:Chroma.Coroutine.Pause
      language: CSharp
      name:
        CSharp: Pause()
        VB: Pause()
      nameWithType:
        CSharp: Coroutine.Pause()
        VB: Coroutine.Pause()
      qualifiedName:
        CSharp: Chroma.Coroutine.Pause()
        VB: Chroma.Coroutine.Pause()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Pause
        path: ''
        startLine: 229
      summary: "\nPauses the coroutine.\n"
      example: []
      syntax:
        content:
          CSharp: public void Pause()
          VB: Public Sub Pause
      overload: Chroma.Coroutine.Pause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Coroutine.Resume
      commentId: M:Chroma.Coroutine.Resume
      language: CSharp
      name:
        CSharp: Resume()
        VB: Resume()
      nameWithType:
        CSharp: Coroutine.Resume()
        VB: Coroutine.Resume()
      qualifiedName:
        CSharp: Chroma.Coroutine.Resume()
        VB: Chroma.Coroutine.Resume()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Resume
        path: ''
        startLine: 237
      summary: "\nResumes the coroutine.\n"
      example: []
      syntax:
        content:
          CSharp: public void Resume()
          VB: Public Sub Resume
      overload: Chroma.Coroutine.Resume*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Coroutine.Restart
      commentId: M:Chroma.Coroutine.Restart
      language: CSharp
      name:
        CSharp: Restart()
        VB: Restart()
      nameWithType:
        CSharp: Coroutine.Restart()
        VB: Coroutine.Restart()
      qualifiedName:
        CSharp: Chroma.Coroutine.Restart()
        VB: Chroma.Coroutine.Restart()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Restart
        path: ''
        startLine: 245
      summary: "\nRestarts the coroutine.\n"
      example: []
      syntax:
        content:
          CSharp: public void Restart()
          VB: Public Sub Restart
      overload: Chroma.Coroutine.Restart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Coroutine.Stop
      commentId: M:Chroma.Coroutine.Stop
      language: CSharp
      name:
        CSharp: Stop()
        VB: Stop()
      nameWithType:
        CSharp: Coroutine.Stop()
        VB: Coroutine.Stop()
      qualifiedName:
        CSharp: Chroma.Coroutine.Stop()
        VB: Chroma.Coroutine.Stop()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Stop
        path: ''
        startLine: 258
      summary: "\nStops the coroutine.\n"
      example: []
      syntax:
        content:
          CSharp: public void Stop()
          VB: Public Sub Stop
      overload: Chroma.Coroutine.Stop*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Coroutine.Set(Chroma.Coroutine.CoroutineFunction)
      commentId: M:Chroma.Coroutine.Set(Chroma.Coroutine.CoroutineFunction)
      language: CSharp
      name:
        CSharp: Set(Coroutine.CoroutineFunction)
        VB: Set(Coroutine.CoroutineFunction)
      nameWithType:
        CSharp: Coroutine.Set(Coroutine.CoroutineFunction)
        VB: Coroutine.Set(Coroutine.CoroutineFunction)
      qualifiedName:
        CSharp: Chroma.Coroutine.Set(Chroma.Coroutine.CoroutineFunction)
        VB: Chroma.Coroutine.Set(Chroma.Coroutine.CoroutineFunction)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Set
        path: ''
        startLine: 271
      summary: "\nSets the function which the coroutine executes.\n"
      example: []
      syntax:
        content:
          CSharp: public void Set(Coroutine.CoroutineFunction function)
          VB: Public Sub Set(function As Coroutine.CoroutineFunction)
        parameters:
        - id: function
          type: Chroma.Coroutine.CoroutineFunction
          description: Function returning an IEnumerator, yield return represent time values in seconds.
      overload: Chroma.Coroutine.Set*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Chroma.Coroutine.CoroutineFunction
    commentId: T:Chroma.Coroutine.CoroutineFunction
    language: CSharp
    name:
      CSharp: Coroutine.CoroutineFunction
      VB: Coroutine.CoroutineFunction
    nameWithType:
      CSharp: Coroutine.CoroutineFunction
      VB: Coroutine.CoroutineFunction
    qualifiedName:
      CSharp: Chroma.Coroutine.CoroutineFunction
      VB: Chroma.Coroutine.CoroutineFunction
    type: Delegate
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: CoroutineFunction
      path: ''
      startLine: 149
    syntax:
      content:
        CSharp: public delegate IEnumerator CoroutineFunction();
        VB: Public Delegate Function CoroutineFunction As IEnumerator
      return:
        type: IEnumerator
    modifiers:
      CSharp:
      - public
      - delegate
      VB:
      - Public
      - Delegate
    items: []
  - id: Chroma.Entity
    commentId: T:Chroma.Entity
    language: CSharp
    name:
      CSharp: Entity
      VB: Entity
    nameWithType:
      CSharp: Entity
      VB: Entity
    qualifiedName:
      CSharp: Chroma.Entity
      VB: Chroma.Entity
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Entity
      path: ''
      startLine: 295
    summary: "\nMain class for game entities.\n"
    example: []
    syntax:
      content:
        CSharp: public class Entity
        VB: Public Class Entity
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Chroma.Entity.ID
      commentId: P:Chroma.Entity.ID
      language: CSharp
      name:
        CSharp: ID
        VB: ID
      nameWithType:
        CSharp: Entity.ID
        VB: Entity.ID
      qualifiedName:
        CSharp: Chroma.Entity.ID
        VB: Chroma.Entity.ID
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: ID
        path: ''
        startLine: 300
      summary: "\nNumeric ID for the entity.\n"
      example: []
      syntax:
        content:
          CSharp: public ulong ID { get; }
          VB: Public ReadOnly Property ID As ULong
        parameters: []
        return:
          type: System.UInt64
      overload: Chroma.Entity.ID*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Chroma.Entity.Name
      commentId: P:Chroma.Entity.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: Entity.Name
        VB: Entity.Name
      qualifiedName:
        CSharp: Chroma.Entity.Name
        VB: Chroma.Entity.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Name
        path: ''
        startLine: 304
      summary: "\nName of the entity.\n"
      example: []
      syntax:
        content:
          CSharp: public string Name { get; }
          VB: Public ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Chroma.Entity.Name*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Chroma.Entity.#ctor
      commentId: M:Chroma.Entity.#ctor
      language: CSharp
      name:
        CSharp: Entity()
        VB: Entity()
      nameWithType:
        CSharp: Entity.Entity()
        VB: Entity.Entity()
      qualifiedName:
        CSharp: Chroma.Entity.Entity()
        VB: Chroma.Entity.Entity()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 307
      syntax:
        content:
          CSharp: protected Entity()
          VB: Protected Sub New
      overload: Chroma.Entity.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Chroma.Entity.#ctor(System.UInt64)
      commentId: M:Chroma.Entity.#ctor(System.UInt64)
      language: CSharp
      name:
        CSharp: Entity(UInt64)
        VB: Entity(UInt64)
      nameWithType:
        CSharp: Entity.Entity(UInt64)
        VB: Entity.Entity(UInt64)
      qualifiedName:
        CSharp: Chroma.Entity.Entity(System.UInt64)
        VB: Chroma.Entity.Entity(System.UInt64)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 308
      syntax:
        content:
          CSharp: Entity(ulong id)
          VB: Sub New(id As ULong)
        parameters:
        - id: id
          type: System.UInt64
      overload: Chroma.Entity.#ctor*
      modifiers:
        CSharp: []
        VB: []
    - id: Chroma.Entity.Finalize
      commentId: M:Chroma.Entity.Finalize
      language: CSharp
      name:
        CSharp: Finalize()
        VB: Finalize()
      nameWithType:
        CSharp: Entity.Finalize()
        VB: Entity.Finalize()
      qualifiedName:
        CSharp: Chroma.Entity.Finalize()
        VB: Chroma.Entity.Finalize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Finalize
        path: ''
        startLine: 309
      syntax:
        content:
          CSharp: protected void Finalize()
          VB: Protected Sub Finalize
      overload: Chroma.Entity.Finalize*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Chroma.Entity._coroutines
      commentId: F:Chroma.Entity._coroutines
      language: CSharp
      name:
        CSharp: _coroutines
        VB: _coroutines
      nameWithType:
        CSharp: Entity._coroutines
        VB: Entity._coroutines
      qualifiedName:
        CSharp: Chroma.Entity._coroutines
        VB: Chroma.Entity._coroutines
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _coroutines
        path: ''
        startLine: 311
      syntax:
        content:
          CSharp: List<Coroutine> _coroutines
          VB: _coroutines As List(Of Coroutine)
        return:
          type: List{Chroma.Coroutine}
      modifiers:
        CSharp: []
        VB: []
    - id: Chroma.Entity.CreateCoroutine
      commentId: M:Chroma.Entity.CreateCoroutine
      language: CSharp
      name:
        CSharp: CreateCoroutine()
        VB: CreateCoroutine()
      nameWithType:
        CSharp: Entity.CreateCoroutine()
        VB: Entity.CreateCoroutine()
      qualifiedName:
        CSharp: Chroma.Entity.CreateCoroutine()
        VB: Chroma.Entity.CreateCoroutine()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: CreateCoroutine
        path: ''
        startLine: 317
      summary: "\nCreates a coroutine and attaches it to this entity.\n"
      example: []
      syntax:
        content:
          CSharp: public Coroutine CreateCoroutine()
          VB: Public Function CreateCoroutine As Coroutine
        return:
          type: Chroma.Coroutine
          description: ''
      overload: Chroma.Entity.CreateCoroutine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Entity.CreateCoroutine(Chroma.Coroutine.CoroutineFunction)
      commentId: M:Chroma.Entity.CreateCoroutine(Chroma.Coroutine.CoroutineFunction)
      language: CSharp
      name:
        CSharp: CreateCoroutine(Coroutine.CoroutineFunction)
        VB: CreateCoroutine(Coroutine.CoroutineFunction)
      nameWithType:
        CSharp: Entity.CreateCoroutine(Coroutine.CoroutineFunction)
        VB: Entity.CreateCoroutine(Coroutine.CoroutineFunction)
      qualifiedName:
        CSharp: Chroma.Entity.CreateCoroutine(Chroma.Coroutine.CoroutineFunction)
        VB: Chroma.Entity.CreateCoroutine(Chroma.Coroutine.CoroutineFunction)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: CreateCoroutine
        path: ''
        startLine: 329
      summary: "\nCreates a coroutine, sets the function provided, and attaches it to this entity.\n"
      example: []
      syntax:
        content:
          CSharp: public Coroutine CreateCoroutine(Coroutine.CoroutineFunction function)
          VB: Public Function CreateCoroutine(function As Coroutine.CoroutineFunction) As Coroutine
        parameters:
        - id: function
          type: Chroma.Coroutine.CoroutineFunction
          description: Function for the coroutine to execute.
        return:
          type: Chroma.Coroutine
          description: ''
      overload: Chroma.Entity.CreateCoroutine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Entity.CreateComponent``1
      commentId: M:Chroma.Entity.CreateComponent``1
      language: CSharp
      name:
        CSharp: CreateComponent<T>()
        VB: CreateComponent(Of T)()
      nameWithType:
        CSharp: Entity.CreateComponent<T>()
        VB: Entity.CreateComponent(Of T)()
      qualifiedName:
        CSharp: Chroma.Entity.CreateComponent<T>()
        VB: Chroma.Entity.CreateComponent(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: CreateComponent
        path: ''
        startLine: 341
      summary: "\nCreates a component of the given type and attaches it to this entity.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public T CreateComponent<T>()

                where T : Component, new()
          VB: Public Function CreateComponent(Of T As {Component, New}) As T
        typeParameters:
        - id: T
          description: ''
        return:
          type: '{T}'
          description: ''
      overload: Chroma.Entity.CreateComponent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Entity.HasComponent``1
      commentId: M:Chroma.Entity.HasComponent``1
      language: CSharp
      name:
        CSharp: HasComponent<T>()
        VB: HasComponent(Of T)()
      nameWithType:
        CSharp: Entity.HasComponent<T>()
        VB: Entity.HasComponent(Of T)()
      qualifiedName:
        CSharp: Chroma.Entity.HasComponent<T>()
        VB: Chroma.Entity.HasComponent(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: HasComponent
        path: ''
        startLine: 355
      summary: "\nChecks whether this entity has a component of a given type.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public bool HasComponent<T>()

                where T : Component, new()
          VB: Public Function HasComponent(Of T As {Component, New}) As Boolean
        typeParameters:
        - id: T
          description: Type of component.
        return:
          type: System.Boolean
          description: ''
      overload: Chroma.Entity.HasComponent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Entity.HasComponent(System.Type)
      commentId: M:Chroma.Entity.HasComponent(System.Type)
      language: CSharp
      name:
        CSharp: HasComponent(Type)
        VB: HasComponent(Type)
      nameWithType:
        CSharp: Entity.HasComponent(Type)
        VB: Entity.HasComponent(Type)
      qualifiedName:
        CSharp: Chroma.Entity.HasComponent(System.Type)
        VB: Chroma.Entity.HasComponent(System.Type)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: HasComponent
        path: ''
        startLine: 365
      summary: "\nChecks whether this entity has a component of a given type.\n"
      example: []
      syntax:
        content:
          CSharp: public bool HasComponent(Type type)
          VB: Public Function HasComponent(type As Type) As Boolean
        parameters:
        - id: type
          type: System.Type
          description: Type of component.
        return:
          type: System.Boolean
          description: ''
      overload: Chroma.Entity.HasComponent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Entity.GetComponent``1
      commentId: M:Chroma.Entity.GetComponent``1
      language: CSharp
      name:
        CSharp: GetComponent<T>()
        VB: GetComponent(Of T)()
      nameWithType:
        CSharp: Entity.GetComponent<T>()
        VB: Entity.GetComponent(Of T)()
      qualifiedName:
        CSharp: Chroma.Entity.GetComponent<T>()
        VB: Chroma.Entity.GetComponent(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetComponent
        path: ''
        startLine: 375
      summary: "\nGets this entity&apos;s component of a specific type.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public T GetComponent<T>()

                where T : Component, new()
          VB: Public Function GetComponent(Of T As {Component, New}) As T
        typeParameters:
        - id: T
          description: Type of component.
        return:
          type: '{T}'
          description: Returns component of type <code>T</code>, or <code>null</code> if this entity doesn&apos;t have a component of type T.
      overload: Chroma.Entity.GetComponent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Entity.FindEntityByName(System.String)
      commentId: M:Chroma.Entity.FindEntityByName(System.String)
      language: CSharp
      name:
        CSharp: FindEntityByName(String)
        VB: FindEntityByName(String)
      nameWithType:
        CSharp: Entity.FindEntityByName(String)
        VB: Entity.FindEntityByName(String)
      qualifiedName:
        CSharp: Chroma.Entity.FindEntityByName(System.String)
        VB: Chroma.Entity.FindEntityByName(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: FindEntityByName
        path: ''
        startLine: 391
      summary: "\nGets an entity its name. Returns <code>null</code> if an entity with the given name does not exist.\n"
      example: []
      syntax:
        content:
          CSharp: public static Entity FindEntityByName(string name)
          VB: Public Shared Function FindEntityByName(name As String) As Entity
        parameters:
        - id: name
          type: System.String
          description: ''
        return:
          type: Chroma.Entity
          description: ''
      overload: Chroma.Entity.FindEntityByName*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Entity.GetChildren
      commentId: M:Chroma.Entity.GetChildren
      language: CSharp
      name:
        CSharp: GetChildren()
        VB: GetChildren()
      nameWithType:
        CSharp: Entity.GetChildren()
        VB: Entity.GetChildren()
      qualifiedName:
        CSharp: Chroma.Entity.GetChildren()
        VB: Chroma.Entity.GetChildren()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetChildren
        path: ''
        startLine: 400
      summary: "\nGets a list of this entities&apos; children. \n"
      example: []
      syntax:
        content:
          CSharp: public List<Entity> GetChildren()
          VB: Public Function GetChildren As List(Of Entity)
        return:
          type: List{Chroma.Entity}
          description: ''
      overload: Chroma.Entity.GetChildren*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Entity.GetChildByName(System.String)
      commentId: M:Chroma.Entity.GetChildByName(System.String)
      language: CSharp
      name:
        CSharp: GetChildByName(String)
        VB: GetChildByName(String)
      nameWithType:
        CSharp: Entity.GetChildByName(String)
        VB: Entity.GetChildByName(String)
      qualifiedName:
        CSharp: Chroma.Entity.GetChildByName(System.String)
        VB: Chroma.Entity.GetChildByName(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetChildByName
        path: ''
        startLine: 416
      summary: "\nGets a child of this entity by its name. Returns <code>null</code> if no such child exists.\n"
      example: []
      syntax:
        content:
          CSharp: public Entity GetChildByName(string name)
          VB: Public Function GetChildByName(name As String) As Entity
        parameters:
        - id: name
          type: System.String
          description: ''
        return:
          type: Chroma.Entity
          description: ''
      overload: Chroma.Entity.GetChildByName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Entity.GetFirstChild
      commentId: M:Chroma.Entity.GetFirstChild
      language: CSharp
      name:
        CSharp: GetFirstChild()
        VB: GetFirstChild()
      nameWithType:
        CSharp: Entity.GetFirstChild()
        VB: Entity.GetFirstChild()
      qualifiedName:
        CSharp: Chroma.Entity.GetFirstChild()
        VB: Chroma.Entity.GetFirstChild()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetFirstChild
        path: ''
        startLine: 426
      summary: "\nGets the first child of this entity. Returns <code>null</code> if no children exist.\n"
      example: []
      syntax:
        content:
          CSharp: public Entity GetFirstChild()
          VB: Public Function GetFirstChild As Entity
        return:
          type: Chroma.Entity
          description: ''
      overload: Chroma.Entity.GetFirstChild*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Entity.HasChildren
      commentId: M:Chroma.Entity.HasChildren
      language: CSharp
      name:
        CSharp: HasChildren()
        VB: HasChildren()
      nameWithType:
        CSharp: Entity.HasChildren()
        VB: Entity.HasChildren()
      qualifiedName:
        CSharp: Chroma.Entity.HasChildren()
        VB: Chroma.Entity.HasChildren()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: HasChildren
        path: ''
        startLine: 436
      summary: "\nChecks whether the given entity has children.\n"
      example: []
      syntax:
        content:
          CSharp: public bool HasChildren()
          VB: Public Function HasChildren As Boolean
        return:
          type: System.Boolean
          description: ''
      overload: Chroma.Entity.HasChildren*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Entity.NumberChildren
      commentId: M:Chroma.Entity.NumberChildren
      language: CSharp
      name:
        CSharp: NumberChildren()
        VB: NumberChildren()
      nameWithType:
        CSharp: Entity.NumberChildren()
        VB: Entity.NumberChildren()
      qualifiedName:
        CSharp: Chroma.Entity.NumberChildren()
        VB: Chroma.Entity.NumberChildren()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: NumberChildren
        path: ''
        startLine: 445
      summary: "\nGets the number of children for this entity.\n"
      example: []
      syntax:
        content:
          CSharp: public uint NumberChildren()
          VB: Public Function NumberChildren As UInteger
        return:
          type: System.UInt32
          description: ''
      overload: Chroma.Entity.NumberChildren*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Entity.GetAbsolutePosition
      commentId: M:Chroma.Entity.GetAbsolutePosition
      language: CSharp
      name:
        CSharp: GetAbsolutePosition()
        VB: GetAbsolutePosition()
      nameWithType:
        CSharp: Entity.GetAbsolutePosition()
        VB: Entity.GetAbsolutePosition()
      qualifiedName:
        CSharp: Chroma.Entity.GetAbsolutePosition()
        VB: Chroma.Entity.GetAbsolutePosition()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetAbsolutePosition
        path: ''
        startLine: 454
      summary: "\nCalculates the absolute position of an entity. This applies if this entity has a parent.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 GetAbsolutePosition()
          VB: Public Function GetAbsolutePosition As Vector2
        return:
          type: Chroma.Vector2
          description: ''
      overload: Chroma.Entity.GetAbsolutePosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Entity.SetAbsolutePosition(Chroma.Vector2)
      commentId: M:Chroma.Entity.SetAbsolutePosition(Chroma.Vector2)
      language: CSharp
      name:
        CSharp: SetAbsolutePosition(Vector2)
        VB: SetAbsolutePosition(Vector2)
      nameWithType:
        CSharp: Entity.SetAbsolutePosition(Vector2)
        VB: Entity.SetAbsolutePosition(Vector2)
      qualifiedName:
        CSharp: Chroma.Entity.SetAbsolutePosition(Chroma.Vector2)
        VB: Chroma.Entity.SetAbsolutePosition(Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: SetAbsolutePosition
        path: ''
        startLine: 466
      summary: "\nSets an absolute position of an entity. \nIf this entity has a parent, this will set this entity&apos;s transform relative to the parent&apos;s transform.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetAbsolutePosition(Vector2 position)
          VB: Public Sub SetAbsolutePosition(position As Vector2)
        parameters:
        - id: position
          type: Chroma.Vector2
          description: ''
      overload: Chroma.Entity.SetAbsolutePosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Entity.PreInit
      commentId: M:Chroma.Entity.PreInit
      language: CSharp
      name:
        CSharp: PreInit()
        VB: PreInit()
      nameWithType:
        CSharp: Entity.PreInit()
        VB: Entity.PreInit()
      qualifiedName:
        CSharp: Chroma.Entity.PreInit()
        VB: Chroma.Entity.PreInit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: PreInit
        path: ''
        startLine: 474
      summary: "\nPre-initialization function. Called before init, after the scene is loaded.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void PreInit()
          VB: Public Overridable Sub PreInit
      overload: Chroma.Entity.PreInit*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Chroma.Entity.Init
      commentId: M:Chroma.Entity.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: Entity.Init()
        VB: Entity.Init()
      qualifiedName:
        CSharp: Chroma.Entity.Init()
        VB: Chroma.Entity.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Init
        path: ''
        startLine: 479
      summary: "\nInitialization function. Called directly after <code>PreInit()</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Init()
          VB: Public Overridable Sub Init
      overload: Chroma.Entity.Init*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Chroma.Entity.PostInit
      commentId: M:Chroma.Entity.PostInit
      language: CSharp
      name:
        CSharp: PostInit()
        VB: PostInit()
      nameWithType:
        CSharp: Entity.PostInit()
        VB: Entity.PostInit()
      qualifiedName:
        CSharp: Chroma.Entity.PostInit()
        VB: Chroma.Entity.PostInit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: PostInit
        path: ''
        startLine: 484
      summary: "\nPost-initialization function. Called directly after <code>Init()</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void PostInit()
          VB: Public Overridable Sub PostInit
      overload: Chroma.Entity.PostInit*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Chroma.Entity.EarlyStart
      commentId: M:Chroma.Entity.EarlyStart
      language: CSharp
      name:
        CSharp: EarlyStart()
        VB: EarlyStart()
      nameWithType:
        CSharp: Entity.EarlyStart()
        VB: Entity.EarlyStart()
      qualifiedName:
        CSharp: Chroma.Entity.EarlyStart()
        VB: Chroma.Entity.EarlyStart()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: EarlyStart
        path: ''
        startLine: 487
      syntax:
        content:
          CSharp: public virtual void EarlyStart()
          VB: Public Overridable Sub EarlyStart
      overload: Chroma.Entity.EarlyStart*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Chroma.Entity.Start
      commentId: M:Chroma.Entity.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: Entity.Start()
        VB: Entity.Start()
      qualifiedName:
        CSharp: Chroma.Entity.Start()
        VB: Chroma.Entity.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Start
        path: ''
        startLine: 488
      syntax:
        content:
          CSharp: public virtual void Start()
          VB: Public Overridable Sub Start
      overload: Chroma.Entity.Start*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Chroma.Entity.LateStart
      commentId: M:Chroma.Entity.LateStart
      language: CSharp
      name:
        CSharp: LateStart()
        VB: LateStart()
      nameWithType:
        CSharp: Entity.LateStart()
        VB: Entity.LateStart()
      qualifiedName:
        CSharp: Chroma.Entity.LateStart()
        VB: Chroma.Entity.LateStart()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: LateStart
        path: ''
        startLine: 489
      syntax:
        content:
          CSharp: public virtual void LateStart()
          VB: Public Overridable Sub LateStart
      overload: Chroma.Entity.LateStart*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Chroma.Entity.EarlyUpdate
      commentId: M:Chroma.Entity.EarlyUpdate
      language: CSharp
      name:
        CSharp: EarlyUpdate()
        VB: EarlyUpdate()
      nameWithType:
        CSharp: Entity.EarlyUpdate()
        VB: Entity.EarlyUpdate()
      qualifiedName:
        CSharp: Chroma.Entity.EarlyUpdate()
        VB: Chroma.Entity.EarlyUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: EarlyUpdate
        path: ''
        startLine: 495
      summary: "\nEarly-Update function. Called once per frame at the begining of the frame.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void EarlyUpdate()
          VB: Public Overridable Sub EarlyUpdate
      overload: Chroma.Entity.EarlyUpdate*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Chroma.Entity.Update
      commentId: M:Chroma.Entity.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: Entity.Update()
        VB: Entity.Update()
      qualifiedName:
        CSharp: Chroma.Entity.Update()
        VB: Chroma.Entity.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Update
        path: ''
        startLine: 500
      summary: "\nUpdate function. Called once per frame, directly after <code>EarlyUpdate()</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Update()
          VB: Public Overridable Sub Update
      overload: Chroma.Entity.Update*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Chroma.Entity.LateUpdate
      commentId: M:Chroma.Entity.LateUpdate
      language: CSharp
      name:
        CSharp: LateUpdate()
        VB: LateUpdate()
      nameWithType:
        CSharp: Entity.LateUpdate()
        VB: Entity.LateUpdate()
      qualifiedName:
        CSharp: Chroma.Entity.LateUpdate()
        VB: Chroma.Entity.LateUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: LateUpdate
        path: ''
        startLine: 505
      summary: "\nLate-Update function. Called once per frame, directly after <code>Update()</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void LateUpdate()
          VB: Public Overridable Sub LateUpdate
      overload: Chroma.Entity.LateUpdate*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Chroma.Entity.InternalUpdate
      commentId: M:Chroma.Entity.InternalUpdate
      language: CSharp
      name:
        CSharp: InternalUpdate()
        VB: InternalUpdate()
      nameWithType:
        CSharp: Entity.InternalUpdate()
        VB: Entity.InternalUpdate()
      qualifiedName:
        CSharp: Chroma.Entity.InternalUpdate()
        VB: Chroma.Entity.InternalUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: InternalUpdate
        path: ''
        startLine: 508
      syntax:
        content:
          CSharp: void InternalUpdate()
          VB: Sub InternalUpdate
      overload: Chroma.Entity.InternalUpdate*
      modifiers:
        CSharp: []
        VB: []
    - id: Chroma.Entity.CreateComponent_Native(System.UInt64,System.Type)
      commentId: M:Chroma.Entity.CreateComponent_Native(System.UInt64,System.Type)
      language: CSharp
      name:
        CSharp: CreateComponent_Native(UInt64, Type)
        VB: CreateComponent_Native(UInt64, Type)
      nameWithType:
        CSharp: Entity.CreateComponent_Native(UInt64, Type)
        VB: Entity.CreateComponent_Native(UInt64, Type)
      qualifiedName:
        CSharp: Chroma.Entity.CreateComponent_Native(System.UInt64, System.Type)
        VB: Chroma.Entity.CreateComponent_Native(System.UInt64, System.Type)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void CreateComponent_Native(ulong entityID, Type type)
          VB: Shared Sub CreateComponent_Native(entityID As ULong, type As Type)
        parameters:
        - id: entityID
          type: System.UInt64
        - id: type
          type: System.Type
      overload: Chroma.Entity.CreateComponent_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Entity.HasComponent_Native(System.UInt64,System.Type)
      commentId: M:Chroma.Entity.HasComponent_Native(System.UInt64,System.Type)
      language: CSharp
      name:
        CSharp: HasComponent_Native(UInt64, Type)
        VB: HasComponent_Native(UInt64, Type)
      nameWithType:
        CSharp: Entity.HasComponent_Native(UInt64, Type)
        VB: Entity.HasComponent_Native(UInt64, Type)
      qualifiedName:
        CSharp: Chroma.Entity.HasComponent_Native(System.UInt64, System.Type)
        VB: Chroma.Entity.HasComponent_Native(System.UInt64, System.Type)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern bool HasComponent_Native(ulong entityID, Type type)
          VB: Shared Function HasComponent_Native(entityID As ULong, type As Type) As Boolean
        parameters:
        - id: entityID
          type: System.UInt64
        - id: type
          type: System.Type
        return:
          type: System.Boolean
      overload: Chroma.Entity.HasComponent_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Entity.FindEntityByName_Native(System.String)
      commentId: M:Chroma.Entity.FindEntityByName_Native(System.String)
      language: CSharp
      name:
        CSharp: FindEntityByName_Native(String)
        VB: FindEntityByName_Native(String)
      nameWithType:
        CSharp: Entity.FindEntityByName_Native(String)
        VB: Entity.FindEntityByName_Native(String)
      qualifiedName:
        CSharp: Chroma.Entity.FindEntityByName_Native(System.String)
        VB: Chroma.Entity.FindEntityByName_Native(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern ulong FindEntityByName_Native(string name)
          VB: Shared Function FindEntityByName_Native(name As String) As ULong
        parameters:
        - id: name
          type: System.String
        return:
          type: System.UInt64
      overload: Chroma.Entity.FindEntityByName_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Entity.GetChildren_Native(System.UInt64)
      commentId: M:Chroma.Entity.GetChildren_Native(System.UInt64)
      language: CSharp
      name:
        CSharp: GetChildren_Native(UInt64)
        VB: GetChildren_Native(UInt64)
      nameWithType:
        CSharp: Entity.GetChildren_Native(UInt64)
        VB: Entity.GetChildren_Native(UInt64)
      qualifiedName:
        CSharp: Chroma.Entity.GetChildren_Native(System.UInt64)
        VB: Chroma.Entity.GetChildren_Native(System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern List<ulong> GetChildren_Native(ulong entityID)
          VB: Shared Function GetChildren_Native(entityID As ULong) As List(Of ULong)
        parameters:
        - id: entityID
          type: System.UInt64
        return:
          type: List{System.UInt64}
      overload: Chroma.Entity.GetChildren_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Entity.GetChildByName_Native(System.UInt64,System.String)
      commentId: M:Chroma.Entity.GetChildByName_Native(System.UInt64,System.String)
      language: CSharp
      name:
        CSharp: GetChildByName_Native(UInt64, String)
        VB: GetChildByName_Native(UInt64, String)
      nameWithType:
        CSharp: Entity.GetChildByName_Native(UInt64, String)
        VB: Entity.GetChildByName_Native(UInt64, String)
      qualifiedName:
        CSharp: Chroma.Entity.GetChildByName_Native(System.UInt64, System.String)
        VB: Chroma.Entity.GetChildByName_Native(System.UInt64, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern ulong GetChildByName_Native(ulong entityID, string name)
          VB: Shared Function GetChildByName_Native(entityID As ULong, name As String) As ULong
        parameters:
        - id: entityID
          type: System.UInt64
        - id: name
          type: System.String
        return:
          type: System.UInt64
      overload: Chroma.Entity.GetChildByName_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Entity.GetFirstChild_Native(System.UInt64)
      commentId: M:Chroma.Entity.GetFirstChild_Native(System.UInt64)
      language: CSharp
      name:
        CSharp: GetFirstChild_Native(UInt64)
        VB: GetFirstChild_Native(UInt64)
      nameWithType:
        CSharp: Entity.GetFirstChild_Native(UInt64)
        VB: Entity.GetFirstChild_Native(UInt64)
      qualifiedName:
        CSharp: Chroma.Entity.GetFirstChild_Native(System.UInt64)
        VB: Chroma.Entity.GetFirstChild_Native(System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern ulong GetFirstChild_Native(ulong entityID)
          VB: Shared Function GetFirstChild_Native(entityID As ULong) As ULong
        parameters:
        - id: entityID
          type: System.UInt64
        return:
          type: System.UInt64
      overload: Chroma.Entity.GetFirstChild_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Entity.HasChildren_Native(System.UInt64)
      commentId: M:Chroma.Entity.HasChildren_Native(System.UInt64)
      language: CSharp
      name:
        CSharp: HasChildren_Native(UInt64)
        VB: HasChildren_Native(UInt64)
      nameWithType:
        CSharp: Entity.HasChildren_Native(UInt64)
        VB: Entity.HasChildren_Native(UInt64)
      qualifiedName:
        CSharp: Chroma.Entity.HasChildren_Native(System.UInt64)
        VB: Chroma.Entity.HasChildren_Native(System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern bool HasChildren_Native(ulong entityID)
          VB: Shared Function HasChildren_Native(entityID As ULong) As Boolean
        parameters:
        - id: entityID
          type: System.UInt64
        return:
          type: System.Boolean
      overload: Chroma.Entity.HasChildren_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Entity.NumChildren_Native(System.UInt64)
      commentId: M:Chroma.Entity.NumChildren_Native(System.UInt64)
      language: CSharp
      name:
        CSharp: NumChildren_Native(UInt64)
        VB: NumChildren_Native(UInt64)
      nameWithType:
        CSharp: Entity.NumChildren_Native(UInt64)
        VB: Entity.NumChildren_Native(UInt64)
      qualifiedName:
        CSharp: Chroma.Entity.NumChildren_Native(System.UInt64)
        VB: Chroma.Entity.NumChildren_Native(System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern uint NumChildren_Native(ulong entityID)
          VB: Shared Function NumChildren_Native(entityID As ULong) As UInteger
        parameters:
        - id: entityID
          type: System.UInt64
        return:
          type: System.UInt32
      overload: Chroma.Entity.NumChildren_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Entity.GetAbsolutePosition_Native(System.UInt64,Chroma.Vector2@)
      commentId: M:Chroma.Entity.GetAbsolutePosition_Native(System.UInt64,Chroma.Vector2@)
      language: CSharp
      name:
        CSharp: GetAbsolutePosition_Native(UInt64, out Vector2)
        VB: GetAbsolutePosition_Native(UInt64, ByRef Vector2)
      nameWithType:
        CSharp: Entity.GetAbsolutePosition_Native(UInt64, out Vector2)
        VB: Entity.GetAbsolutePosition_Native(UInt64, ByRef Vector2)
      qualifiedName:
        CSharp: Chroma.Entity.GetAbsolutePosition_Native(System.UInt64, out Chroma.Vector2)
        VB: Chroma.Entity.GetAbsolutePosition_Native(System.UInt64, ByRef Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void GetAbsolutePosition_Native(ulong entityID, out Vector2 result)
          VB: Shared Sub GetAbsolutePosition_Native(entityID As ULong, ByRef result As Vector2)
        parameters:
        - id: entityID
          type: System.UInt64
        - id: result
          type: Chroma.Vector2
      overload: Chroma.Entity.GetAbsolutePosition_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Entity.SetAbsolutePosition_Native(System.UInt64,Chroma.Vector2)
      commentId: M:Chroma.Entity.SetAbsolutePosition_Native(System.UInt64,Chroma.Vector2)
      language: CSharp
      name:
        CSharp: SetAbsolutePosition_Native(UInt64, Vector2)
        VB: SetAbsolutePosition_Native(UInt64, Vector2)
      nameWithType:
        CSharp: Entity.SetAbsolutePosition_Native(UInt64, Vector2)
        VB: Entity.SetAbsolutePosition_Native(UInt64, Vector2)
      qualifiedName:
        CSharp: Chroma.Entity.SetAbsolutePosition_Native(System.UInt64, Chroma.Vector2)
        VB: Chroma.Entity.SetAbsolutePosition_Native(System.UInt64, Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void SetAbsolutePosition_Native(ulong entityID, Vector2 position)
          VB: Shared Sub SetAbsolutePosition_Native(entityID As ULong, position As Vector2)
        parameters:
        - id: entityID
          type: System.UInt64
        - id: position
          type: Chroma.Vector2
      overload: Chroma.Entity.SetAbsolutePosition_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
  - id: Chroma.Input
    commentId: T:Chroma.Input
    language: CSharp
    name:
      CSharp: Input
      VB: Input
    nameWithType:
      CSharp: Input
      VB: Input
    qualifiedName:
      CSharp: Chroma.Input
      VB: Chroma.Input
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Input
      path: ''
      startLine: 565
    syntax:
      content:
        CSharp: public static class Input
        VB: Public Module Input
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Chroma.Input.PrimaryGamepad
      commentId: F:Chroma.Input.PrimaryGamepad
      language: CSharp
      name:
        CSharp: PrimaryGamepad
        VB: PrimaryGamepad
      nameWithType:
        CSharp: Input.PrimaryGamepad
        VB: Input.PrimaryGamepad
      qualifiedName:
        CSharp: Chroma.Input.PrimaryGamepad
        VB: Chroma.Input.PrimaryGamepad
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: PrimaryGamepad
        path: ''
        startLine: 788
      syntax:
        content:
          CSharp: static Joystick PrimaryGamepad
          VB: Shared PrimaryGamepad As Joystick
        return:
          type: Joystick
      modifiers:
        CSharp:
        - static
        VB:
        - Shared
    - id: Chroma.Input.IsPressed(Chroma.Input.Key)
      commentId: M:Chroma.Input.IsPressed(Chroma.Input.Key)
      language: CSharp
      name:
        CSharp: IsPressed(Input.Key)
        VB: IsPressed(Input.Key)
      nameWithType:
        CSharp: Input.IsPressed(Input.Key)
        VB: Input.IsPressed(Input.Key)
      qualifiedName:
        CSharp: Chroma.Input.IsPressed(Chroma.Input.Key)
        VB: Chroma.Input.IsPressed(Chroma.Input.Key)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: IsPressed
        path: ''
        startLine: 790
      syntax:
        content:
          CSharp: public static bool IsPressed(Input.Key key)
          VB: Public Shared Function IsPressed(key As Input.Key) As Boolean
        parameters:
        - id: key
          type: Chroma.Input.Key
        return:
          type: System.Boolean
      overload: Chroma.Input.IsPressed*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.IsPressed(Chroma.Input.Mouse)
      commentId: M:Chroma.Input.IsPressed(Chroma.Input.Mouse)
      language: CSharp
      name:
        CSharp: IsPressed(Input.Mouse)
        VB: IsPressed(Input.Mouse)
      nameWithType:
        CSharp: Input.IsPressed(Input.Mouse)
        VB: Input.IsPressed(Input.Mouse)
      qualifiedName:
        CSharp: Chroma.Input.IsPressed(Chroma.Input.Mouse)
        VB: Chroma.Input.IsPressed(Chroma.Input.Mouse)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: IsPressed
        path: ''
        startLine: 795
      syntax:
        content:
          CSharp: public static bool IsPressed(Input.Mouse button)
          VB: Public Shared Function IsPressed(button As Input.Mouse) As Boolean
        parameters:
        - id: button
          type: Chroma.Input.Mouse
        return:
          type: System.Boolean
      overload: Chroma.Input.IsPressed*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.IsPressed(Chroma.Input.GamepadButton)
      commentId: M:Chroma.Input.IsPressed(Chroma.Input.GamepadButton)
      language: CSharp
      name:
        CSharp: IsPressed(Input.GamepadButton)
        VB: IsPressed(Input.GamepadButton)
      nameWithType:
        CSharp: Input.IsPressed(Input.GamepadButton)
        VB: Input.IsPressed(Input.GamepadButton)
      qualifiedName:
        CSharp: Chroma.Input.IsPressed(Chroma.Input.GamepadButton)
        VB: Chroma.Input.IsPressed(Chroma.Input.GamepadButton)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: IsPressed
        path: ''
        startLine: 800
      syntax:
        content:
          CSharp: public static bool IsPressed(Input.GamepadButton button)
          VB: Public Shared Function IsPressed(button As Input.GamepadButton) As Boolean
        parameters:
        - id: button
          type: Chroma.Input.GamepadButton
        return:
          type: System.Boolean
      overload: Chroma.Input.IsPressed*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.IsPressed(Chroma.Input.GamepadButton,Chroma.Input.Gamepad)
      commentId: M:Chroma.Input.IsPressed(Chroma.Input.GamepadButton,Chroma.Input.Gamepad)
      language: CSharp
      name:
        CSharp: IsPressed(Input.GamepadButton, Input.Gamepad)
        VB: IsPressed(Input.GamepadButton, Input.Gamepad)
      nameWithType:
        CSharp: Input.IsPressed(Input.GamepadButton, Input.Gamepad)
        VB: Input.IsPressed(Input.GamepadButton, Input.Gamepad)
      qualifiedName:
        CSharp: Chroma.Input.IsPressed(Chroma.Input.GamepadButton, Chroma.Input.Gamepad)
        VB: Chroma.Input.IsPressed(Chroma.Input.GamepadButton, Chroma.Input.Gamepad)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: IsPressed
        path: ''
        startLine: 805
      syntax:
        content:
          CSharp: public static bool IsPressed(Input.GamepadButton button, Input.Gamepad gamepad)
          VB: Public Shared Function IsPressed(button As Input.GamepadButton, gamepad As Input.Gamepad) As Boolean
        parameters:
        - id: button
          type: Chroma.Input.GamepadButton
        - id: gamepad
          type: Chroma.Input.Gamepad
        return:
          type: System.Boolean
      overload: Chroma.Input.IsPressed*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.GetMousePos
      commentId: M:Chroma.Input.GetMousePos
      language: CSharp
      name:
        CSharp: GetMousePos()
        VB: GetMousePos()
      nameWithType:
        CSharp: Input.GetMousePos()
        VB: Input.GetMousePos()
      qualifiedName:
        CSharp: Chroma.Input.GetMousePos()
        VB: Chroma.Input.GetMousePos()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetMousePos
        path: ''
        startLine: 813
      syntax:
        content:
          CSharp: public static Vector2 GetMousePos()
          VB: Public Shared Function GetMousePos As Vector2
        return:
          type: Chroma.Vector2
      overload: Chroma.Input.GetMousePos*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.GetMouseX
      commentId: M:Chroma.Input.GetMouseX
      language: CSharp
      name:
        CSharp: GetMouseX()
        VB: GetMouseX()
      nameWithType:
        CSharp: Input.GetMouseX()
        VB: Input.GetMouseX()
      qualifiedName:
        CSharp: Chroma.Input.GetMouseX()
        VB: Chroma.Input.GetMouseX()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetMouseX
        path: ''
        startLine: 820
      syntax:
        content:
          CSharp: public static float GetMouseX()
          VB: Public Shared Function GetMouseX As Single
        return:
          type: System.Single
      overload: Chroma.Input.GetMouseX*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.GetMouseY
      commentId: M:Chroma.Input.GetMouseY
      language: CSharp
      name:
        CSharp: GetMouseY()
        VB: GetMouseY()
      nameWithType:
        CSharp: Input.GetMouseY()
        VB: Input.GetMouseY()
      qualifiedName:
        CSharp: Chroma.Input.GetMouseY()
        VB: Chroma.Input.GetMouseY()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetMouseY
        path: ''
        startLine: 825
      syntax:
        content:
          CSharp: public static float GetMouseY()
          VB: Public Shared Function GetMouseY As Single
        return:
          type: System.Single
      overload: Chroma.Input.GetMouseY*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.IsJoystickConnected
      commentId: M:Chroma.Input.IsJoystickConnected
      language: CSharp
      name:
        CSharp: IsJoystickConnected()
        VB: IsJoystickConnected()
      nameWithType:
        CSharp: Input.IsJoystickConnected()
        VB: Input.IsJoystickConnected()
      qualifiedName:
        CSharp: Chroma.Input.IsJoystickConnected()
        VB: Chroma.Input.IsJoystickConnected()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: IsJoystickConnected
        path: ''
        startLine: 830
      syntax:
        content:
          CSharp: public static bool IsJoystickConnected()
          VB: Public Shared Function IsJoystickConnected As Boolean
        return:
          type: System.Boolean
      overload: Chroma.Input.IsJoystickConnected*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.IsJoystickConnected(Chroma.Input.Gamepad)
      commentId: M:Chroma.Input.IsJoystickConnected(Chroma.Input.Gamepad)
      language: CSharp
      name:
        CSharp: IsJoystickConnected(Input.Gamepad)
        VB: IsJoystickConnected(Input.Gamepad)
      nameWithType:
        CSharp: Input.IsJoystickConnected(Input.Gamepad)
        VB: Input.IsJoystickConnected(Input.Gamepad)
      qualifiedName:
        CSharp: Chroma.Input.IsJoystickConnected(Chroma.Input.Gamepad)
        VB: Chroma.Input.IsJoystickConnected(Chroma.Input.Gamepad)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: IsJoystickConnected
        path: ''
        startLine: 835
      syntax:
        content:
          CSharp: public static bool IsJoystickConnected(Input.Gamepad gamepad)
          VB: Public Shared Function IsJoystickConnected(gamepad As Input.Gamepad) As Boolean
        parameters:
        - id: gamepad
          type: Chroma.Input.Gamepad
        return:
          type: System.Boolean
      overload: Chroma.Input.IsJoystickConnected*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.GetFirstConnectedGamepad
      commentId: M:Chroma.Input.GetFirstConnectedGamepad
      language: CSharp
      name:
        CSharp: GetFirstConnectedGamepad()
        VB: GetFirstConnectedGamepad()
      nameWithType:
        CSharp: Input.GetFirstConnectedGamepad()
        VB: Input.GetFirstConnectedGamepad()
      qualifiedName:
        CSharp: Chroma.Input.GetFirstConnectedGamepad()
        VB: Chroma.Input.GetFirstConnectedGamepad()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetFirstConnectedGamepad
        path: ''
        startLine: 840
      syntax:
        content:
          CSharp: public static Input.Gamepad GetFirstConnectedGamepad()
          VB: Public Shared Function GetFirstConnectedGamepad As Input.Gamepad
        return:
          type: Chroma.Input.Gamepad
      overload: Chroma.Input.GetFirstConnectedGamepad*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.GetAllConnectedControllers
      commentId: M:Chroma.Input.GetAllConnectedControllers
      language: CSharp
      name:
        CSharp: GetAllConnectedControllers()
        VB: GetAllConnectedControllers()
      nameWithType:
        CSharp: Input.GetAllConnectedControllers()
        VB: Input.GetAllConnectedControllers()
      qualifiedName:
        CSharp: Chroma.Input.GetAllConnectedControllers()
        VB: Chroma.Input.GetAllConnectedControllers()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetAllConnectedControllers
        path: ''
        startLine: 845
      syntax:
        content:
          CSharp: public static List<Input.Gamepad> GetAllConnectedControllers()
          VB: Public Shared Function GetAllConnectedControllers As List(Of Input.Gamepad)
        return:
          type: List{Chroma.Input.Gamepad}
      overload: Chroma.Input.GetAllConnectedControllers*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.SetPrimaryGamepad
      commentId: M:Chroma.Input.SetPrimaryGamepad
      language: CSharp
      name:
        CSharp: SetPrimaryGamepad()
        VB: SetPrimaryGamepad()
      nameWithType:
        CSharp: Input.SetPrimaryGamepad()
        VB: Input.SetPrimaryGamepad()
      qualifiedName:
        CSharp: Chroma.Input.SetPrimaryGamepad()
        VB: Chroma.Input.SetPrimaryGamepad()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: SetPrimaryGamepad
        path: ''
        startLine: 850
      syntax:
        content:
          CSharp: public static Input.Gamepad SetPrimaryGamepad()
          VB: Public Shared Function SetPrimaryGamepad As Input.Gamepad
        return:
          type: Chroma.Input.Gamepad
      overload: Chroma.Input.SetPrimaryGamepad*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.GetGamepadAxis
      commentId: M:Chroma.Input.GetGamepadAxis
      language: CSharp
      name:
        CSharp: GetGamepadAxis()
        VB: GetGamepadAxis()
      nameWithType:
        CSharp: Input.GetGamepadAxis()
        VB: Input.GetGamepadAxis()
      qualifiedName:
        CSharp: Chroma.Input.GetGamepadAxis()
        VB: Chroma.Input.GetGamepadAxis()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetGamepadAxis
        path: ''
        startLine: 855
      syntax:
        content:
          CSharp: public static List<float> GetGamepadAxis()
          VB: Public Shared Function GetGamepadAxis As List(Of Single)
        return:
          type: List{System.Single}
      overload: Chroma.Input.GetGamepadAxis*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.GetGamepadAxis(Chroma.Input.Gamepad)
      commentId: M:Chroma.Input.GetGamepadAxis(Chroma.Input.Gamepad)
      language: CSharp
      name:
        CSharp: GetGamepadAxis(Input.Gamepad)
        VB: GetGamepadAxis(Input.Gamepad)
      nameWithType:
        CSharp: Input.GetGamepadAxis(Input.Gamepad)
        VB: Input.GetGamepadAxis(Input.Gamepad)
      qualifiedName:
        CSharp: Chroma.Input.GetGamepadAxis(Chroma.Input.Gamepad)
        VB: Chroma.Input.GetGamepadAxis(Chroma.Input.Gamepad)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetGamepadAxis
        path: ''
        startLine: 860
      syntax:
        content:
          CSharp: public static List<float> GetGamepadAxis(Input.Gamepad gamepad)
          VB: Public Shared Function GetGamepadAxis(gamepad As Input.Gamepad) As List(Of Single)
        parameters:
        - id: gamepad
          type: Chroma.Input.Gamepad
        return:
          type: List{System.Single}
      overload: Chroma.Input.GetGamepadAxis*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.GetGamepadConnectionState
      commentId: M:Chroma.Input.GetGamepadConnectionState
      language: CSharp
      name:
        CSharp: GetGamepadConnectionState()
        VB: GetGamepadConnectionState()
      nameWithType:
        CSharp: Input.GetGamepadConnectionState()
        VB: Input.GetGamepadConnectionState()
      qualifiedName:
        CSharp: Chroma.Input.GetGamepadConnectionState()
        VB: Chroma.Input.GetGamepadConnectionState()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetGamepadConnectionState
        path: ''
        startLine: 865
      syntax:
        content:
          CSharp: public static Input.ConnectionState GetGamepadConnectionState()
          VB: Public Shared Function GetGamepadConnectionState As Input.ConnectionState
        return:
          type: Chroma.Input.ConnectionState
      overload: Chroma.Input.GetGamepadConnectionState*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.GetGamepadConnectionState(Chroma.Input.Gamepad)
      commentId: M:Chroma.Input.GetGamepadConnectionState(Chroma.Input.Gamepad)
      language: CSharp
      name:
        CSharp: GetGamepadConnectionState(Input.Gamepad)
        VB: GetGamepadConnectionState(Input.Gamepad)
      nameWithType:
        CSharp: Input.GetGamepadConnectionState(Input.Gamepad)
        VB: Input.GetGamepadConnectionState(Input.Gamepad)
      qualifiedName:
        CSharp: Chroma.Input.GetGamepadConnectionState(Chroma.Input.Gamepad)
        VB: Chroma.Input.GetGamepadConnectionState(Chroma.Input.Gamepad)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetGamepadConnectionState
        path: ''
        startLine: 870
      syntax:
        content:
          CSharp: public static Input.ConnectionState GetGamepadConnectionState(Input.Gamepad gamepad)
          VB: Public Shared Function GetGamepadConnectionState(gamepad As Input.Gamepad) As Input.ConnectionState
        parameters:
        - id: gamepad
          type: Chroma.Input.Gamepad
        return:
          type: Chroma.Input.ConnectionState
      overload: Chroma.Input.GetGamepadConnectionState*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.GetGamepadName
      commentId: M:Chroma.Input.GetGamepadName
      language: CSharp
      name:
        CSharp: GetGamepadName()
        VB: GetGamepadName()
      nameWithType:
        CSharp: Input.GetGamepadName()
        VB: Input.GetGamepadName()
      qualifiedName:
        CSharp: Chroma.Input.GetGamepadName()
        VB: Chroma.Input.GetGamepadName()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetGamepadName
        path: ''
        startLine: 875
      syntax:
        content:
          CSharp: public static string GetGamepadName()
          VB: Public Shared Function GetGamepadName As String
        return:
          type: System.String
      overload: Chroma.Input.GetGamepadName*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.GetGamepadName(Chroma.Input.Gamepad)
      commentId: M:Chroma.Input.GetGamepadName(Chroma.Input.Gamepad)
      language: CSharp
      name:
        CSharp: GetGamepadName(Input.Gamepad)
        VB: GetGamepadName(Input.Gamepad)
      nameWithType:
        CSharp: Input.GetGamepadName(Input.Gamepad)
        VB: Input.GetGamepadName(Input.Gamepad)
      qualifiedName:
        CSharp: Chroma.Input.GetGamepadName(Chroma.Input.Gamepad)
        VB: Chroma.Input.GetGamepadName(Chroma.Input.Gamepad)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetGamepadName
        path: ''
        startLine: 880
      syntax:
        content:
          CSharp: public static string GetGamepadName(Input.Gamepad gamepad)
          VB: Public Shared Function GetGamepadName(gamepad As Input.Gamepad) As String
        parameters:
        - id: gamepad
          type: Chroma.Input.Gamepad
        return:
          type: System.String
      overload: Chroma.Input.GetGamepadName*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.SetGamepadConnectionCallback(System.Action{Chroma.Input.Gamepad})
      commentId: M:Chroma.Input.SetGamepadConnectionCallback(System.Action{Chroma.Input.Gamepad})
      language: CSharp
      name:
        CSharp: SetGamepadConnectionCallback(Action<Input.Gamepad>)
        VB: SetGamepadConnectionCallback(Action(Of Input.Gamepad))
      nameWithType:
        CSharp: Input.SetGamepadConnectionCallback(Action<Input.Gamepad>)
        VB: Input.SetGamepadConnectionCallback(Action(Of Input.Gamepad))
      qualifiedName:
        CSharp: Chroma.Input.SetGamepadConnectionCallback(System.Action<Chroma.Input.Gamepad>)
        VB: Chroma.Input.SetGamepadConnectionCallback(System.Action(Of Chroma.Input.Gamepad))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: SetGamepadConnectionCallback
        path: ''
        startLine: 885
      syntax:
        content:
          CSharp: public static void SetGamepadConnectionCallback(Action<Input.Gamepad> action)
          VB: Public Shared Sub SetGamepadConnectionCallback(action As Action(Of Input.Gamepad))
        parameters:
        - id: action
          type: System.Action{Chroma.Input.Gamepad}
      overload: Chroma.Input.SetGamepadConnectionCallback*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.SetGamepadDisconnectionCallback(System.Action{Chroma.Input.Gamepad})
      commentId: M:Chroma.Input.SetGamepadDisconnectionCallback(System.Action{Chroma.Input.Gamepad})
      language: CSharp
      name:
        CSharp: SetGamepadDisconnectionCallback(Action<Input.Gamepad>)
        VB: SetGamepadDisconnectionCallback(Action(Of Input.Gamepad))
      nameWithType:
        CSharp: Input.SetGamepadDisconnectionCallback(Action<Input.Gamepad>)
        VB: Input.SetGamepadDisconnectionCallback(Action(Of Input.Gamepad))
      qualifiedName:
        CSharp: Chroma.Input.SetGamepadDisconnectionCallback(System.Action<Chroma.Input.Gamepad>)
        VB: Chroma.Input.SetGamepadDisconnectionCallback(System.Action(Of Chroma.Input.Gamepad))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: SetGamepadDisconnectionCallback
        path: ''
        startLine: 890
      syntax:
        content:
          CSharp: public static void SetGamepadDisconnectionCallback(Action<Input.Gamepad> action)
          VB: Public Shared Sub SetGamepadDisconnectionCallback(action As Action(Of Input.Gamepad))
        parameters:
        - id: action
          type: System.Action{Chroma.Input.Gamepad}
      overload: Chroma.Input.SetGamepadDisconnectionCallback*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Input.IsKeyPressed_Native(Chroma.Input.Key)
      commentId: M:Chroma.Input.IsKeyPressed_Native(Chroma.Input.Key)
      language: CSharp
      name:
        CSharp: IsKeyPressed_Native(Input.Key)
        VB: IsKeyPressed_Native(Input.Key)
      nameWithType:
        CSharp: Input.IsKeyPressed_Native(Input.Key)
        VB: Input.IsKeyPressed_Native(Input.Key)
      qualifiedName:
        CSharp: Chroma.Input.IsKeyPressed_Native(Chroma.Input.Key)
        VB: Chroma.Input.IsKeyPressed_Native(Chroma.Input.Key)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern bool IsKeyPressed_Native(Input.Key key)
          VB: Shared Function IsKeyPressed_Native(key As Input.Key) As Boolean
        parameters:
        - id: key
          type: Chroma.Input.Key
        return:
          type: System.Boolean
      overload: Chroma.Input.IsKeyPressed_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Input.IsMouseButtonPressed_Native(Chroma.Input.Mouse)
      commentId: M:Chroma.Input.IsMouseButtonPressed_Native(Chroma.Input.Mouse)
      language: CSharp
      name:
        CSharp: IsMouseButtonPressed_Native(Input.Mouse)
        VB: IsMouseButtonPressed_Native(Input.Mouse)
      nameWithType:
        CSharp: Input.IsMouseButtonPressed_Native(Input.Mouse)
        VB: Input.IsMouseButtonPressed_Native(Input.Mouse)
      qualifiedName:
        CSharp: Chroma.Input.IsMouseButtonPressed_Native(Chroma.Input.Mouse)
        VB: Chroma.Input.IsMouseButtonPressed_Native(Chroma.Input.Mouse)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern bool IsMouseButtonPressed_Native(Input.Mouse button)
          VB: Shared Function IsMouseButtonPressed_Native(button As Input.Mouse) As Boolean
        parameters:
        - id: button
          type: Chroma.Input.Mouse
        return:
          type: System.Boolean
      overload: Chroma.Input.IsMouseButtonPressed_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Input.IsJoystickConnected_Native(Joystick)
      commentId: M:Chroma.Input.IsJoystickConnected_Native(Joystick)
      language: CSharp
      name:
        CSharp: IsJoystickConnected_Native(Joystick)
        VB: IsJoystickConnected_Native(Joystick)
      nameWithType:
        CSharp: Input.IsJoystickConnected_Native(Joystick)
        VB: Input.IsJoystickConnected_Native(Joystick)
      qualifiedName:
        CSharp: Chroma.Input.IsJoystickConnected_Native(Joystick)
        VB: Chroma.Input.IsJoystickConnected_Native(Joystick)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern bool IsJoystickConnected_Native(Joystick stick)
          VB: Shared Function IsJoystickConnected_Native(stick As Joystick) As Boolean
        parameters:
        - id: stick
          type: Joystick
        return:
          type: System.Boolean
      overload: Chroma.Input.IsJoystickConnected_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Input.GetMousePosition_Native(Chroma.Vector2@)
      commentId: M:Chroma.Input.GetMousePosition_Native(Chroma.Vector2@)
      language: CSharp
      name:
        CSharp: GetMousePosition_Native(out Vector2)
        VB: GetMousePosition_Native(ByRef Vector2)
      nameWithType:
        CSharp: Input.GetMousePosition_Native(out Vector2)
        VB: Input.GetMousePosition_Native(ByRef Vector2)
      qualifiedName:
        CSharp: Chroma.Input.GetMousePosition_Native(out Chroma.Vector2)
        VB: Chroma.Input.GetMousePosition_Native(ByRef Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void GetMousePosition_Native(out Vector2 position)
          VB: Shared Sub GetMousePosition_Native(ByRef position As Vector2)
        parameters:
        - id: position
          type: Chroma.Vector2
      overload: Chroma.Input.GetMousePosition_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Input.GetFirstConnectedGamepad_Native
      commentId: M:Chroma.Input.GetFirstConnectedGamepad_Native
      language: CSharp
      name:
        CSharp: GetFirstConnectedGamepad_Native()
        VB: GetFirstConnectedGamepad_Native()
      nameWithType:
        CSharp: Input.GetFirstConnectedGamepad_Native()
        VB: Input.GetFirstConnectedGamepad_Native()
      qualifiedName:
        CSharp: Chroma.Input.GetFirstConnectedGamepad_Native()
        VB: Chroma.Input.GetFirstConnectedGamepad_Native()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern Input.Gamepad GetFirstConnectedGamepad_Native()
          VB: Shared Function GetFirstConnectedGamepad_Native As Input.Gamepad
        return:
          type: Chroma.Input.Gamepad
      overload: Chroma.Input.GetFirstConnectedGamepad_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Input.GetAllConnectedControllers_Native
      commentId: M:Chroma.Input.GetAllConnectedControllers_Native
      language: CSharp
      name:
        CSharp: GetAllConnectedControllers_Native()
        VB: GetAllConnectedControllers_Native()
      nameWithType:
        CSharp: Input.GetAllConnectedControllers_Native()
        VB: Input.GetAllConnectedControllers_Native()
      qualifiedName:
        CSharp: Chroma.Input.GetAllConnectedControllers_Native()
        VB: Chroma.Input.GetAllConnectedControllers_Native()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern List<Input.Gamepad> GetAllConnectedControllers_Native()
          VB: Shared Function GetAllConnectedControllers_Native As List(Of Input.Gamepad)
        return:
          type: List{Chroma.Input.Gamepad}
      overload: Chroma.Input.GetAllConnectedControllers_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Input.SetPrimaryGamepad_Native
      commentId: M:Chroma.Input.SetPrimaryGamepad_Native
      language: CSharp
      name:
        CSharp: SetPrimaryGamepad_Native()
        VB: SetPrimaryGamepad_Native()
      nameWithType:
        CSharp: Input.SetPrimaryGamepad_Native()
        VB: Input.SetPrimaryGamepad_Native()
      qualifiedName:
        CSharp: Chroma.Input.SetPrimaryGamepad_Native()
        VB: Chroma.Input.SetPrimaryGamepad_Native()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern Input.Gamepad SetPrimaryGamepad_Native()
          VB: Shared Function SetPrimaryGamepad_Native As Input.Gamepad
        return:
          type: Chroma.Input.Gamepad
      overload: Chroma.Input.SetPrimaryGamepad_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Input.GetGamepadAxis_Native(Chroma.Input.Gamepad)
      commentId: M:Chroma.Input.GetGamepadAxis_Native(Chroma.Input.Gamepad)
      language: CSharp
      name:
        CSharp: GetGamepadAxis_Native(Input.Gamepad)
        VB: GetGamepadAxis_Native(Input.Gamepad)
      nameWithType:
        CSharp: Input.GetGamepadAxis_Native(Input.Gamepad)
        VB: Input.GetGamepadAxis_Native(Input.Gamepad)
      qualifiedName:
        CSharp: Chroma.Input.GetGamepadAxis_Native(Chroma.Input.Gamepad)
        VB: Chroma.Input.GetGamepadAxis_Native(Chroma.Input.Gamepad)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern List<float> GetGamepadAxis_Native(Input.Gamepad gamepad)
          VB: Shared Function GetGamepadAxis_Native(gamepad As Input.Gamepad) As List(Of Single)
        parameters:
        - id: gamepad
          type: Chroma.Input.Gamepad
        return:
          type: List{System.Single}
      overload: Chroma.Input.GetGamepadAxis_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Input.GetGamepadButtonPressed_Native(Chroma.Input.Gamepad,Chroma.Input.GamepadButton)
      commentId: M:Chroma.Input.GetGamepadButtonPressed_Native(Chroma.Input.Gamepad,Chroma.Input.GamepadButton)
      language: CSharp
      name:
        CSharp: GetGamepadButtonPressed_Native(Input.Gamepad, Input.GamepadButton)
        VB: GetGamepadButtonPressed_Native(Input.Gamepad, Input.GamepadButton)
      nameWithType:
        CSharp: Input.GetGamepadButtonPressed_Native(Input.Gamepad, Input.GamepadButton)
        VB: Input.GetGamepadButtonPressed_Native(Input.Gamepad, Input.GamepadButton)
      qualifiedName:
        CSharp: Chroma.Input.GetGamepadButtonPressed_Native(Chroma.Input.Gamepad, Chroma.Input.GamepadButton)
        VB: Chroma.Input.GetGamepadButtonPressed_Native(Chroma.Input.Gamepad, Chroma.Input.GamepadButton)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern bool GetGamepadButtonPressed_Native(Input.Gamepad gamepad, Input.GamepadButton button)
          VB: Shared Function GetGamepadButtonPressed_Native(gamepad As Input.Gamepad, button As Input.GamepadButton) As Boolean
        parameters:
        - id: gamepad
          type: Chroma.Input.Gamepad
        - id: button
          type: Chroma.Input.GamepadButton
        return:
          type: System.Boolean
      overload: Chroma.Input.GetGamepadButtonPressed_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Input.GetGamepadConnectionState_Native(Chroma.Input.Gamepad)
      commentId: M:Chroma.Input.GetGamepadConnectionState_Native(Chroma.Input.Gamepad)
      language: CSharp
      name:
        CSharp: GetGamepadConnectionState_Native(Input.Gamepad)
        VB: GetGamepadConnectionState_Native(Input.Gamepad)
      nameWithType:
        CSharp: Input.GetGamepadConnectionState_Native(Input.Gamepad)
        VB: Input.GetGamepadConnectionState_Native(Input.Gamepad)
      qualifiedName:
        CSharp: Chroma.Input.GetGamepadConnectionState_Native(Chroma.Input.Gamepad)
        VB: Chroma.Input.GetGamepadConnectionState_Native(Chroma.Input.Gamepad)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern Input.ConnectionState GetGamepadConnectionState_Native(Input.Gamepad gamepad)
          VB: Shared Function GetGamepadConnectionState_Native(gamepad As Input.Gamepad) As Input.ConnectionState
        parameters:
        - id: gamepad
          type: Chroma.Input.Gamepad
        return:
          type: Chroma.Input.ConnectionState
      overload: Chroma.Input.GetGamepadConnectionState_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
  - id: Chroma.Input.Mouse
    commentId: T:Chroma.Input.Mouse
    language: CSharp
    name:
      CSharp: Input.Mouse
      VB: Input.Mouse
    nameWithType:
      CSharp: Input.Mouse
      VB: Input.Mouse
    qualifiedName:
      CSharp: Chroma.Input.Mouse
      VB: Chroma.Input.Mouse
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Mouse
      path: ''
      startLine: 567
    syntax:
      content:
        CSharp: public enum Mouse
        VB: Public Enum Mouse
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Chroma.Input.Mouse.BUTTON_1
      commentId: F:Chroma.Input.Mouse.BUTTON_1
      language: CSharp
      name:
        CSharp: BUTTON_1
        VB: BUTTON_1
      nameWithType:
        CSharp: Input.Mouse.BUTTON_1
        VB: Input.Mouse.BUTTON_1
      qualifiedName:
        CSharp: Chroma.Input.Mouse.BUTTON_1
        VB: Chroma.Input.Mouse.BUTTON_1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: BUTTON_1
        path: ''
        startLine: 569
      syntax:
        content:
          CSharp: BUTTON_1 = 0
          VB: BUTTON_1 = 0
        return:
          type: Chroma.Input.Mouse
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Mouse.BUTTON_2
      commentId: F:Chroma.Input.Mouse.BUTTON_2
      language: CSharp
      name:
        CSharp: BUTTON_2
        VB: BUTTON_2
      nameWithType:
        CSharp: Input.Mouse.BUTTON_2
        VB: Input.Mouse.BUTTON_2
      qualifiedName:
        CSharp: Chroma.Input.Mouse.BUTTON_2
        VB: Chroma.Input.Mouse.BUTTON_2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: BUTTON_2
        path: ''
        startLine: 570
      syntax:
        content:
          CSharp: BUTTON_2 = 1
          VB: BUTTON_2 = 1
        return:
          type: Chroma.Input.Mouse
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Mouse.BUTTON_3
      commentId: F:Chroma.Input.Mouse.BUTTON_3
      language: CSharp
      name:
        CSharp: BUTTON_3
        VB: BUTTON_3
      nameWithType:
        CSharp: Input.Mouse.BUTTON_3
        VB: Input.Mouse.BUTTON_3
      qualifiedName:
        CSharp: Chroma.Input.Mouse.BUTTON_3
        VB: Chroma.Input.Mouse.BUTTON_3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: BUTTON_3
        path: ''
        startLine: 571
      syntax:
        content:
          CSharp: BUTTON_3 = 2
          VB: BUTTON_3 = 2
        return:
          type: Chroma.Input.Mouse
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Mouse.BUTTON_4
      commentId: F:Chroma.Input.Mouse.BUTTON_4
      language: CSharp
      name:
        CSharp: BUTTON_4
        VB: BUTTON_4
      nameWithType:
        CSharp: Input.Mouse.BUTTON_4
        VB: Input.Mouse.BUTTON_4
      qualifiedName:
        CSharp: Chroma.Input.Mouse.BUTTON_4
        VB: Chroma.Input.Mouse.BUTTON_4
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: BUTTON_4
        path: ''
        startLine: 572
      syntax:
        content:
          CSharp: BUTTON_4 = 3
          VB: BUTTON_4 = 3
        return:
          type: Chroma.Input.Mouse
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Mouse.BUTTON_5
      commentId: F:Chroma.Input.Mouse.BUTTON_5
      language: CSharp
      name:
        CSharp: BUTTON_5
        VB: BUTTON_5
      nameWithType:
        CSharp: Input.Mouse.BUTTON_5
        VB: Input.Mouse.BUTTON_5
      qualifiedName:
        CSharp: Chroma.Input.Mouse.BUTTON_5
        VB: Chroma.Input.Mouse.BUTTON_5
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: BUTTON_5
        path: ''
        startLine: 573
      syntax:
        content:
          CSharp: BUTTON_5 = 4
          VB: BUTTON_5 = 4
        return:
          type: Chroma.Input.Mouse
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Mouse.BUTTON_6
      commentId: F:Chroma.Input.Mouse.BUTTON_6
      language: CSharp
      name:
        CSharp: BUTTON_6
        VB: BUTTON_6
      nameWithType:
        CSharp: Input.Mouse.BUTTON_6
        VB: Input.Mouse.BUTTON_6
      qualifiedName:
        CSharp: Chroma.Input.Mouse.BUTTON_6
        VB: Chroma.Input.Mouse.BUTTON_6
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: BUTTON_6
        path: ''
        startLine: 574
      syntax:
        content:
          CSharp: BUTTON_6 = 5
          VB: BUTTON_6 = 5
        return:
          type: Chroma.Input.Mouse
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Mouse.BUTTON_7
      commentId: F:Chroma.Input.Mouse.BUTTON_7
      language: CSharp
      name:
        CSharp: BUTTON_7
        VB: BUTTON_7
      nameWithType:
        CSharp: Input.Mouse.BUTTON_7
        VB: Input.Mouse.BUTTON_7
      qualifiedName:
        CSharp: Chroma.Input.Mouse.BUTTON_7
        VB: Chroma.Input.Mouse.BUTTON_7
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: BUTTON_7
        path: ''
        startLine: 575
      syntax:
        content:
          CSharp: BUTTON_7 = 6
          VB: BUTTON_7 = 6
        return:
          type: Chroma.Input.Mouse
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Mouse.BUTTON_8
      commentId: F:Chroma.Input.Mouse.BUTTON_8
      language: CSharp
      name:
        CSharp: BUTTON_8
        VB: BUTTON_8
      nameWithType:
        CSharp: Input.Mouse.BUTTON_8
        VB: Input.Mouse.BUTTON_8
      qualifiedName:
        CSharp: Chroma.Input.Mouse.BUTTON_8
        VB: Chroma.Input.Mouse.BUTTON_8
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: BUTTON_8
        path: ''
        startLine: 576
      syntax:
        content:
          CSharp: BUTTON_8 = 7
          VB: BUTTON_8 = 7
        return:
          type: Chroma.Input.Mouse
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Mouse._LAST
      commentId: F:Chroma.Input.Mouse._LAST
      language: CSharp
      name:
        CSharp: _LAST
        VB: _LAST
      nameWithType:
        CSharp: Input.Mouse._LAST
        VB: Input.Mouse._LAST
      qualifiedName:
        CSharp: Chroma.Input.Mouse._LAST
        VB: Chroma.Input.Mouse._LAST
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _LAST
        path: ''
        startLine: 577
      syntax:
        content:
          CSharp: _LAST = 7
          VB: _LAST = 7
        return:
          type: Chroma.Input.Mouse
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Mouse.LEFT
      commentId: F:Chroma.Input.Mouse.LEFT
      language: CSharp
      name:
        CSharp: LEFT
        VB: LEFT
      nameWithType:
        CSharp: Input.Mouse.LEFT
        VB: Input.Mouse.LEFT
      qualifiedName:
        CSharp: Chroma.Input.Mouse.LEFT
        VB: Chroma.Input.Mouse.LEFT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: LEFT
        path: ''
        startLine: 578
      syntax:
        content:
          CSharp: LEFT = 0
          VB: LEFT = 0
        return:
          type: Chroma.Input.Mouse
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Mouse.RIGHT
      commentId: F:Chroma.Input.Mouse.RIGHT
      language: CSharp
      name:
        CSharp: RIGHT
        VB: RIGHT
      nameWithType:
        CSharp: Input.Mouse.RIGHT
        VB: Input.Mouse.RIGHT
      qualifiedName:
        CSharp: Chroma.Input.Mouse.RIGHT
        VB: Chroma.Input.Mouse.RIGHT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RIGHT
        path: ''
        startLine: 579
      syntax:
        content:
          CSharp: RIGHT = 1
          VB: RIGHT = 1
        return:
          type: Chroma.Input.Mouse
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Mouse.MIDDLE
      commentId: F:Chroma.Input.Mouse.MIDDLE
      language: CSharp
      name:
        CSharp: MIDDLE
        VB: MIDDLE
      nameWithType:
        CSharp: Input.Mouse.MIDDLE
        VB: Input.Mouse.MIDDLE
      qualifiedName:
        CSharp: Chroma.Input.Mouse.MIDDLE
        VB: Chroma.Input.Mouse.MIDDLE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: MIDDLE
        path: ''
        startLine: 580
      syntax:
        content:
          CSharp: MIDDLE = 2
          VB: MIDDLE = 2
        return:
          type: Chroma.Input.Mouse
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Chroma.Input.Key
    commentId: T:Chroma.Input.Key
    language: CSharp
    name:
      CSharp: Input.Key
      VB: Input.Key
    nameWithType:
      CSharp: Input.Key
      VB: Input.Key
    qualifiedName:
      CSharp: Chroma.Input.Key
      VB: Chroma.Input.Key
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Key
      path: ''
      startLine: 583
    syntax:
      content:
        CSharp: public enum Key
        VB: Public Enum Key
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Chroma.Input.Key.SPACE
      commentId: F:Chroma.Input.Key.SPACE
      language: CSharp
      name:
        CSharp: SPACE
        VB: SPACE
      nameWithType:
        CSharp: Input.Key.SPACE
        VB: Input.Key.SPACE
      qualifiedName:
        CSharp: Chroma.Input.Key.SPACE
        VB: Chroma.Input.Key.SPACE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: SPACE
        path: ''
        startLine: 586
      example: []
      syntax:
        content:
          CSharp: SPACE = 32
          VB: SPACE = 32
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.APOSTROPHE
      commentId: F:Chroma.Input.Key.APOSTROPHE
      language: CSharp
      name:
        CSharp: APOSTROPHE
        VB: APOSTROPHE
      nameWithType:
        CSharp: Input.Key.APOSTROPHE
        VB: Input.Key.APOSTROPHE
      qualifiedName:
        CSharp: Chroma.Input.Key.APOSTROPHE
        VB: Chroma.Input.Key.APOSTROPHE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: APOSTROPHE
        path: ''
        startLine: 587
      syntax:
        content:
          CSharp: APOSTROPHE = 39
          VB: APOSTROPHE = 39
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.COMMA
      commentId: F:Chroma.Input.Key.COMMA
      language: CSharp
      name:
        CSharp: COMMA
        VB: COMMA
      nameWithType:
        CSharp: Input.Key.COMMA
        VB: Input.Key.COMMA
      qualifiedName:
        CSharp: Chroma.Input.Key.COMMA
        VB: Chroma.Input.Key.COMMA
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: COMMA
        path: ''
        startLine: 588
      syntax:
        content:
          CSharp: COMMA = 44
          VB: COMMA = 44
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.MINUS
      commentId: F:Chroma.Input.Key.MINUS
      language: CSharp
      name:
        CSharp: MINUS
        VB: MINUS
      nameWithType:
        CSharp: Input.Key.MINUS
        VB: Input.Key.MINUS
      qualifiedName:
        CSharp: Chroma.Input.Key.MINUS
        VB: Chroma.Input.Key.MINUS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: MINUS
        path: ''
        startLine: 589
      syntax:
        content:
          CSharp: MINUS = 45
          VB: MINUS = 45
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.PERIOD
      commentId: F:Chroma.Input.Key.PERIOD
      language: CSharp
      name:
        CSharp: PERIOD
        VB: PERIOD
      nameWithType:
        CSharp: Input.Key.PERIOD
        VB: Input.Key.PERIOD
      qualifiedName:
        CSharp: Chroma.Input.Key.PERIOD
        VB: Chroma.Input.Key.PERIOD
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: PERIOD
        path: ''
        startLine: 590
      syntax:
        content:
          CSharp: PERIOD = 46
          VB: PERIOD = 46
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.SLASH
      commentId: F:Chroma.Input.Key.SLASH
      language: CSharp
      name:
        CSharp: SLASH
        VB: SLASH
      nameWithType:
        CSharp: Input.Key.SLASH
        VB: Input.Key.SLASH
      qualifiedName:
        CSharp: Chroma.Input.Key.SLASH
        VB: Chroma.Input.Key.SLASH
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: SLASH
        path: ''
        startLine: 591
      syntax:
        content:
          CSharp: SLASH = 47
          VB: SLASH = 47
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.K_0
      commentId: F:Chroma.Input.Key.K_0
      language: CSharp
      name:
        CSharp: K_0
        VB: K_0
      nameWithType:
        CSharp: Input.Key.K_0
        VB: Input.Key.K_0
      qualifiedName:
        CSharp: Chroma.Input.Key.K_0
        VB: Chroma.Input.Key.K_0
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: K_0
        path: ''
        startLine: 592
      syntax:
        content:
          CSharp: K_0 = 48
          VB: K_0 = 48
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.K_1
      commentId: F:Chroma.Input.Key.K_1
      language: CSharp
      name:
        CSharp: K_1
        VB: K_1
      nameWithType:
        CSharp: Input.Key.K_1
        VB: Input.Key.K_1
      qualifiedName:
        CSharp: Chroma.Input.Key.K_1
        VB: Chroma.Input.Key.K_1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: K_1
        path: ''
        startLine: 593
      syntax:
        content:
          CSharp: K_1 = 49
          VB: K_1 = 49
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.K_2
      commentId: F:Chroma.Input.Key.K_2
      language: CSharp
      name:
        CSharp: K_2
        VB: K_2
      nameWithType:
        CSharp: Input.Key.K_2
        VB: Input.Key.K_2
      qualifiedName:
        CSharp: Chroma.Input.Key.K_2
        VB: Chroma.Input.Key.K_2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: K_2
        path: ''
        startLine: 594
      syntax:
        content:
          CSharp: K_2 = 50
          VB: K_2 = 50
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.K_3
      commentId: F:Chroma.Input.Key.K_3
      language: CSharp
      name:
        CSharp: K_3
        VB: K_3
      nameWithType:
        CSharp: Input.Key.K_3
        VB: Input.Key.K_3
      qualifiedName:
        CSharp: Chroma.Input.Key.K_3
        VB: Chroma.Input.Key.K_3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: K_3
        path: ''
        startLine: 595
      syntax:
        content:
          CSharp: K_3 = 51
          VB: K_3 = 51
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.K_4
      commentId: F:Chroma.Input.Key.K_4
      language: CSharp
      name:
        CSharp: K_4
        VB: K_4
      nameWithType:
        CSharp: Input.Key.K_4
        VB: Input.Key.K_4
      qualifiedName:
        CSharp: Chroma.Input.Key.K_4
        VB: Chroma.Input.Key.K_4
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: K_4
        path: ''
        startLine: 596
      syntax:
        content:
          CSharp: K_4 = 52
          VB: K_4 = 52
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.K_5
      commentId: F:Chroma.Input.Key.K_5
      language: CSharp
      name:
        CSharp: K_5
        VB: K_5
      nameWithType:
        CSharp: Input.Key.K_5
        VB: Input.Key.K_5
      qualifiedName:
        CSharp: Chroma.Input.Key.K_5
        VB: Chroma.Input.Key.K_5
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: K_5
        path: ''
        startLine: 597
      syntax:
        content:
          CSharp: K_5 = 53
          VB: K_5 = 53
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.K_6
      commentId: F:Chroma.Input.Key.K_6
      language: CSharp
      name:
        CSharp: K_6
        VB: K_6
      nameWithType:
        CSharp: Input.Key.K_6
        VB: Input.Key.K_6
      qualifiedName:
        CSharp: Chroma.Input.Key.K_6
        VB: Chroma.Input.Key.K_6
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: K_6
        path: ''
        startLine: 598
      syntax:
        content:
          CSharp: K_6 = 54
          VB: K_6 = 54
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.K_7
      commentId: F:Chroma.Input.Key.K_7
      language: CSharp
      name:
        CSharp: K_7
        VB: K_7
      nameWithType:
        CSharp: Input.Key.K_7
        VB: Input.Key.K_7
      qualifiedName:
        CSharp: Chroma.Input.Key.K_7
        VB: Chroma.Input.Key.K_7
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: K_7
        path: ''
        startLine: 599
      syntax:
        content:
          CSharp: K_7 = 55
          VB: K_7 = 55
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.K_8
      commentId: F:Chroma.Input.Key.K_8
      language: CSharp
      name:
        CSharp: K_8
        VB: K_8
      nameWithType:
        CSharp: Input.Key.K_8
        VB: Input.Key.K_8
      qualifiedName:
        CSharp: Chroma.Input.Key.K_8
        VB: Chroma.Input.Key.K_8
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: K_8
        path: ''
        startLine: 600
      syntax:
        content:
          CSharp: K_8 = 56
          VB: K_8 = 56
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.K_9
      commentId: F:Chroma.Input.Key.K_9
      language: CSharp
      name:
        CSharp: K_9
        VB: K_9
      nameWithType:
        CSharp: Input.Key.K_9
        VB: Input.Key.K_9
      qualifiedName:
        CSharp: Chroma.Input.Key.K_9
        VB: Chroma.Input.Key.K_9
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: K_9
        path: ''
        startLine: 601
      syntax:
        content:
          CSharp: K_9 = 57
          VB: K_9 = 57
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.SEMICOLON
      commentId: F:Chroma.Input.Key.SEMICOLON
      language: CSharp
      name:
        CSharp: SEMICOLON
        VB: SEMICOLON
      nameWithType:
        CSharp: Input.Key.SEMICOLON
        VB: Input.Key.SEMICOLON
      qualifiedName:
        CSharp: Chroma.Input.Key.SEMICOLON
        VB: Chroma.Input.Key.SEMICOLON
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: SEMICOLON
        path: ''
        startLine: 602
      syntax:
        content:
          CSharp: SEMICOLON = 59
          VB: SEMICOLON = 59
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.EQUAL
      commentId: F:Chroma.Input.Key.EQUAL
      language: CSharp
      name:
        CSharp: EQUAL
        VB: EQUAL
      nameWithType:
        CSharp: Input.Key.EQUAL
        VB: Input.Key.EQUAL
      qualifiedName:
        CSharp: Chroma.Input.Key.EQUAL
        VB: Chroma.Input.Key.EQUAL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: EQUAL
        path: ''
        startLine: 603
      syntax:
        content:
          CSharp: EQUAL = 61
          VB: EQUAL = 61
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.A
      commentId: F:Chroma.Input.Key.A
      language: CSharp
      name:
        CSharp: A
        VB: A
      nameWithType:
        CSharp: Input.Key.A
        VB: Input.Key.A
      qualifiedName:
        CSharp: Chroma.Input.Key.A
        VB: Chroma.Input.Key.A
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: A
        path: ''
        startLine: 604
      syntax:
        content:
          CSharp: A = 65
          VB: A = 65
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.B
      commentId: F:Chroma.Input.Key.B
      language: CSharp
      name:
        CSharp: B
        VB: B
      nameWithType:
        CSharp: Input.Key.B
        VB: Input.Key.B
      qualifiedName:
        CSharp: Chroma.Input.Key.B
        VB: Chroma.Input.Key.B
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: B
        path: ''
        startLine: 605
      syntax:
        content:
          CSharp: B = 66
          VB: B = 66
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.C
      commentId: F:Chroma.Input.Key.C
      language: CSharp
      name:
        CSharp: C
        VB: C
      nameWithType:
        CSharp: Input.Key.C
        VB: Input.Key.C
      qualifiedName:
        CSharp: Chroma.Input.Key.C
        VB: Chroma.Input.Key.C
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: C
        path: ''
        startLine: 606
      syntax:
        content:
          CSharp: C = 67
          VB: C = 67
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.D
      commentId: F:Chroma.Input.Key.D
      language: CSharp
      name:
        CSharp: D
        VB: D
      nameWithType:
        CSharp: Input.Key.D
        VB: Input.Key.D
      qualifiedName:
        CSharp: Chroma.Input.Key.D
        VB: Chroma.Input.Key.D
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: D
        path: ''
        startLine: 607
      syntax:
        content:
          CSharp: D = 68
          VB: D = 68
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.E
      commentId: F:Chroma.Input.Key.E
      language: CSharp
      name:
        CSharp: E
        VB: E
      nameWithType:
        CSharp: Input.Key.E
        VB: Input.Key.E
      qualifiedName:
        CSharp: Chroma.Input.Key.E
        VB: Chroma.Input.Key.E
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: E
        path: ''
        startLine: 608
      syntax:
        content:
          CSharp: E = 69
          VB: E = 69
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F
      commentId: F:Chroma.Input.Key.F
      language: CSharp
      name:
        CSharp: F
        VB: F
      nameWithType:
        CSharp: Input.Key.F
        VB: Input.Key.F
      qualifiedName:
        CSharp: Chroma.Input.Key.F
        VB: Chroma.Input.Key.F
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F
        path: ''
        startLine: 609
      syntax:
        content:
          CSharp: F = 70
          VB: F = 70
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.G
      commentId: F:Chroma.Input.Key.G
      language: CSharp
      name:
        CSharp: G
        VB: G
      nameWithType:
        CSharp: Input.Key.G
        VB: Input.Key.G
      qualifiedName:
        CSharp: Chroma.Input.Key.G
        VB: Chroma.Input.Key.G
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: G
        path: ''
        startLine: 610
      syntax:
        content:
          CSharp: G = 71
          VB: G = 71
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.H
      commentId: F:Chroma.Input.Key.H
      language: CSharp
      name:
        CSharp: H
        VB: H
      nameWithType:
        CSharp: Input.Key.H
        VB: Input.Key.H
      qualifiedName:
        CSharp: Chroma.Input.Key.H
        VB: Chroma.Input.Key.H
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: H
        path: ''
        startLine: 611
      syntax:
        content:
          CSharp: H = 72
          VB: H = 72
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.I
      commentId: F:Chroma.Input.Key.I
      language: CSharp
      name:
        CSharp: I
        VB: I
      nameWithType:
        CSharp: Input.Key.I
        VB: Input.Key.I
      qualifiedName:
        CSharp: Chroma.Input.Key.I
        VB: Chroma.Input.Key.I
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: I
        path: ''
        startLine: 612
      syntax:
        content:
          CSharp: I = 73
          VB: I = 73
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.J
      commentId: F:Chroma.Input.Key.J
      language: CSharp
      name:
        CSharp: J
        VB: J
      nameWithType:
        CSharp: Input.Key.J
        VB: Input.Key.J
      qualifiedName:
        CSharp: Chroma.Input.Key.J
        VB: Chroma.Input.Key.J
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: J
        path: ''
        startLine: 613
      syntax:
        content:
          CSharp: J = 74
          VB: J = 74
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.K
      commentId: F:Chroma.Input.Key.K
      language: CSharp
      name:
        CSharp: K
        VB: K
      nameWithType:
        CSharp: Input.Key.K
        VB: Input.Key.K
      qualifiedName:
        CSharp: Chroma.Input.Key.K
        VB: Chroma.Input.Key.K
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: K
        path: ''
        startLine: 614
      syntax:
        content:
          CSharp: K = 75
          VB: K = 75
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.L
      commentId: F:Chroma.Input.Key.L
      language: CSharp
      name:
        CSharp: L
        VB: L
      nameWithType:
        CSharp: Input.Key.L
        VB: Input.Key.L
      qualifiedName:
        CSharp: Chroma.Input.Key.L
        VB: Chroma.Input.Key.L
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: L
        path: ''
        startLine: 615
      syntax:
        content:
          CSharp: L = 76
          VB: L = 76
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.M
      commentId: F:Chroma.Input.Key.M
      language: CSharp
      name:
        CSharp: M
        VB: M
      nameWithType:
        CSharp: Input.Key.M
        VB: Input.Key.M
      qualifiedName:
        CSharp: Chroma.Input.Key.M
        VB: Chroma.Input.Key.M
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: M
        path: ''
        startLine: 616
      syntax:
        content:
          CSharp: M = 77
          VB: M = 77
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.N
      commentId: F:Chroma.Input.Key.N
      language: CSharp
      name:
        CSharp: N
        VB: N
      nameWithType:
        CSharp: Input.Key.N
        VB: Input.Key.N
      qualifiedName:
        CSharp: Chroma.Input.Key.N
        VB: Chroma.Input.Key.N
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: N
        path: ''
        startLine: 617
      syntax:
        content:
          CSharp: N = 78
          VB: N = 78
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.O
      commentId: F:Chroma.Input.Key.O
      language: CSharp
      name:
        CSharp: O
        VB: O
      nameWithType:
        CSharp: Input.Key.O
        VB: Input.Key.O
      qualifiedName:
        CSharp: Chroma.Input.Key.O
        VB: Chroma.Input.Key.O
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: O
        path: ''
        startLine: 618
      syntax:
        content:
          CSharp: O = 79
          VB: O = 79
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.P
      commentId: F:Chroma.Input.Key.P
      language: CSharp
      name:
        CSharp: P
        VB: P
      nameWithType:
        CSharp: Input.Key.P
        VB: Input.Key.P
      qualifiedName:
        CSharp: Chroma.Input.Key.P
        VB: Chroma.Input.Key.P
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: P
        path: ''
        startLine: 619
      syntax:
        content:
          CSharp: P = 80
          VB: P = 80
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.Q
      commentId: F:Chroma.Input.Key.Q
      language: CSharp
      name:
        CSharp: Q
        VB: Q
      nameWithType:
        CSharp: Input.Key.Q
        VB: Input.Key.Q
      qualifiedName:
        CSharp: Chroma.Input.Key.Q
        VB: Chroma.Input.Key.Q
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Q
        path: ''
        startLine: 620
      syntax:
        content:
          CSharp: Q = 81
          VB: Q = 81
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.R
      commentId: F:Chroma.Input.Key.R
      language: CSharp
      name:
        CSharp: R
        VB: R
      nameWithType:
        CSharp: Input.Key.R
        VB: Input.Key.R
      qualifiedName:
        CSharp: Chroma.Input.Key.R
        VB: Chroma.Input.Key.R
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: R
        path: ''
        startLine: 621
      syntax:
        content:
          CSharp: R = 82
          VB: R = 82
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.S
      commentId: F:Chroma.Input.Key.S
      language: CSharp
      name:
        CSharp: S
        VB: S
      nameWithType:
        CSharp: Input.Key.S
        VB: Input.Key.S
      qualifiedName:
        CSharp: Chroma.Input.Key.S
        VB: Chroma.Input.Key.S
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: S
        path: ''
        startLine: 622
      syntax:
        content:
          CSharp: S = 83
          VB: S = 83
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.T
      commentId: F:Chroma.Input.Key.T
      language: CSharp
      name:
        CSharp: T
        VB: T
      nameWithType:
        CSharp: Input.Key.T
        VB: Input.Key.T
      qualifiedName:
        CSharp: Chroma.Input.Key.T
        VB: Chroma.Input.Key.T
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: T
        path: ''
        startLine: 623
      syntax:
        content:
          CSharp: T = 84
          VB: T = 84
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.U
      commentId: F:Chroma.Input.Key.U
      language: CSharp
      name:
        CSharp: U
        VB: U
      nameWithType:
        CSharp: Input.Key.U
        VB: Input.Key.U
      qualifiedName:
        CSharp: Chroma.Input.Key.U
        VB: Chroma.Input.Key.U
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: U
        path: ''
        startLine: 624
      syntax:
        content:
          CSharp: U = 85
          VB: U = 85
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.V
      commentId: F:Chroma.Input.Key.V
      language: CSharp
      name:
        CSharp: V
        VB: V
      nameWithType:
        CSharp: Input.Key.V
        VB: Input.Key.V
      qualifiedName:
        CSharp: Chroma.Input.Key.V
        VB: Chroma.Input.Key.V
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: V
        path: ''
        startLine: 625
      syntax:
        content:
          CSharp: V = 86
          VB: V = 86
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.W
      commentId: F:Chroma.Input.Key.W
      language: CSharp
      name:
        CSharp: W
        VB: W
      nameWithType:
        CSharp: Input.Key.W
        VB: Input.Key.W
      qualifiedName:
        CSharp: Chroma.Input.Key.W
        VB: Chroma.Input.Key.W
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: W
        path: ''
        startLine: 626
      syntax:
        content:
          CSharp: W = 87
          VB: W = 87
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.X
      commentId: F:Chroma.Input.Key.X
      language: CSharp
      name:
        CSharp: X
        VB: X
      nameWithType:
        CSharp: Input.Key.X
        VB: Input.Key.X
      qualifiedName:
        CSharp: Chroma.Input.Key.X
        VB: Chroma.Input.Key.X
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: X
        path: ''
        startLine: 627
      syntax:
        content:
          CSharp: X = 88
          VB: X = 88
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.Y
      commentId: F:Chroma.Input.Key.Y
      language: CSharp
      name:
        CSharp: Y
        VB: Y
      nameWithType:
        CSharp: Input.Key.Y
        VB: Input.Key.Y
      qualifiedName:
        CSharp: Chroma.Input.Key.Y
        VB: Chroma.Input.Key.Y
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Y
        path: ''
        startLine: 628
      syntax:
        content:
          CSharp: Y = 89
          VB: Y = 89
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.Z
      commentId: F:Chroma.Input.Key.Z
      language: CSharp
      name:
        CSharp: Z
        VB: Z
      nameWithType:
        CSharp: Input.Key.Z
        VB: Input.Key.Z
      qualifiedName:
        CSharp: Chroma.Input.Key.Z
        VB: Chroma.Input.Key.Z
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Z
        path: ''
        startLine: 629
      syntax:
        content:
          CSharp: Z = 90
          VB: Z = 90
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.LEFT_BRACKET
      commentId: F:Chroma.Input.Key.LEFT_BRACKET
      language: CSharp
      name:
        CSharp: LEFT_BRACKET
        VB: LEFT_BRACKET
      nameWithType:
        CSharp: Input.Key.LEFT_BRACKET
        VB: Input.Key.LEFT_BRACKET
      qualifiedName:
        CSharp: Chroma.Input.Key.LEFT_BRACKET
        VB: Chroma.Input.Key.LEFT_BRACKET
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: LEFT_BRACKET
        path: ''
        startLine: 630
      syntax:
        content:
          CSharp: LEFT_BRACKET = 91
          VB: LEFT_BRACKET = 91
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.BACKSLASH
      commentId: F:Chroma.Input.Key.BACKSLASH
      language: CSharp
      name:
        CSharp: BACKSLASH
        VB: BACKSLASH
      nameWithType:
        CSharp: Input.Key.BACKSLASH
        VB: Input.Key.BACKSLASH
      qualifiedName:
        CSharp: Chroma.Input.Key.BACKSLASH
        VB: Chroma.Input.Key.BACKSLASH
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: BACKSLASH
        path: ''
        startLine: 631
      syntax:
        content:
          CSharp: BACKSLASH = 92
          VB: BACKSLASH = 92
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.RIGHT_BRACKET
      commentId: F:Chroma.Input.Key.RIGHT_BRACKET
      language: CSharp
      name:
        CSharp: RIGHT_BRACKET
        VB: RIGHT_BRACKET
      nameWithType:
        CSharp: Input.Key.RIGHT_BRACKET
        VB: Input.Key.RIGHT_BRACKET
      qualifiedName:
        CSharp: Chroma.Input.Key.RIGHT_BRACKET
        VB: Chroma.Input.Key.RIGHT_BRACKET
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RIGHT_BRACKET
        path: ''
        startLine: 632
      syntax:
        content:
          CSharp: RIGHT_BRACKET = 93
          VB: RIGHT_BRACKET = 93
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.GRAVE_ACCENT
      commentId: F:Chroma.Input.Key.GRAVE_ACCENT
      language: CSharp
      name:
        CSharp: GRAVE_ACCENT
        VB: GRAVE_ACCENT
      nameWithType:
        CSharp: Input.Key.GRAVE_ACCENT
        VB: Input.Key.GRAVE_ACCENT
      qualifiedName:
        CSharp: Chroma.Input.Key.GRAVE_ACCENT
        VB: Chroma.Input.Key.GRAVE_ACCENT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GRAVE_ACCENT
        path: ''
        startLine: 633
      syntax:
        content:
          CSharp: GRAVE_ACCENT = 96
          VB: GRAVE_ACCENT = 96
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.WORLD_1
      commentId: F:Chroma.Input.Key.WORLD_1
      language: CSharp
      name:
        CSharp: WORLD_1
        VB: WORLD_1
      nameWithType:
        CSharp: Input.Key.WORLD_1
        VB: Input.Key.WORLD_1
      qualifiedName:
        CSharp: Chroma.Input.Key.WORLD_1
        VB: Chroma.Input.Key.WORLD_1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: WORLD_1
        path: ''
        startLine: 634
      syntax:
        content:
          CSharp: WORLD_1 = 161
          VB: WORLD_1 = 161
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.WORLD_2
      commentId: F:Chroma.Input.Key.WORLD_2
      language: CSharp
      name:
        CSharp: WORLD_2
        VB: WORLD_2
      nameWithType:
        CSharp: Input.Key.WORLD_2
        VB: Input.Key.WORLD_2
      qualifiedName:
        CSharp: Chroma.Input.Key.WORLD_2
        VB: Chroma.Input.Key.WORLD_2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: WORLD_2
        path: ''
        startLine: 635
      syntax:
        content:
          CSharp: WORLD_2 = 162
          VB: WORLD_2 = 162
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.ESCAPE
      commentId: F:Chroma.Input.Key.ESCAPE
      language: CSharp
      name:
        CSharp: ESCAPE
        VB: ESCAPE
      nameWithType:
        CSharp: Input.Key.ESCAPE
        VB: Input.Key.ESCAPE
      qualifiedName:
        CSharp: Chroma.Input.Key.ESCAPE
        VB: Chroma.Input.Key.ESCAPE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: ESCAPE
        path: ''
        startLine: 637
      syntax:
        content:
          CSharp: ESCAPE = 256
          VB: ESCAPE = 256
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.ENTER
      commentId: F:Chroma.Input.Key.ENTER
      language: CSharp
      name:
        CSharp: ENTER
        VB: ENTER
      nameWithType:
        CSharp: Input.Key.ENTER
        VB: Input.Key.ENTER
      qualifiedName:
        CSharp: Chroma.Input.Key.ENTER
        VB: Chroma.Input.Key.ENTER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: ENTER
        path: ''
        startLine: 638
      syntax:
        content:
          CSharp: ENTER = 257
          VB: ENTER = 257
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.TAB
      commentId: F:Chroma.Input.Key.TAB
      language: CSharp
      name:
        CSharp: TAB
        VB: TAB
      nameWithType:
        CSharp: Input.Key.TAB
        VB: Input.Key.TAB
      qualifiedName:
        CSharp: Chroma.Input.Key.TAB
        VB: Chroma.Input.Key.TAB
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: TAB
        path: ''
        startLine: 639
      syntax:
        content:
          CSharp: TAB = 258
          VB: TAB = 258
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.BACKSPACE
      commentId: F:Chroma.Input.Key.BACKSPACE
      language: CSharp
      name:
        CSharp: BACKSPACE
        VB: BACKSPACE
      nameWithType:
        CSharp: Input.Key.BACKSPACE
        VB: Input.Key.BACKSPACE
      qualifiedName:
        CSharp: Chroma.Input.Key.BACKSPACE
        VB: Chroma.Input.Key.BACKSPACE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: BACKSPACE
        path: ''
        startLine: 640
      syntax:
        content:
          CSharp: BACKSPACE = 259
          VB: BACKSPACE = 259
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.INSERT
      commentId: F:Chroma.Input.Key.INSERT
      language: CSharp
      name:
        CSharp: INSERT
        VB: INSERT
      nameWithType:
        CSharp: Input.Key.INSERT
        VB: Input.Key.INSERT
      qualifiedName:
        CSharp: Chroma.Input.Key.INSERT
        VB: Chroma.Input.Key.INSERT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: INSERT
        path: ''
        startLine: 641
      syntax:
        content:
          CSharp: INSERT = 260
          VB: INSERT = 260
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.DEL
      commentId: F:Chroma.Input.Key.DEL
      language: CSharp
      name:
        CSharp: DEL
        VB: DEL
      nameWithType:
        CSharp: Input.Key.DEL
        VB: Input.Key.DEL
      qualifiedName:
        CSharp: Chroma.Input.Key.DEL
        VB: Chroma.Input.Key.DEL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: DEL
        path: ''
        startLine: 642
      syntax:
        content:
          CSharp: DEL = 261
          VB: DEL = 261
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.RIGHT
      commentId: F:Chroma.Input.Key.RIGHT
      language: CSharp
      name:
        CSharp: RIGHT
        VB: RIGHT
      nameWithType:
        CSharp: Input.Key.RIGHT
        VB: Input.Key.RIGHT
      qualifiedName:
        CSharp: Chroma.Input.Key.RIGHT
        VB: Chroma.Input.Key.RIGHT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RIGHT
        path: ''
        startLine: 643
      syntax:
        content:
          CSharp: RIGHT = 262
          VB: RIGHT = 262
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.LEFT
      commentId: F:Chroma.Input.Key.LEFT
      language: CSharp
      name:
        CSharp: LEFT
        VB: LEFT
      nameWithType:
        CSharp: Input.Key.LEFT
        VB: Input.Key.LEFT
      qualifiedName:
        CSharp: Chroma.Input.Key.LEFT
        VB: Chroma.Input.Key.LEFT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: LEFT
        path: ''
        startLine: 644
      syntax:
        content:
          CSharp: LEFT = 263
          VB: LEFT = 263
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.DOWN
      commentId: F:Chroma.Input.Key.DOWN
      language: CSharp
      name:
        CSharp: DOWN
        VB: DOWN
      nameWithType:
        CSharp: Input.Key.DOWN
        VB: Input.Key.DOWN
      qualifiedName:
        CSharp: Chroma.Input.Key.DOWN
        VB: Chroma.Input.Key.DOWN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: DOWN
        path: ''
        startLine: 645
      syntax:
        content:
          CSharp: DOWN = 264
          VB: DOWN = 264
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.UP
      commentId: F:Chroma.Input.Key.UP
      language: CSharp
      name:
        CSharp: UP
        VB: UP
      nameWithType:
        CSharp: Input.Key.UP
        VB: Input.Key.UP
      qualifiedName:
        CSharp: Chroma.Input.Key.UP
        VB: Chroma.Input.Key.UP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: UP
        path: ''
        startLine: 646
      syntax:
        content:
          CSharp: UP = 265
          VB: UP = 265
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.PAGE_UP
      commentId: F:Chroma.Input.Key.PAGE_UP
      language: CSharp
      name:
        CSharp: PAGE_UP
        VB: PAGE_UP
      nameWithType:
        CSharp: Input.Key.PAGE_UP
        VB: Input.Key.PAGE_UP
      qualifiedName:
        CSharp: Chroma.Input.Key.PAGE_UP
        VB: Chroma.Input.Key.PAGE_UP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: PAGE_UP
        path: ''
        startLine: 647
      syntax:
        content:
          CSharp: PAGE_UP = 266
          VB: PAGE_UP = 266
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.PAGE_DOWN
      commentId: F:Chroma.Input.Key.PAGE_DOWN
      language: CSharp
      name:
        CSharp: PAGE_DOWN
        VB: PAGE_DOWN
      nameWithType:
        CSharp: Input.Key.PAGE_DOWN
        VB: Input.Key.PAGE_DOWN
      qualifiedName:
        CSharp: Chroma.Input.Key.PAGE_DOWN
        VB: Chroma.Input.Key.PAGE_DOWN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: PAGE_DOWN
        path: ''
        startLine: 648
      syntax:
        content:
          CSharp: PAGE_DOWN = 267
          VB: PAGE_DOWN = 267
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.HOME
      commentId: F:Chroma.Input.Key.HOME
      language: CSharp
      name:
        CSharp: HOME
        VB: HOME
      nameWithType:
        CSharp: Input.Key.HOME
        VB: Input.Key.HOME
      qualifiedName:
        CSharp: Chroma.Input.Key.HOME
        VB: Chroma.Input.Key.HOME
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: HOME
        path: ''
        startLine: 649
      syntax:
        content:
          CSharp: HOME = 268
          VB: HOME = 268
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.END
      commentId: F:Chroma.Input.Key.END
      language: CSharp
      name:
        CSharp: END
        VB: END
      nameWithType:
        CSharp: Input.Key.END
        VB: Input.Key.END
      qualifiedName:
        CSharp: Chroma.Input.Key.END
        VB: Chroma.Input.Key.END
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: END
        path: ''
        startLine: 650
      syntax:
        content:
          CSharp: END = 269
          VB: END = 269
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.CAPS_LOCK
      commentId: F:Chroma.Input.Key.CAPS_LOCK
      language: CSharp
      name:
        CSharp: CAPS_LOCK
        VB: CAPS_LOCK
      nameWithType:
        CSharp: Input.Key.CAPS_LOCK
        VB: Input.Key.CAPS_LOCK
      qualifiedName:
        CSharp: Chroma.Input.Key.CAPS_LOCK
        VB: Chroma.Input.Key.CAPS_LOCK
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: CAPS_LOCK
        path: ''
        startLine: 651
      syntax:
        content:
          CSharp: CAPS_LOCK = 280
          VB: CAPS_LOCK = 280
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.SCROLL_LOCK
      commentId: F:Chroma.Input.Key.SCROLL_LOCK
      language: CSharp
      name:
        CSharp: SCROLL_LOCK
        VB: SCROLL_LOCK
      nameWithType:
        CSharp: Input.Key.SCROLL_LOCK
        VB: Input.Key.SCROLL_LOCK
      qualifiedName:
        CSharp: Chroma.Input.Key.SCROLL_LOCK
        VB: Chroma.Input.Key.SCROLL_LOCK
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: SCROLL_LOCK
        path: ''
        startLine: 652
      syntax:
        content:
          CSharp: SCROLL_LOCK = 281
          VB: SCROLL_LOCK = 281
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.NUM_LOCK
      commentId: F:Chroma.Input.Key.NUM_LOCK
      language: CSharp
      name:
        CSharp: NUM_LOCK
        VB: NUM_LOCK
      nameWithType:
        CSharp: Input.Key.NUM_LOCK
        VB: Input.Key.NUM_LOCK
      qualifiedName:
        CSharp: Chroma.Input.Key.NUM_LOCK
        VB: Chroma.Input.Key.NUM_LOCK
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: NUM_LOCK
        path: ''
        startLine: 653
      syntax:
        content:
          CSharp: NUM_LOCK = 282
          VB: NUM_LOCK = 282
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.PRINT_SCREEN
      commentId: F:Chroma.Input.Key.PRINT_SCREEN
      language: CSharp
      name:
        CSharp: PRINT_SCREEN
        VB: PRINT_SCREEN
      nameWithType:
        CSharp: Input.Key.PRINT_SCREEN
        VB: Input.Key.PRINT_SCREEN
      qualifiedName:
        CSharp: Chroma.Input.Key.PRINT_SCREEN
        VB: Chroma.Input.Key.PRINT_SCREEN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: PRINT_SCREEN
        path: ''
        startLine: 654
      syntax:
        content:
          CSharp: PRINT_SCREEN = 283
          VB: PRINT_SCREEN = 283
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.PAUSE
      commentId: F:Chroma.Input.Key.PAUSE
      language: CSharp
      name:
        CSharp: PAUSE
        VB: PAUSE
      nameWithType:
        CSharp: Input.Key.PAUSE
        VB: Input.Key.PAUSE
      qualifiedName:
        CSharp: Chroma.Input.Key.PAUSE
        VB: Chroma.Input.Key.PAUSE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: PAUSE
        path: ''
        startLine: 655
      syntax:
        content:
          CSharp: PAUSE = 284
          VB: PAUSE = 284
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F1
      commentId: F:Chroma.Input.Key.F1
      language: CSharp
      name:
        CSharp: F1
        VB: F1
      nameWithType:
        CSharp: Input.Key.F1
        VB: Input.Key.F1
      qualifiedName:
        CSharp: Chroma.Input.Key.F1
        VB: Chroma.Input.Key.F1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F1
        path: ''
        startLine: 656
      syntax:
        content:
          CSharp: F1 = 290
          VB: F1 = 290
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F2
      commentId: F:Chroma.Input.Key.F2
      language: CSharp
      name:
        CSharp: F2
        VB: F2
      nameWithType:
        CSharp: Input.Key.F2
        VB: Input.Key.F2
      qualifiedName:
        CSharp: Chroma.Input.Key.F2
        VB: Chroma.Input.Key.F2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F2
        path: ''
        startLine: 657
      syntax:
        content:
          CSharp: F2 = 291
          VB: F2 = 291
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F3
      commentId: F:Chroma.Input.Key.F3
      language: CSharp
      name:
        CSharp: F3
        VB: F3
      nameWithType:
        CSharp: Input.Key.F3
        VB: Input.Key.F3
      qualifiedName:
        CSharp: Chroma.Input.Key.F3
        VB: Chroma.Input.Key.F3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F3
        path: ''
        startLine: 658
      syntax:
        content:
          CSharp: F3 = 292
          VB: F3 = 292
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F4
      commentId: F:Chroma.Input.Key.F4
      language: CSharp
      name:
        CSharp: F4
        VB: F4
      nameWithType:
        CSharp: Input.Key.F4
        VB: Input.Key.F4
      qualifiedName:
        CSharp: Chroma.Input.Key.F4
        VB: Chroma.Input.Key.F4
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F4
        path: ''
        startLine: 659
      syntax:
        content:
          CSharp: F4 = 293
          VB: F4 = 293
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F5
      commentId: F:Chroma.Input.Key.F5
      language: CSharp
      name:
        CSharp: F5
        VB: F5
      nameWithType:
        CSharp: Input.Key.F5
        VB: Input.Key.F5
      qualifiedName:
        CSharp: Chroma.Input.Key.F5
        VB: Chroma.Input.Key.F5
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F5
        path: ''
        startLine: 660
      syntax:
        content:
          CSharp: F5 = 294
          VB: F5 = 294
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F6
      commentId: F:Chroma.Input.Key.F6
      language: CSharp
      name:
        CSharp: F6
        VB: F6
      nameWithType:
        CSharp: Input.Key.F6
        VB: Input.Key.F6
      qualifiedName:
        CSharp: Chroma.Input.Key.F6
        VB: Chroma.Input.Key.F6
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F6
        path: ''
        startLine: 661
      syntax:
        content:
          CSharp: F6 = 295
          VB: F6 = 295
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F7
      commentId: F:Chroma.Input.Key.F7
      language: CSharp
      name:
        CSharp: F7
        VB: F7
      nameWithType:
        CSharp: Input.Key.F7
        VB: Input.Key.F7
      qualifiedName:
        CSharp: Chroma.Input.Key.F7
        VB: Chroma.Input.Key.F7
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F7
        path: ''
        startLine: 662
      syntax:
        content:
          CSharp: F7 = 296
          VB: F7 = 296
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F8
      commentId: F:Chroma.Input.Key.F8
      language: CSharp
      name:
        CSharp: F8
        VB: F8
      nameWithType:
        CSharp: Input.Key.F8
        VB: Input.Key.F8
      qualifiedName:
        CSharp: Chroma.Input.Key.F8
        VB: Chroma.Input.Key.F8
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F8
        path: ''
        startLine: 663
      syntax:
        content:
          CSharp: F8 = 297
          VB: F8 = 297
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F9
      commentId: F:Chroma.Input.Key.F9
      language: CSharp
      name:
        CSharp: F9
        VB: F9
      nameWithType:
        CSharp: Input.Key.F9
        VB: Input.Key.F9
      qualifiedName:
        CSharp: Chroma.Input.Key.F9
        VB: Chroma.Input.Key.F9
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F9
        path: ''
        startLine: 664
      syntax:
        content:
          CSharp: F9 = 298
          VB: F9 = 298
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F10
      commentId: F:Chroma.Input.Key.F10
      language: CSharp
      name:
        CSharp: F10
        VB: F10
      nameWithType:
        CSharp: Input.Key.F10
        VB: Input.Key.F10
      qualifiedName:
        CSharp: Chroma.Input.Key.F10
        VB: Chroma.Input.Key.F10
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F10
        path: ''
        startLine: 665
      syntax:
        content:
          CSharp: F10 = 299
          VB: F10 = 299
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F11
      commentId: F:Chroma.Input.Key.F11
      language: CSharp
      name:
        CSharp: F11
        VB: F11
      nameWithType:
        CSharp: Input.Key.F11
        VB: Input.Key.F11
      qualifiedName:
        CSharp: Chroma.Input.Key.F11
        VB: Chroma.Input.Key.F11
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F11
        path: ''
        startLine: 666
      syntax:
        content:
          CSharp: F11 = 300
          VB: F11 = 300
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F12
      commentId: F:Chroma.Input.Key.F12
      language: CSharp
      name:
        CSharp: F12
        VB: F12
      nameWithType:
        CSharp: Input.Key.F12
        VB: Input.Key.F12
      qualifiedName:
        CSharp: Chroma.Input.Key.F12
        VB: Chroma.Input.Key.F12
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F12
        path: ''
        startLine: 667
      syntax:
        content:
          CSharp: F12 = 301
          VB: F12 = 301
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F13
      commentId: F:Chroma.Input.Key.F13
      language: CSharp
      name:
        CSharp: F13
        VB: F13
      nameWithType:
        CSharp: Input.Key.F13
        VB: Input.Key.F13
      qualifiedName:
        CSharp: Chroma.Input.Key.F13
        VB: Chroma.Input.Key.F13
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F13
        path: ''
        startLine: 668
      syntax:
        content:
          CSharp: F13 = 302
          VB: F13 = 302
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F14
      commentId: F:Chroma.Input.Key.F14
      language: CSharp
      name:
        CSharp: F14
        VB: F14
      nameWithType:
        CSharp: Input.Key.F14
        VB: Input.Key.F14
      qualifiedName:
        CSharp: Chroma.Input.Key.F14
        VB: Chroma.Input.Key.F14
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F14
        path: ''
        startLine: 669
      syntax:
        content:
          CSharp: F14 = 303
          VB: F14 = 303
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F15
      commentId: F:Chroma.Input.Key.F15
      language: CSharp
      name:
        CSharp: F15
        VB: F15
      nameWithType:
        CSharp: Input.Key.F15
        VB: Input.Key.F15
      qualifiedName:
        CSharp: Chroma.Input.Key.F15
        VB: Chroma.Input.Key.F15
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F15
        path: ''
        startLine: 670
      syntax:
        content:
          CSharp: F15 = 304
          VB: F15 = 304
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F16
      commentId: F:Chroma.Input.Key.F16
      language: CSharp
      name:
        CSharp: F16
        VB: F16
      nameWithType:
        CSharp: Input.Key.F16
        VB: Input.Key.F16
      qualifiedName:
        CSharp: Chroma.Input.Key.F16
        VB: Chroma.Input.Key.F16
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F16
        path: ''
        startLine: 671
      syntax:
        content:
          CSharp: F16 = 305
          VB: F16 = 305
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F17
      commentId: F:Chroma.Input.Key.F17
      language: CSharp
      name:
        CSharp: F17
        VB: F17
      nameWithType:
        CSharp: Input.Key.F17
        VB: Input.Key.F17
      qualifiedName:
        CSharp: Chroma.Input.Key.F17
        VB: Chroma.Input.Key.F17
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F17
        path: ''
        startLine: 672
      syntax:
        content:
          CSharp: F17 = 306
          VB: F17 = 306
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F18
      commentId: F:Chroma.Input.Key.F18
      language: CSharp
      name:
        CSharp: F18
        VB: F18
      nameWithType:
        CSharp: Input.Key.F18
        VB: Input.Key.F18
      qualifiedName:
        CSharp: Chroma.Input.Key.F18
        VB: Chroma.Input.Key.F18
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F18
        path: ''
        startLine: 673
      syntax:
        content:
          CSharp: F18 = 307
          VB: F18 = 307
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F19
      commentId: F:Chroma.Input.Key.F19
      language: CSharp
      name:
        CSharp: F19
        VB: F19
      nameWithType:
        CSharp: Input.Key.F19
        VB: Input.Key.F19
      qualifiedName:
        CSharp: Chroma.Input.Key.F19
        VB: Chroma.Input.Key.F19
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F19
        path: ''
        startLine: 674
      syntax:
        content:
          CSharp: F19 = 308
          VB: F19 = 308
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F20
      commentId: F:Chroma.Input.Key.F20
      language: CSharp
      name:
        CSharp: F20
        VB: F20
      nameWithType:
        CSharp: Input.Key.F20
        VB: Input.Key.F20
      qualifiedName:
        CSharp: Chroma.Input.Key.F20
        VB: Chroma.Input.Key.F20
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F20
        path: ''
        startLine: 675
      syntax:
        content:
          CSharp: F20 = 309
          VB: F20 = 309
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F21
      commentId: F:Chroma.Input.Key.F21
      language: CSharp
      name:
        CSharp: F21
        VB: F21
      nameWithType:
        CSharp: Input.Key.F21
        VB: Input.Key.F21
      qualifiedName:
        CSharp: Chroma.Input.Key.F21
        VB: Chroma.Input.Key.F21
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F21
        path: ''
        startLine: 676
      syntax:
        content:
          CSharp: F21 = 310
          VB: F21 = 310
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F22
      commentId: F:Chroma.Input.Key.F22
      language: CSharp
      name:
        CSharp: F22
        VB: F22
      nameWithType:
        CSharp: Input.Key.F22
        VB: Input.Key.F22
      qualifiedName:
        CSharp: Chroma.Input.Key.F22
        VB: Chroma.Input.Key.F22
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F22
        path: ''
        startLine: 677
      syntax:
        content:
          CSharp: F22 = 311
          VB: F22 = 311
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F23
      commentId: F:Chroma.Input.Key.F23
      language: CSharp
      name:
        CSharp: F23
        VB: F23
      nameWithType:
        CSharp: Input.Key.F23
        VB: Input.Key.F23
      qualifiedName:
        CSharp: Chroma.Input.Key.F23
        VB: Chroma.Input.Key.F23
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F23
        path: ''
        startLine: 678
      syntax:
        content:
          CSharp: F23 = 312
          VB: F23 = 312
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F24
      commentId: F:Chroma.Input.Key.F24
      language: CSharp
      name:
        CSharp: F24
        VB: F24
      nameWithType:
        CSharp: Input.Key.F24
        VB: Input.Key.F24
      qualifiedName:
        CSharp: Chroma.Input.Key.F24
        VB: Chroma.Input.Key.F24
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F24
        path: ''
        startLine: 679
      syntax:
        content:
          CSharp: F24 = 313
          VB: F24 = 313
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.F25
      commentId: F:Chroma.Input.Key.F25
      language: CSharp
      name:
        CSharp: F25
        VB: F25
      nameWithType:
        CSharp: Input.Key.F25
        VB: Input.Key.F25
      qualifiedName:
        CSharp: Chroma.Input.Key.F25
        VB: Chroma.Input.Key.F25
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: F25
        path: ''
        startLine: 680
      syntax:
        content:
          CSharp: F25 = 314
          VB: F25 = 314
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.KP_0
      commentId: F:Chroma.Input.Key.KP_0
      language: CSharp
      name:
        CSharp: KP_0
        VB: KP_0
      nameWithType:
        CSharp: Input.Key.KP_0
        VB: Input.Key.KP_0
      qualifiedName:
        CSharp: Chroma.Input.Key.KP_0
        VB: Chroma.Input.Key.KP_0
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: KP_0
        path: ''
        startLine: 681
      syntax:
        content:
          CSharp: KP_0 = 320
          VB: KP_0 = 320
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.KP_1
      commentId: F:Chroma.Input.Key.KP_1
      language: CSharp
      name:
        CSharp: KP_1
        VB: KP_1
      nameWithType:
        CSharp: Input.Key.KP_1
        VB: Input.Key.KP_1
      qualifiedName:
        CSharp: Chroma.Input.Key.KP_1
        VB: Chroma.Input.Key.KP_1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: KP_1
        path: ''
        startLine: 682
      syntax:
        content:
          CSharp: KP_1 = 321
          VB: KP_1 = 321
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.KP_2
      commentId: F:Chroma.Input.Key.KP_2
      language: CSharp
      name:
        CSharp: KP_2
        VB: KP_2
      nameWithType:
        CSharp: Input.Key.KP_2
        VB: Input.Key.KP_2
      qualifiedName:
        CSharp: Chroma.Input.Key.KP_2
        VB: Chroma.Input.Key.KP_2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: KP_2
        path: ''
        startLine: 683
      syntax:
        content:
          CSharp: KP_2 = 322
          VB: KP_2 = 322
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.KP_3
      commentId: F:Chroma.Input.Key.KP_3
      language: CSharp
      name:
        CSharp: KP_3
        VB: KP_3
      nameWithType:
        CSharp: Input.Key.KP_3
        VB: Input.Key.KP_3
      qualifiedName:
        CSharp: Chroma.Input.Key.KP_3
        VB: Chroma.Input.Key.KP_3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: KP_3
        path: ''
        startLine: 684
      syntax:
        content:
          CSharp: KP_3 = 323
          VB: KP_3 = 323
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.KP_4
      commentId: F:Chroma.Input.Key.KP_4
      language: CSharp
      name:
        CSharp: KP_4
        VB: KP_4
      nameWithType:
        CSharp: Input.Key.KP_4
        VB: Input.Key.KP_4
      qualifiedName:
        CSharp: Chroma.Input.Key.KP_4
        VB: Chroma.Input.Key.KP_4
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: KP_4
        path: ''
        startLine: 685
      syntax:
        content:
          CSharp: KP_4 = 324
          VB: KP_4 = 324
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.KP_5
      commentId: F:Chroma.Input.Key.KP_5
      language: CSharp
      name:
        CSharp: KP_5
        VB: KP_5
      nameWithType:
        CSharp: Input.Key.KP_5
        VB: Input.Key.KP_5
      qualifiedName:
        CSharp: Chroma.Input.Key.KP_5
        VB: Chroma.Input.Key.KP_5
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: KP_5
        path: ''
        startLine: 686
      syntax:
        content:
          CSharp: KP_5 = 325
          VB: KP_5 = 325
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.KP_6
      commentId: F:Chroma.Input.Key.KP_6
      language: CSharp
      name:
        CSharp: KP_6
        VB: KP_6
      nameWithType:
        CSharp: Input.Key.KP_6
        VB: Input.Key.KP_6
      qualifiedName:
        CSharp: Chroma.Input.Key.KP_6
        VB: Chroma.Input.Key.KP_6
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: KP_6
        path: ''
        startLine: 687
      syntax:
        content:
          CSharp: KP_6 = 326
          VB: KP_6 = 326
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.KP_7
      commentId: F:Chroma.Input.Key.KP_7
      language: CSharp
      name:
        CSharp: KP_7
        VB: KP_7
      nameWithType:
        CSharp: Input.Key.KP_7
        VB: Input.Key.KP_7
      qualifiedName:
        CSharp: Chroma.Input.Key.KP_7
        VB: Chroma.Input.Key.KP_7
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: KP_7
        path: ''
        startLine: 688
      syntax:
        content:
          CSharp: KP_7 = 327
          VB: KP_7 = 327
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.KP_8
      commentId: F:Chroma.Input.Key.KP_8
      language: CSharp
      name:
        CSharp: KP_8
        VB: KP_8
      nameWithType:
        CSharp: Input.Key.KP_8
        VB: Input.Key.KP_8
      qualifiedName:
        CSharp: Chroma.Input.Key.KP_8
        VB: Chroma.Input.Key.KP_8
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: KP_8
        path: ''
        startLine: 689
      syntax:
        content:
          CSharp: KP_8 = 328
          VB: KP_8 = 328
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.KP_9
      commentId: F:Chroma.Input.Key.KP_9
      language: CSharp
      name:
        CSharp: KP_9
        VB: KP_9
      nameWithType:
        CSharp: Input.Key.KP_9
        VB: Input.Key.KP_9
      qualifiedName:
        CSharp: Chroma.Input.Key.KP_9
        VB: Chroma.Input.Key.KP_9
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: KP_9
        path: ''
        startLine: 690
      syntax:
        content:
          CSharp: KP_9 = 329
          VB: KP_9 = 329
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.KP_DECIMAL
      commentId: F:Chroma.Input.Key.KP_DECIMAL
      language: CSharp
      name:
        CSharp: KP_DECIMAL
        VB: KP_DECIMAL
      nameWithType:
        CSharp: Input.Key.KP_DECIMAL
        VB: Input.Key.KP_DECIMAL
      qualifiedName:
        CSharp: Chroma.Input.Key.KP_DECIMAL
        VB: Chroma.Input.Key.KP_DECIMAL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: KP_DECIMAL
        path: ''
        startLine: 691
      syntax:
        content:
          CSharp: KP_DECIMAL = 330
          VB: KP_DECIMAL = 330
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.KP_DIVIDE
      commentId: F:Chroma.Input.Key.KP_DIVIDE
      language: CSharp
      name:
        CSharp: KP_DIVIDE
        VB: KP_DIVIDE
      nameWithType:
        CSharp: Input.Key.KP_DIVIDE
        VB: Input.Key.KP_DIVIDE
      qualifiedName:
        CSharp: Chroma.Input.Key.KP_DIVIDE
        VB: Chroma.Input.Key.KP_DIVIDE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: KP_DIVIDE
        path: ''
        startLine: 692
      syntax:
        content:
          CSharp: KP_DIVIDE = 331
          VB: KP_DIVIDE = 331
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.KP_MULTIPLY
      commentId: F:Chroma.Input.Key.KP_MULTIPLY
      language: CSharp
      name:
        CSharp: KP_MULTIPLY
        VB: KP_MULTIPLY
      nameWithType:
        CSharp: Input.Key.KP_MULTIPLY
        VB: Input.Key.KP_MULTIPLY
      qualifiedName:
        CSharp: Chroma.Input.Key.KP_MULTIPLY
        VB: Chroma.Input.Key.KP_MULTIPLY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: KP_MULTIPLY
        path: ''
        startLine: 693
      syntax:
        content:
          CSharp: KP_MULTIPLY = 332
          VB: KP_MULTIPLY = 332
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.KP_SUBTRACT
      commentId: F:Chroma.Input.Key.KP_SUBTRACT
      language: CSharp
      name:
        CSharp: KP_SUBTRACT
        VB: KP_SUBTRACT
      nameWithType:
        CSharp: Input.Key.KP_SUBTRACT
        VB: Input.Key.KP_SUBTRACT
      qualifiedName:
        CSharp: Chroma.Input.Key.KP_SUBTRACT
        VB: Chroma.Input.Key.KP_SUBTRACT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: KP_SUBTRACT
        path: ''
        startLine: 694
      syntax:
        content:
          CSharp: KP_SUBTRACT = 333
          VB: KP_SUBTRACT = 333
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.KP_ADD
      commentId: F:Chroma.Input.Key.KP_ADD
      language: CSharp
      name:
        CSharp: KP_ADD
        VB: KP_ADD
      nameWithType:
        CSharp: Input.Key.KP_ADD
        VB: Input.Key.KP_ADD
      qualifiedName:
        CSharp: Chroma.Input.Key.KP_ADD
        VB: Chroma.Input.Key.KP_ADD
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: KP_ADD
        path: ''
        startLine: 695
      syntax:
        content:
          CSharp: KP_ADD = 334
          VB: KP_ADD = 334
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.KP_ENTER
      commentId: F:Chroma.Input.Key.KP_ENTER
      language: CSharp
      name:
        CSharp: KP_ENTER
        VB: KP_ENTER
      nameWithType:
        CSharp: Input.Key.KP_ENTER
        VB: Input.Key.KP_ENTER
      qualifiedName:
        CSharp: Chroma.Input.Key.KP_ENTER
        VB: Chroma.Input.Key.KP_ENTER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: KP_ENTER
        path: ''
        startLine: 696
      syntax:
        content:
          CSharp: KP_ENTER = 335
          VB: KP_ENTER = 335
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.KP_EQUAL
      commentId: F:Chroma.Input.Key.KP_EQUAL
      language: CSharp
      name:
        CSharp: KP_EQUAL
        VB: KP_EQUAL
      nameWithType:
        CSharp: Input.Key.KP_EQUAL
        VB: Input.Key.KP_EQUAL
      qualifiedName:
        CSharp: Chroma.Input.Key.KP_EQUAL
        VB: Chroma.Input.Key.KP_EQUAL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: KP_EQUAL
        path: ''
        startLine: 697
      syntax:
        content:
          CSharp: KP_EQUAL = 336
          VB: KP_EQUAL = 336
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.LEFT_SHIFT
      commentId: F:Chroma.Input.Key.LEFT_SHIFT
      language: CSharp
      name:
        CSharp: LEFT_SHIFT
        VB: LEFT_SHIFT
      nameWithType:
        CSharp: Input.Key.LEFT_SHIFT
        VB: Input.Key.LEFT_SHIFT
      qualifiedName:
        CSharp: Chroma.Input.Key.LEFT_SHIFT
        VB: Chroma.Input.Key.LEFT_SHIFT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: LEFT_SHIFT
        path: ''
        startLine: 698
      syntax:
        content:
          CSharp: LEFT_SHIFT = 340
          VB: LEFT_SHIFT = 340
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.LEFT_CONTROL
      commentId: F:Chroma.Input.Key.LEFT_CONTROL
      language: CSharp
      name:
        CSharp: LEFT_CONTROL
        VB: LEFT_CONTROL
      nameWithType:
        CSharp: Input.Key.LEFT_CONTROL
        VB: Input.Key.LEFT_CONTROL
      qualifiedName:
        CSharp: Chroma.Input.Key.LEFT_CONTROL
        VB: Chroma.Input.Key.LEFT_CONTROL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: LEFT_CONTROL
        path: ''
        startLine: 699
      syntax:
        content:
          CSharp: LEFT_CONTROL = 341
          VB: LEFT_CONTROL = 341
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.LEFT_ALT
      commentId: F:Chroma.Input.Key.LEFT_ALT
      language: CSharp
      name:
        CSharp: LEFT_ALT
        VB: LEFT_ALT
      nameWithType:
        CSharp: Input.Key.LEFT_ALT
        VB: Input.Key.LEFT_ALT
      qualifiedName:
        CSharp: Chroma.Input.Key.LEFT_ALT
        VB: Chroma.Input.Key.LEFT_ALT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: LEFT_ALT
        path: ''
        startLine: 700
      syntax:
        content:
          CSharp: LEFT_ALT = 342
          VB: LEFT_ALT = 342
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.LEFT_SUPER
      commentId: F:Chroma.Input.Key.LEFT_SUPER
      language: CSharp
      name:
        CSharp: LEFT_SUPER
        VB: LEFT_SUPER
      nameWithType:
        CSharp: Input.Key.LEFT_SUPER
        VB: Input.Key.LEFT_SUPER
      qualifiedName:
        CSharp: Chroma.Input.Key.LEFT_SUPER
        VB: Chroma.Input.Key.LEFT_SUPER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: LEFT_SUPER
        path: ''
        startLine: 701
      syntax:
        content:
          CSharp: LEFT_SUPER = 343
          VB: LEFT_SUPER = 343
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.RIGHT_SHIFT
      commentId: F:Chroma.Input.Key.RIGHT_SHIFT
      language: CSharp
      name:
        CSharp: RIGHT_SHIFT
        VB: RIGHT_SHIFT
      nameWithType:
        CSharp: Input.Key.RIGHT_SHIFT
        VB: Input.Key.RIGHT_SHIFT
      qualifiedName:
        CSharp: Chroma.Input.Key.RIGHT_SHIFT
        VB: Chroma.Input.Key.RIGHT_SHIFT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RIGHT_SHIFT
        path: ''
        startLine: 702
      syntax:
        content:
          CSharp: RIGHT_SHIFT = 344
          VB: RIGHT_SHIFT = 344
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.RIGHT_CONTROL
      commentId: F:Chroma.Input.Key.RIGHT_CONTROL
      language: CSharp
      name:
        CSharp: RIGHT_CONTROL
        VB: RIGHT_CONTROL
      nameWithType:
        CSharp: Input.Key.RIGHT_CONTROL
        VB: Input.Key.RIGHT_CONTROL
      qualifiedName:
        CSharp: Chroma.Input.Key.RIGHT_CONTROL
        VB: Chroma.Input.Key.RIGHT_CONTROL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RIGHT_CONTROL
        path: ''
        startLine: 703
      syntax:
        content:
          CSharp: RIGHT_CONTROL = 345
          VB: RIGHT_CONTROL = 345
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.RIGHT_ALT
      commentId: F:Chroma.Input.Key.RIGHT_ALT
      language: CSharp
      name:
        CSharp: RIGHT_ALT
        VB: RIGHT_ALT
      nameWithType:
        CSharp: Input.Key.RIGHT_ALT
        VB: Input.Key.RIGHT_ALT
      qualifiedName:
        CSharp: Chroma.Input.Key.RIGHT_ALT
        VB: Chroma.Input.Key.RIGHT_ALT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RIGHT_ALT
        path: ''
        startLine: 704
      syntax:
        content:
          CSharp: RIGHT_ALT = 346
          VB: RIGHT_ALT = 346
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.RIGHT_SUPER
      commentId: F:Chroma.Input.Key.RIGHT_SUPER
      language: CSharp
      name:
        CSharp: RIGHT_SUPER
        VB: RIGHT_SUPER
      nameWithType:
        CSharp: Input.Key.RIGHT_SUPER
        VB: Input.Key.RIGHT_SUPER
      qualifiedName:
        CSharp: Chroma.Input.Key.RIGHT_SUPER
        VB: Chroma.Input.Key.RIGHT_SUPER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RIGHT_SUPER
        path: ''
        startLine: 705
      syntax:
        content:
          CSharp: RIGHT_SUPER = 347
          VB: RIGHT_SUPER = 347
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key.MENU
      commentId: F:Chroma.Input.Key.MENU
      language: CSharp
      name:
        CSharp: MENU
        VB: MENU
      nameWithType:
        CSharp: Input.Key.MENU
        VB: Input.Key.MENU
      qualifiedName:
        CSharp: Chroma.Input.Key.MENU
        VB: Chroma.Input.Key.MENU
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: MENU
        path: ''
        startLine: 706
      syntax:
        content:
          CSharp: MENU = 348
          VB: MENU = 348
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Key._LAST
      commentId: F:Chroma.Input.Key._LAST
      language: CSharp
      name:
        CSharp: _LAST
        VB: _LAST
      nameWithType:
        CSharp: Input.Key._LAST
        VB: Input.Key._LAST
      qualifiedName:
        CSharp: Chroma.Input.Key._LAST
        VB: Chroma.Input.Key._LAST
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _LAST
        path: ''
        startLine: 708
      syntax:
        content:
          CSharp: _LAST = 348
          VB: _LAST = 348
        return:
          type: Chroma.Input.Key
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Chroma.Input.Gamepad
    commentId: T:Chroma.Input.Gamepad
    language: CSharp
    name:
      CSharp: Input.Gamepad
      VB: Input.Gamepad
    nameWithType:
      CSharp: Input.Gamepad
      VB: Input.Gamepad
    qualifiedName:
      CSharp: Chroma.Input.Gamepad
      VB: Chroma.Input.Gamepad
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Gamepad
      path: ''
      startLine: 711
    syntax:
      content:
        CSharp: public enum Gamepad
        VB: Public Enum Gamepad
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Chroma.Input.Gamepad._1
      commentId: F:Chroma.Input.Gamepad._1
      language: CSharp
      name:
        CSharp: _1
        VB: _1
      nameWithType:
        CSharp: Input.Gamepad._1
        VB: Input.Gamepad._1
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._1
        VB: Chroma.Input.Gamepad._1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _1
        path: ''
        startLine: 713
      syntax:
        content:
          CSharp: _1 = 0
          VB: _1 = 0
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Gamepad._2
      commentId: F:Chroma.Input.Gamepad._2
      language: CSharp
      name:
        CSharp: _2
        VB: _2
      nameWithType:
        CSharp: Input.Gamepad._2
        VB: Input.Gamepad._2
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._2
        VB: Chroma.Input.Gamepad._2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _2
        path: ''
        startLine: 714
      syntax:
        content:
          CSharp: _2 = 1
          VB: _2 = 1
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Gamepad._3
      commentId: F:Chroma.Input.Gamepad._3
      language: CSharp
      name:
        CSharp: _3
        VB: _3
      nameWithType:
        CSharp: Input.Gamepad._3
        VB: Input.Gamepad._3
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._3
        VB: Chroma.Input.Gamepad._3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _3
        path: ''
        startLine: 715
      syntax:
        content:
          CSharp: _3 = 2
          VB: _3 = 2
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Gamepad._4
      commentId: F:Chroma.Input.Gamepad._4
      language: CSharp
      name:
        CSharp: _4
        VB: _4
      nameWithType:
        CSharp: Input.Gamepad._4
        VB: Input.Gamepad._4
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._4
        VB: Chroma.Input.Gamepad._4
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _4
        path: ''
        startLine: 716
      syntax:
        content:
          CSharp: _4 = 3
          VB: _4 = 3
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Gamepad._5
      commentId: F:Chroma.Input.Gamepad._5
      language: CSharp
      name:
        CSharp: _5
        VB: _5
      nameWithType:
        CSharp: Input.Gamepad._5
        VB: Input.Gamepad._5
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._5
        VB: Chroma.Input.Gamepad._5
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _5
        path: ''
        startLine: 717
      syntax:
        content:
          CSharp: _5 = 4
          VB: _5 = 4
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Gamepad._6
      commentId: F:Chroma.Input.Gamepad._6
      language: CSharp
      name:
        CSharp: _6
        VB: _6
      nameWithType:
        CSharp: Input.Gamepad._6
        VB: Input.Gamepad._6
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._6
        VB: Chroma.Input.Gamepad._6
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _6
        path: ''
        startLine: 718
      syntax:
        content:
          CSharp: _6 = 5
          VB: _6 = 5
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Gamepad._7
      commentId: F:Chroma.Input.Gamepad._7
      language: CSharp
      name:
        CSharp: _7
        VB: _7
      nameWithType:
        CSharp: Input.Gamepad._7
        VB: Input.Gamepad._7
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._7
        VB: Chroma.Input.Gamepad._7
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _7
        path: ''
        startLine: 719
      syntax:
        content:
          CSharp: _7 = 6
          VB: _7 = 6
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Gamepad._8
      commentId: F:Chroma.Input.Gamepad._8
      language: CSharp
      name:
        CSharp: _8
        VB: _8
      nameWithType:
        CSharp: Input.Gamepad._8
        VB: Input.Gamepad._8
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._8
        VB: Chroma.Input.Gamepad._8
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _8
        path: ''
        startLine: 720
      syntax:
        content:
          CSharp: _8 = 7
          VB: _8 = 7
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Gamepad._9
      commentId: F:Chroma.Input.Gamepad._9
      language: CSharp
      name:
        CSharp: _9
        VB: _9
      nameWithType:
        CSharp: Input.Gamepad._9
        VB: Input.Gamepad._9
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._9
        VB: Chroma.Input.Gamepad._9
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _9
        path: ''
        startLine: 721
      syntax:
        content:
          CSharp: _9 = 8
          VB: _9 = 8
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Gamepad._10
      commentId: F:Chroma.Input.Gamepad._10
      language: CSharp
      name:
        CSharp: _10
        VB: _10
      nameWithType:
        CSharp: Input.Gamepad._10
        VB: Input.Gamepad._10
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._10
        VB: Chroma.Input.Gamepad._10
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _10
        path: ''
        startLine: 722
      syntax:
        content:
          CSharp: _10 = 9
          VB: _10 = 9
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Gamepad._11
      commentId: F:Chroma.Input.Gamepad._11
      language: CSharp
      name:
        CSharp: _11
        VB: _11
      nameWithType:
        CSharp: Input.Gamepad._11
        VB: Input.Gamepad._11
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._11
        VB: Chroma.Input.Gamepad._11
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _11
        path: ''
        startLine: 723
      syntax:
        content:
          CSharp: _11 = 10
          VB: _11 = 10
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Gamepad._12
      commentId: F:Chroma.Input.Gamepad._12
      language: CSharp
      name:
        CSharp: _12
        VB: _12
      nameWithType:
        CSharp: Input.Gamepad._12
        VB: Input.Gamepad._12
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._12
        VB: Chroma.Input.Gamepad._12
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _12
        path: ''
        startLine: 724
      syntax:
        content:
          CSharp: _12 = 11
          VB: _12 = 11
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Gamepad._13
      commentId: F:Chroma.Input.Gamepad._13
      language: CSharp
      name:
        CSharp: _13
        VB: _13
      nameWithType:
        CSharp: Input.Gamepad._13
        VB: Input.Gamepad._13
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._13
        VB: Chroma.Input.Gamepad._13
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _13
        path: ''
        startLine: 725
      syntax:
        content:
          CSharp: _13 = 12
          VB: _13 = 12
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Gamepad._14
      commentId: F:Chroma.Input.Gamepad._14
      language: CSharp
      name:
        CSharp: _14
        VB: _14
      nameWithType:
        CSharp: Input.Gamepad._14
        VB: Input.Gamepad._14
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._14
        VB: Chroma.Input.Gamepad._14
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _14
        path: ''
        startLine: 726
      syntax:
        content:
          CSharp: _14 = 13
          VB: _14 = 13
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Gamepad._15
      commentId: F:Chroma.Input.Gamepad._15
      language: CSharp
      name:
        CSharp: _15
        VB: _15
      nameWithType:
        CSharp: Input.Gamepad._15
        VB: Input.Gamepad._15
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._15
        VB: Chroma.Input.Gamepad._15
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _15
        path: ''
        startLine: 727
      syntax:
        content:
          CSharp: _15 = 14
          VB: _15 = 14
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Gamepad._16
      commentId: F:Chroma.Input.Gamepad._16
      language: CSharp
      name:
        CSharp: _16
        VB: _16
      nameWithType:
        CSharp: Input.Gamepad._16
        VB: Input.Gamepad._16
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._16
        VB: Chroma.Input.Gamepad._16
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _16
        path: ''
        startLine: 728
      syntax:
        content:
          CSharp: _16 = 15
          VB: _16 = 15
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Gamepad._LAST
      commentId: F:Chroma.Input.Gamepad._LAST
      language: CSharp
      name:
        CSharp: _LAST
        VB: _LAST
      nameWithType:
        CSharp: Input.Gamepad._LAST
        VB: Input.Gamepad._LAST
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._LAST
        VB: Chroma.Input.Gamepad._LAST
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _LAST
        path: ''
        startLine: 729
      syntax:
        content:
          CSharp: _LAST = 15
          VB: _LAST = 15
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.Gamepad._NULL
      commentId: F:Chroma.Input.Gamepad._NULL
      language: CSharp
      name:
        CSharp: _NULL
        VB: _NULL
      nameWithType:
        CSharp: Input.Gamepad._NULL
        VB: Input.Gamepad._NULL
      qualifiedName:
        CSharp: Chroma.Input.Gamepad._NULL
        VB: Chroma.Input.Gamepad._NULL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _NULL
        path: ''
        startLine: 730
      syntax:
        content:
          CSharp: _NULL = 0
          VB: _NULL = 0
        return:
          type: Chroma.Input.Gamepad
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Chroma.Input.GamepadButton
    commentId: T:Chroma.Input.GamepadButton
    language: CSharp
    name:
      CSharp: Input.GamepadButton
      VB: Input.GamepadButton
    nameWithType:
      CSharp: Input.GamepadButton
      VB: Input.GamepadButton
    qualifiedName:
      CSharp: Chroma.Input.GamepadButton
      VB: Chroma.Input.GamepadButton
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: GamepadButton
      path: ''
      startLine: 733
    syntax:
      content:
        CSharp: public enum GamepadButton
        VB: Public Enum GamepadButton
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Chroma.Input.GamepadButton.A
      commentId: F:Chroma.Input.GamepadButton.A
      language: CSharp
      name:
        CSharp: A
        VB: A
      nameWithType:
        CSharp: Input.GamepadButton.A
        VB: Input.GamepadButton.A
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.A
        VB: Chroma.Input.GamepadButton.A
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: A
        path: ''
        startLine: 735
      syntax:
        content:
          CSharp: A = 0
          VB: A = 0
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.B
      commentId: F:Chroma.Input.GamepadButton.B
      language: CSharp
      name:
        CSharp: B
        VB: B
      nameWithType:
        CSharp: Input.GamepadButton.B
        VB: Input.GamepadButton.B
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.B
        VB: Chroma.Input.GamepadButton.B
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: B
        path: ''
        startLine: 736
      syntax:
        content:
          CSharp: B = 1
          VB: B = 1
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.X
      commentId: F:Chroma.Input.GamepadButton.X
      language: CSharp
      name:
        CSharp: X
        VB: X
      nameWithType:
        CSharp: Input.GamepadButton.X
        VB: Input.GamepadButton.X
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.X
        VB: Chroma.Input.GamepadButton.X
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: X
        path: ''
        startLine: 737
      syntax:
        content:
          CSharp: X = 2
          VB: X = 2
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.Y
      commentId: F:Chroma.Input.GamepadButton.Y
      language: CSharp
      name:
        CSharp: Y
        VB: Y
      nameWithType:
        CSharp: Input.GamepadButton.Y
        VB: Input.GamepadButton.Y
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.Y
        VB: Chroma.Input.GamepadButton.Y
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Y
        path: ''
        startLine: 738
      syntax:
        content:
          CSharp: Y = 3
          VB: Y = 3
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.LEFT_BUMPER
      commentId: F:Chroma.Input.GamepadButton.LEFT_BUMPER
      language: CSharp
      name:
        CSharp: LEFT_BUMPER
        VB: LEFT_BUMPER
      nameWithType:
        CSharp: Input.GamepadButton.LEFT_BUMPER
        VB: Input.GamepadButton.LEFT_BUMPER
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.LEFT_BUMPER
        VB: Chroma.Input.GamepadButton.LEFT_BUMPER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: LEFT_BUMPER
        path: ''
        startLine: 739
      syntax:
        content:
          CSharp: LEFT_BUMPER = 4
          VB: LEFT_BUMPER = 4
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.RIGHT_BUMPER
      commentId: F:Chroma.Input.GamepadButton.RIGHT_BUMPER
      language: CSharp
      name:
        CSharp: RIGHT_BUMPER
        VB: RIGHT_BUMPER
      nameWithType:
        CSharp: Input.GamepadButton.RIGHT_BUMPER
        VB: Input.GamepadButton.RIGHT_BUMPER
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.RIGHT_BUMPER
        VB: Chroma.Input.GamepadButton.RIGHT_BUMPER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RIGHT_BUMPER
        path: ''
        startLine: 740
      syntax:
        content:
          CSharp: RIGHT_BUMPER = 5
          VB: RIGHT_BUMPER = 5
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.BACK
      commentId: F:Chroma.Input.GamepadButton.BACK
      language: CSharp
      name:
        CSharp: BACK
        VB: BACK
      nameWithType:
        CSharp: Input.GamepadButton.BACK
        VB: Input.GamepadButton.BACK
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.BACK
        VB: Chroma.Input.GamepadButton.BACK
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: BACK
        path: ''
        startLine: 741
      syntax:
        content:
          CSharp: BACK = 6
          VB: BACK = 6
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.START
      commentId: F:Chroma.Input.GamepadButton.START
      language: CSharp
      name:
        CSharp: START
        VB: START
      nameWithType:
        CSharp: Input.GamepadButton.START
        VB: Input.GamepadButton.START
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.START
        VB: Chroma.Input.GamepadButton.START
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: START
        path: ''
        startLine: 742
      syntax:
        content:
          CSharp: START = 7
          VB: START = 7
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.GUIDE
      commentId: F:Chroma.Input.GamepadButton.GUIDE
      language: CSharp
      name:
        CSharp: GUIDE
        VB: GUIDE
      nameWithType:
        CSharp: Input.GamepadButton.GUIDE
        VB: Input.GamepadButton.GUIDE
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.GUIDE
        VB: Chroma.Input.GamepadButton.GUIDE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GUIDE
        path: ''
        startLine: 743
      syntax:
        content:
          CSharp: GUIDE = 8
          VB: GUIDE = 8
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.LEFT_THUMB
      commentId: F:Chroma.Input.GamepadButton.LEFT_THUMB
      language: CSharp
      name:
        CSharp: LEFT_THUMB
        VB: LEFT_THUMB
      nameWithType:
        CSharp: Input.GamepadButton.LEFT_THUMB
        VB: Input.GamepadButton.LEFT_THUMB
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.LEFT_THUMB
        VB: Chroma.Input.GamepadButton.LEFT_THUMB
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: LEFT_THUMB
        path: ''
        startLine: 744
      syntax:
        content:
          CSharp: LEFT_THUMB = 9
          VB: LEFT_THUMB = 9
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.RIGHT_THUMB
      commentId: F:Chroma.Input.GamepadButton.RIGHT_THUMB
      language: CSharp
      name:
        CSharp: RIGHT_THUMB
        VB: RIGHT_THUMB
      nameWithType:
        CSharp: Input.GamepadButton.RIGHT_THUMB
        VB: Input.GamepadButton.RIGHT_THUMB
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.RIGHT_THUMB
        VB: Chroma.Input.GamepadButton.RIGHT_THUMB
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RIGHT_THUMB
        path: ''
        startLine: 745
      syntax:
        content:
          CSharp: RIGHT_THUMB = 10
          VB: RIGHT_THUMB = 10
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.DPAD_UP
      commentId: F:Chroma.Input.GamepadButton.DPAD_UP
      language: CSharp
      name:
        CSharp: DPAD_UP
        VB: DPAD_UP
      nameWithType:
        CSharp: Input.GamepadButton.DPAD_UP
        VB: Input.GamepadButton.DPAD_UP
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.DPAD_UP
        VB: Chroma.Input.GamepadButton.DPAD_UP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: DPAD_UP
        path: ''
        startLine: 746
      syntax:
        content:
          CSharp: DPAD_UP = 11
          VB: DPAD_UP = 11
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.DPAD_RIGHT
      commentId: F:Chroma.Input.GamepadButton.DPAD_RIGHT
      language: CSharp
      name:
        CSharp: DPAD_RIGHT
        VB: DPAD_RIGHT
      nameWithType:
        CSharp: Input.GamepadButton.DPAD_RIGHT
        VB: Input.GamepadButton.DPAD_RIGHT
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.DPAD_RIGHT
        VB: Chroma.Input.GamepadButton.DPAD_RIGHT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: DPAD_RIGHT
        path: ''
        startLine: 747
      syntax:
        content:
          CSharp: DPAD_RIGHT = 12
          VB: DPAD_RIGHT = 12
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.DPAD_DOWN
      commentId: F:Chroma.Input.GamepadButton.DPAD_DOWN
      language: CSharp
      name:
        CSharp: DPAD_DOWN
        VB: DPAD_DOWN
      nameWithType:
        CSharp: Input.GamepadButton.DPAD_DOWN
        VB: Input.GamepadButton.DPAD_DOWN
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.DPAD_DOWN
        VB: Chroma.Input.GamepadButton.DPAD_DOWN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: DPAD_DOWN
        path: ''
        startLine: 748
      syntax:
        content:
          CSharp: DPAD_DOWN = 13
          VB: DPAD_DOWN = 13
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.DPAD_LEFT
      commentId: F:Chroma.Input.GamepadButton.DPAD_LEFT
      language: CSharp
      name:
        CSharp: DPAD_LEFT
        VB: DPAD_LEFT
      nameWithType:
        CSharp: Input.GamepadButton.DPAD_LEFT
        VB: Input.GamepadButton.DPAD_LEFT
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.DPAD_LEFT
        VB: Chroma.Input.GamepadButton.DPAD_LEFT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: DPAD_LEFT
        path: ''
        startLine: 749
      syntax:
        content:
          CSharp: DPAD_LEFT = 14
          VB: DPAD_LEFT = 14
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton._LAST
      commentId: F:Chroma.Input.GamepadButton._LAST
      language: CSharp
      name:
        CSharp: _LAST
        VB: _LAST
      nameWithType:
        CSharp: Input.GamepadButton._LAST
        VB: Input.GamepadButton._LAST
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton._LAST
        VB: Chroma.Input.GamepadButton._LAST
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _LAST
        path: ''
        startLine: 750
      syntax:
        content:
          CSharp: _LAST = 13
          VB: _LAST = 13
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.CROSS
      commentId: F:Chroma.Input.GamepadButton.CROSS
      language: CSharp
      name:
        CSharp: CROSS
        VB: CROSS
      nameWithType:
        CSharp: Input.GamepadButton.CROSS
        VB: Input.GamepadButton.CROSS
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.CROSS
        VB: Chroma.Input.GamepadButton.CROSS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: CROSS
        path: ''
        startLine: 751
      syntax:
        content:
          CSharp: CROSS = 0
          VB: CROSS = 0
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.CIRCLE
      commentId: F:Chroma.Input.GamepadButton.CIRCLE
      language: CSharp
      name:
        CSharp: CIRCLE
        VB: CIRCLE
      nameWithType:
        CSharp: Input.GamepadButton.CIRCLE
        VB: Input.GamepadButton.CIRCLE
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.CIRCLE
        VB: Chroma.Input.GamepadButton.CIRCLE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: CIRCLE
        path: ''
        startLine: 752
      syntax:
        content:
          CSharp: CIRCLE = 1
          VB: CIRCLE = 1
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.SQUARE
      commentId: F:Chroma.Input.GamepadButton.SQUARE
      language: CSharp
      name:
        CSharp: SQUARE
        VB: SQUARE
      nameWithType:
        CSharp: Input.GamepadButton.SQUARE
        VB: Input.GamepadButton.SQUARE
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.SQUARE
        VB: Chroma.Input.GamepadButton.SQUARE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: SQUARE
        path: ''
        startLine: 753
      syntax:
        content:
          CSharp: SQUARE = 2
          VB: SQUARE = 2
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadButton.TRIANGLE
      commentId: F:Chroma.Input.GamepadButton.TRIANGLE
      language: CSharp
      name:
        CSharp: TRIANGLE
        VB: TRIANGLE
      nameWithType:
        CSharp: Input.GamepadButton.TRIANGLE
        VB: Input.GamepadButton.TRIANGLE
      qualifiedName:
        CSharp: Chroma.Input.GamepadButton.TRIANGLE
        VB: Chroma.Input.GamepadButton.TRIANGLE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: TRIANGLE
        path: ''
        startLine: 754
      syntax:
        content:
          CSharp: TRIANGLE = 3
          VB: TRIANGLE = 3
        return:
          type: Chroma.Input.GamepadButton
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Chroma.Input.GamepadAxis
    commentId: T:Chroma.Input.GamepadAxis
    language: CSharp
    name:
      CSharp: Input.GamepadAxis
      VB: Input.GamepadAxis
    nameWithType:
      CSharp: Input.GamepadAxis
      VB: Input.GamepadAxis
    qualifiedName:
      CSharp: Chroma.Input.GamepadAxis
      VB: Chroma.Input.GamepadAxis
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: GamepadAxis
      path: ''
      startLine: 757
    syntax:
      content:
        CSharp: public enum GamepadAxis
        VB: Public Enum GamepadAxis
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Chroma.Input.GamepadAxis.LEFT_X
      commentId: F:Chroma.Input.GamepadAxis.LEFT_X
      language: CSharp
      name:
        CSharp: LEFT_X
        VB: LEFT_X
      nameWithType:
        CSharp: Input.GamepadAxis.LEFT_X
        VB: Input.GamepadAxis.LEFT_X
      qualifiedName:
        CSharp: Chroma.Input.GamepadAxis.LEFT_X
        VB: Chroma.Input.GamepadAxis.LEFT_X
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: LEFT_X
        path: ''
        startLine: 759
      syntax:
        content:
          CSharp: LEFT_X = 0
          VB: LEFT_X = 0
        return:
          type: Chroma.Input.GamepadAxis
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadAxis.LEFT_Y
      commentId: F:Chroma.Input.GamepadAxis.LEFT_Y
      language: CSharp
      name:
        CSharp: LEFT_Y
        VB: LEFT_Y
      nameWithType:
        CSharp: Input.GamepadAxis.LEFT_Y
        VB: Input.GamepadAxis.LEFT_Y
      qualifiedName:
        CSharp: Chroma.Input.GamepadAxis.LEFT_Y
        VB: Chroma.Input.GamepadAxis.LEFT_Y
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: LEFT_Y
        path: ''
        startLine: 760
      syntax:
        content:
          CSharp: LEFT_Y = 1
          VB: LEFT_Y = 1
        return:
          type: Chroma.Input.GamepadAxis
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadAxis.RIGHT_X
      commentId: F:Chroma.Input.GamepadAxis.RIGHT_X
      language: CSharp
      name:
        CSharp: RIGHT_X
        VB: RIGHT_X
      nameWithType:
        CSharp: Input.GamepadAxis.RIGHT_X
        VB: Input.GamepadAxis.RIGHT_X
      qualifiedName:
        CSharp: Chroma.Input.GamepadAxis.RIGHT_X
        VB: Chroma.Input.GamepadAxis.RIGHT_X
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RIGHT_X
        path: ''
        startLine: 761
      syntax:
        content:
          CSharp: RIGHT_X = 2
          VB: RIGHT_X = 2
        return:
          type: Chroma.Input.GamepadAxis
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadAxis.RIGHT_Y
      commentId: F:Chroma.Input.GamepadAxis.RIGHT_Y
      language: CSharp
      name:
        CSharp: RIGHT_Y
        VB: RIGHT_Y
      nameWithType:
        CSharp: Input.GamepadAxis.RIGHT_Y
        VB: Input.GamepadAxis.RIGHT_Y
      qualifiedName:
        CSharp: Chroma.Input.GamepadAxis.RIGHT_Y
        VB: Chroma.Input.GamepadAxis.RIGHT_Y
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RIGHT_Y
        path: ''
        startLine: 762
      syntax:
        content:
          CSharp: RIGHT_Y = 3
          VB: RIGHT_Y = 3
        return:
          type: Chroma.Input.GamepadAxis
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadAxis.LEFT_TRIGGER
      commentId: F:Chroma.Input.GamepadAxis.LEFT_TRIGGER
      language: CSharp
      name:
        CSharp: LEFT_TRIGGER
        VB: LEFT_TRIGGER
      nameWithType:
        CSharp: Input.GamepadAxis.LEFT_TRIGGER
        VB: Input.GamepadAxis.LEFT_TRIGGER
      qualifiedName:
        CSharp: Chroma.Input.GamepadAxis.LEFT_TRIGGER
        VB: Chroma.Input.GamepadAxis.LEFT_TRIGGER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: LEFT_TRIGGER
        path: ''
        startLine: 763
      syntax:
        content:
          CSharp: LEFT_TRIGGER = 4
          VB: LEFT_TRIGGER = 4
        return:
          type: Chroma.Input.GamepadAxis
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadAxis.RIGHT_TRIGGER
      commentId: F:Chroma.Input.GamepadAxis.RIGHT_TRIGGER
      language: CSharp
      name:
        CSharp: RIGHT_TRIGGER
        VB: RIGHT_TRIGGER
      nameWithType:
        CSharp: Input.GamepadAxis.RIGHT_TRIGGER
        VB: Input.GamepadAxis.RIGHT_TRIGGER
      qualifiedName:
        CSharp: Chroma.Input.GamepadAxis.RIGHT_TRIGGER
        VB: Chroma.Input.GamepadAxis.RIGHT_TRIGGER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RIGHT_TRIGGER
        path: ''
        startLine: 764
      syntax:
        content:
          CSharp: RIGHT_TRIGGER = 5
          VB: RIGHT_TRIGGER = 5
        return:
          type: Chroma.Input.GamepadAxis
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.GamepadAxis._LAST
      commentId: F:Chroma.Input.GamepadAxis._LAST
      language: CSharp
      name:
        CSharp: _LAST
        VB: _LAST
      nameWithType:
        CSharp: Input.GamepadAxis._LAST
        VB: Input.GamepadAxis._LAST
      qualifiedName:
        CSharp: Chroma.Input.GamepadAxis._LAST
        VB: Chroma.Input.GamepadAxis._LAST
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _LAST
        path: ''
        startLine: 765
      syntax:
        content:
          CSharp: _LAST = 5
          VB: _LAST = 5
        return:
          type: Chroma.Input.GamepadAxis
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Chroma.Input.ConnectionState
    commentId: T:Chroma.Input.ConnectionState
    language: CSharp
    name:
      CSharp: Input.ConnectionState
      VB: Input.ConnectionState
    nameWithType:
      CSharp: Input.ConnectionState
      VB: Input.ConnectionState
    qualifiedName:
      CSharp: Chroma.Input.ConnectionState
      VB: Chroma.Input.ConnectionState
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: ConnectionState
      path: ''
      startLine: 768
    syntax:
      content:
        CSharp: public enum ConnectionState
        VB: Public Enum ConnectionState
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Chroma.Input.ConnectionState.DISCONNECTED
      commentId: F:Chroma.Input.ConnectionState.DISCONNECTED
      language: CSharp
      name:
        CSharp: DISCONNECTED
        VB: DISCONNECTED
      nameWithType:
        CSharp: Input.ConnectionState.DISCONNECTED
        VB: Input.ConnectionState.DISCONNECTED
      qualifiedName:
        CSharp: Chroma.Input.ConnectionState.DISCONNECTED
        VB: Chroma.Input.ConnectionState.DISCONNECTED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: DISCONNECTED
        path: ''
        startLine: 770
      syntax:
        content:
          CSharp: DISCONNECTED = 0
          VB: DISCONNECTED = 0
        return:
          type: Chroma.Input.ConnectionState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.ConnectionState.CONNECTED
      commentId: F:Chroma.Input.ConnectionState.CONNECTED
      language: CSharp
      name:
        CSharp: CONNECTED
        VB: CONNECTED
      nameWithType:
        CSharp: Input.ConnectionState.CONNECTED
        VB: Input.ConnectionState.CONNECTED
      qualifiedName:
        CSharp: Chroma.Input.ConnectionState.CONNECTED
        VB: Chroma.Input.ConnectionState.CONNECTED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: CONNECTED
        path: ''
        startLine: 771
      syntax:
        content:
          CSharp: CONNECTED = 1
          VB: CONNECTED = 1
        return:
          type: Chroma.Input.ConnectionState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Chroma.Input.JoystickHatState
    commentId: T:Chroma.Input.JoystickHatState
    language: CSharp
    name:
      CSharp: Input.JoystickHatState
      VB: Input.JoystickHatState
    nameWithType:
      CSharp: Input.JoystickHatState
      VB: Input.JoystickHatState
    qualifiedName:
      CSharp: Chroma.Input.JoystickHatState
      VB: Chroma.Input.JoystickHatState
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: JoystickHatState
      path: ''
      startLine: 774
    syntax:
      content:
        CSharp: public enum JoystickHatState
        VB: Public Enum JoystickHatState
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Chroma.Input.JoystickHatState.CENTERED
      commentId: F:Chroma.Input.JoystickHatState.CENTERED
      language: CSharp
      name:
        CSharp: CENTERED
        VB: CENTERED
      nameWithType:
        CSharp: Input.JoystickHatState.CENTERED
        VB: Input.JoystickHatState.CENTERED
      qualifiedName:
        CSharp: Chroma.Input.JoystickHatState.CENTERED
        VB: Chroma.Input.JoystickHatState.CENTERED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: CENTERED
        path: ''
        startLine: 776
      syntax:
        content:
          CSharp: CENTERED = 0
          VB: CENTERED = 0
        return:
          type: Chroma.Input.JoystickHatState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.JoystickHatState.UP
      commentId: F:Chroma.Input.JoystickHatState.UP
      language: CSharp
      name:
        CSharp: UP
        VB: UP
      nameWithType:
        CSharp: Input.JoystickHatState.UP
        VB: Input.JoystickHatState.UP
      qualifiedName:
        CSharp: Chroma.Input.JoystickHatState.UP
        VB: Chroma.Input.JoystickHatState.UP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: UP
        path: ''
        startLine: 777
      syntax:
        content:
          CSharp: UP = 1
          VB: UP = 1
        return:
          type: Chroma.Input.JoystickHatState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.JoystickHatState.RIGHT
      commentId: F:Chroma.Input.JoystickHatState.RIGHT
      language: CSharp
      name:
        CSharp: RIGHT
        VB: RIGHT
      nameWithType:
        CSharp: Input.JoystickHatState.RIGHT
        VB: Input.JoystickHatState.RIGHT
      qualifiedName:
        CSharp: Chroma.Input.JoystickHatState.RIGHT
        VB: Chroma.Input.JoystickHatState.RIGHT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RIGHT
        path: ''
        startLine: 778
      syntax:
        content:
          CSharp: RIGHT = 2
          VB: RIGHT = 2
        return:
          type: Chroma.Input.JoystickHatState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.JoystickHatState.DOWN
      commentId: F:Chroma.Input.JoystickHatState.DOWN
      language: CSharp
      name:
        CSharp: DOWN
        VB: DOWN
      nameWithType:
        CSharp: Input.JoystickHatState.DOWN
        VB: Input.JoystickHatState.DOWN
      qualifiedName:
        CSharp: Chroma.Input.JoystickHatState.DOWN
        VB: Chroma.Input.JoystickHatState.DOWN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: DOWN
        path: ''
        startLine: 779
      syntax:
        content:
          CSharp: DOWN = 4
          VB: DOWN = 4
        return:
          type: Chroma.Input.JoystickHatState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.JoystickHatState.LEFT
      commentId: F:Chroma.Input.JoystickHatState.LEFT
      language: CSharp
      name:
        CSharp: LEFT
        VB: LEFT
      nameWithType:
        CSharp: Input.JoystickHatState.LEFT
        VB: Input.JoystickHatState.LEFT
      qualifiedName:
        CSharp: Chroma.Input.JoystickHatState.LEFT
        VB: Chroma.Input.JoystickHatState.LEFT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: LEFT
        path: ''
        startLine: 780
      syntax:
        content:
          CSharp: LEFT = 8
          VB: LEFT = 8
        return:
          type: Chroma.Input.JoystickHatState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.JoystickHatState.RIGHT_UP
      commentId: F:Chroma.Input.JoystickHatState.RIGHT_UP
      language: CSharp
      name:
        CSharp: RIGHT_UP
        VB: RIGHT_UP
      nameWithType:
        CSharp: Input.JoystickHatState.RIGHT_UP
        VB: Input.JoystickHatState.RIGHT_UP
      qualifiedName:
        CSharp: Chroma.Input.JoystickHatState.RIGHT_UP
        VB: Chroma.Input.JoystickHatState.RIGHT_UP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RIGHT_UP
        path: ''
        startLine: 781
      syntax:
        content:
          CSharp: RIGHT_UP = 3
          VB: RIGHT_UP = 3
        return:
          type: Chroma.Input.JoystickHatState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.JoystickHatState.RIGHT_DOWN
      commentId: F:Chroma.Input.JoystickHatState.RIGHT_DOWN
      language: CSharp
      name:
        CSharp: RIGHT_DOWN
        VB: RIGHT_DOWN
      nameWithType:
        CSharp: Input.JoystickHatState.RIGHT_DOWN
        VB: Input.JoystickHatState.RIGHT_DOWN
      qualifiedName:
        CSharp: Chroma.Input.JoystickHatState.RIGHT_DOWN
        VB: Chroma.Input.JoystickHatState.RIGHT_DOWN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RIGHT_DOWN
        path: ''
        startLine: 782
      syntax:
        content:
          CSharp: RIGHT_DOWN = 6
          VB: RIGHT_DOWN = 6
        return:
          type: Chroma.Input.JoystickHatState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.JoystickHatState.LEFT_UP
      commentId: F:Chroma.Input.JoystickHatState.LEFT_UP
      language: CSharp
      name:
        CSharp: LEFT_UP
        VB: LEFT_UP
      nameWithType:
        CSharp: Input.JoystickHatState.LEFT_UP
        VB: Input.JoystickHatState.LEFT_UP
      qualifiedName:
        CSharp: Chroma.Input.JoystickHatState.LEFT_UP
        VB: Chroma.Input.JoystickHatState.LEFT_UP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: LEFT_UP
        path: ''
        startLine: 783
      syntax:
        content:
          CSharp: LEFT_UP = 9
          VB: LEFT_UP = 9
        return:
          type: Chroma.Input.JoystickHatState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Input.JoystickHatState.LEFT_DOWN
      commentId: F:Chroma.Input.JoystickHatState.LEFT_DOWN
      language: CSharp
      name:
        CSharp: LEFT_DOWN
        VB: LEFT_DOWN
      nameWithType:
        CSharp: Input.JoystickHatState.LEFT_DOWN
        VB: Input.JoystickHatState.LEFT_DOWN
      qualifiedName:
        CSharp: Chroma.Input.JoystickHatState.LEFT_DOWN
        VB: Chroma.Input.JoystickHatState.LEFT_DOWN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: LEFT_DOWN
        path: ''
        startLine: 784
      syntax:
        content:
          CSharp: LEFT_DOWN = 12
          VB: LEFT_DOWN = 12
        return:
          type: Chroma.Input.JoystickHatState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Chroma.Log
    commentId: T:Chroma.Log
    language: CSharp
    name:
      CSharp: Log
      VB: Log
    nameWithType:
      CSharp: Log
      VB: Log
    qualifiedName:
      CSharp: Chroma.Log
      VB: Chroma.Log
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Log
      path: ''
      startLine: 935
    syntax:
      content:
        CSharp: public static class Log
        VB: Public Module Log
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Chroma.Log.Trace(System.String,System.Object[])
      commentId: M:Chroma.Log.Trace(System.String,System.Object[])
      language: CSharp
      name:
        CSharp: Trace(String, Object[])
        VB: Trace(String, Object())
      nameWithType:
        CSharp: Log.Trace(String, Object[])
        VB: Log.Trace(String, Object())
      qualifiedName:
        CSharp: Chroma.Log.Trace(System.String, System.Object[])
        VB: Chroma.Log.Trace(System.String, System.Object())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Trace
        path: ''
        startLine: 947
      syntax:
        content:
          CSharp: public static void Trace(string format, params object[] parameters)
          VB: Public Shared Sub Trace(format As String, ParamArray parameters As Object())
        parameters:
        - id: format
          type: System.String
        - id: parameters
          type: System.Object[]
      overload: Chroma.Log.Trace*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Log.WriteLine(System.String,System.Object[])
      commentId: M:Chroma.Log.WriteLine(System.String,System.Object[])
      language: CSharp
      name:
        CSharp: WriteLine(String, Object[])
        VB: WriteLine(String, Object())
      nameWithType:
        CSharp: Log.WriteLine(String, Object[])
        VB: Log.WriteLine(String, Object())
      qualifiedName:
        CSharp: Chroma.Log.WriteLine(System.String, System.Object[])
        VB: Chroma.Log.WriteLine(System.String, System.Object())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: WriteLine
        path: ''
        startLine: 948
      syntax:
        content:
          CSharp: public static void WriteLine(string format, params object[] parameters)
          VB: Public Shared Sub WriteLine(format As String, ParamArray parameters As Object())
        parameters:
        - id: format
          type: System.String
        - id: parameters
          type: System.Object[]
      overload: Chroma.Log.WriteLine*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Log.Debug(System.String,System.Object[])
      commentId: M:Chroma.Log.Debug(System.String,System.Object[])
      language: CSharp
      name:
        CSharp: Debug(String, Object[])
        VB: Debug(String, Object())
      nameWithType:
        CSharp: Log.Debug(String, Object[])
        VB: Log.Debug(String, Object())
      qualifiedName:
        CSharp: Chroma.Log.Debug(System.String, System.Object[])
        VB: Chroma.Log.Debug(System.String, System.Object())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Debug
        path: ''
        startLine: 949
      syntax:
        content:
          CSharp: public static void Debug(string format, params object[] parameters)
          VB: Public Shared Sub Debug(format As String, ParamArray parameters As Object())
        parameters:
        - id: format
          type: System.String
        - id: parameters
          type: System.Object[]
      overload: Chroma.Log.Debug*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Log.Info(System.String,System.Object[])
      commentId: M:Chroma.Log.Info(System.String,System.Object[])
      language: CSharp
      name:
        CSharp: Info(String, Object[])
        VB: Info(String, Object())
      nameWithType:
        CSharp: Log.Info(String, Object[])
        VB: Log.Info(String, Object())
      qualifiedName:
        CSharp: Chroma.Log.Info(System.String, System.Object[])
        VB: Chroma.Log.Info(System.String, System.Object())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Info
        path: ''
        startLine: 950
      syntax:
        content:
          CSharp: public static void Info(string format, params object[] parameters)
          VB: Public Shared Sub Info(format As String, ParamArray parameters As Object())
        parameters:
        - id: format
          type: System.String
        - id: parameters
          type: System.Object[]
      overload: Chroma.Log.Info*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Log.Warn(System.String,System.Object[])
      commentId: M:Chroma.Log.Warn(System.String,System.Object[])
      language: CSharp
      name:
        CSharp: Warn(String, Object[])
        VB: Warn(String, Object())
      nameWithType:
        CSharp: Log.Warn(String, Object[])
        VB: Log.Warn(String, Object())
      qualifiedName:
        CSharp: Chroma.Log.Warn(System.String, System.Object[])
        VB: Chroma.Log.Warn(System.String, System.Object())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Warn
        path: ''
        startLine: 951
      syntax:
        content:
          CSharp: public static void Warn(string format, params object[] parameters)
          VB: Public Shared Sub Warn(format As String, ParamArray parameters As Object())
        parameters:
        - id: format
          type: System.String
        - id: parameters
          type: System.Object[]
      overload: Chroma.Log.Warn*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Log.Error(System.String,System.Object[])
      commentId: M:Chroma.Log.Error(System.String,System.Object[])
      language: CSharp
      name:
        CSharp: Error(String, Object[])
        VB: Error(String, Object())
      nameWithType:
        CSharp: Log.Error(String, Object[])
        VB: Log.Error(String, Object())
      qualifiedName:
        CSharp: Chroma.Log.Error(System.String, System.Object[])
        VB: Chroma.Log.Error(System.String, System.Object())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Error
        path: ''
        startLine: 952
      syntax:
        content:
          CSharp: public static void Error(string format, params object[] parameters)
          VB: Public Shared Sub Error(format As String, ParamArray parameters As Object())
        parameters:
        - id: format
          type: System.String
        - id: parameters
          type: System.Object[]
      overload: Chroma.Log.Error*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Log.Critical(System.String,System.Object[])
      commentId: M:Chroma.Log.Critical(System.String,System.Object[])
      language: CSharp
      name:
        CSharp: Critical(String, Object[])
        VB: Critical(String, Object())
      nameWithType:
        CSharp: Log.Critical(String, Object[])
        VB: Log.Critical(String, Object())
      qualifiedName:
        CSharp: Chroma.Log.Critical(System.String, System.Object[])
        VB: Chroma.Log.Critical(System.String, System.Object())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Critical
        path: ''
        startLine: 953
      syntax:
        content:
          CSharp: public static void Critical(string format, params object[] parameters)
          VB: Public Shared Sub Critical(format As String, ParamArray parameters As Object())
        parameters:
        - id: format
          type: System.String
        - id: parameters
          type: System.Object[]
      overload: Chroma.Log.Critical*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Log.Trace(System.Object)
      commentId: M:Chroma.Log.Trace(System.Object)
      language: CSharp
      name:
        CSharp: Trace(Object)
        VB: Trace(Object)
      nameWithType:
        CSharp: Log.Trace(Object)
        VB: Log.Trace(Object)
      qualifiedName:
        CSharp: Chroma.Log.Trace(System.Object)
        VB: Chroma.Log.Trace(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Trace
        path: ''
        startLine: 955
      syntax:
        content:
          CSharp: public static void Trace(object value)
          VB: Public Shared Sub Trace(value As Object)
        parameters:
        - id: value
          type: System.Object
      overload: Chroma.Log.Trace*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Log.WriteLine(System.Object)
      commentId: M:Chroma.Log.WriteLine(System.Object)
      language: CSharp
      name:
        CSharp: WriteLine(Object)
        VB: WriteLine(Object)
      nameWithType:
        CSharp: Log.WriteLine(Object)
        VB: Log.WriteLine(Object)
      qualifiedName:
        CSharp: Chroma.Log.WriteLine(System.Object)
        VB: Chroma.Log.WriteLine(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: WriteLine
        path: ''
        startLine: 956
      syntax:
        content:
          CSharp: public static void WriteLine(object value)
          VB: Public Shared Sub WriteLine(value As Object)
        parameters:
        - id: value
          type: System.Object
      overload: Chroma.Log.WriteLine*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Log.Debug(System.Object)
      commentId: M:Chroma.Log.Debug(System.Object)
      language: CSharp
      name:
        CSharp: Debug(Object)
        VB: Debug(Object)
      nameWithType:
        CSharp: Log.Debug(Object)
        VB: Log.Debug(Object)
      qualifiedName:
        CSharp: Chroma.Log.Debug(System.Object)
        VB: Chroma.Log.Debug(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Debug
        path: ''
        startLine: 957
      syntax:
        content:
          CSharp: public static void Debug(object value)
          VB: Public Shared Sub Debug(value As Object)
        parameters:
        - id: value
          type: System.Object
      overload: Chroma.Log.Debug*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Log.Info(System.Object)
      commentId: M:Chroma.Log.Info(System.Object)
      language: CSharp
      name:
        CSharp: Info(Object)
        VB: Info(Object)
      nameWithType:
        CSharp: Log.Info(Object)
        VB: Log.Info(Object)
      qualifiedName:
        CSharp: Chroma.Log.Info(System.Object)
        VB: Chroma.Log.Info(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Info
        path: ''
        startLine: 958
      syntax:
        content:
          CSharp: public static void Info(object value)
          VB: Public Shared Sub Info(value As Object)
        parameters:
        - id: value
          type: System.Object
      overload: Chroma.Log.Info*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Log.Warn(System.Object)
      commentId: M:Chroma.Log.Warn(System.Object)
      language: CSharp
      name:
        CSharp: Warn(Object)
        VB: Warn(Object)
      nameWithType:
        CSharp: Log.Warn(Object)
        VB: Log.Warn(Object)
      qualifiedName:
        CSharp: Chroma.Log.Warn(System.Object)
        VB: Chroma.Log.Warn(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Warn
        path: ''
        startLine: 959
      syntax:
        content:
          CSharp: public static void Warn(object value)
          VB: Public Shared Sub Warn(value As Object)
        parameters:
        - id: value
          type: System.Object
      overload: Chroma.Log.Warn*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Log.Error(System.Object)
      commentId: M:Chroma.Log.Error(System.Object)
      language: CSharp
      name:
        CSharp: Error(Object)
        VB: Error(Object)
      nameWithType:
        CSharp: Log.Error(Object)
        VB: Log.Error(Object)
      qualifiedName:
        CSharp: Chroma.Log.Error(System.Object)
        VB: Chroma.Log.Error(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Error
        path: ''
        startLine: 960
      syntax:
        content:
          CSharp: public static void Error(object value)
          VB: Public Shared Sub Error(value As Object)
        parameters:
        - id: value
          type: System.Object
      overload: Chroma.Log.Error*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Log.Critical(System.Object)
      commentId: M:Chroma.Log.Critical(System.Object)
      language: CSharp
      name:
        CSharp: Critical(Object)
        VB: Critical(Object)
      nameWithType:
        CSharp: Log.Critical(Object)
        VB: Log.Critical(Object)
      qualifiedName:
        CSharp: Chroma.Log.Critical(System.Object)
        VB: Chroma.Log.Critical(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Critical
        path: ''
        startLine: 961
      syntax:
        content:
          CSharp: public static void Critical(object value)
          VB: Public Shared Sub Critical(value As Object)
        parameters:
        - id: value
          type: System.Object
      overload: Chroma.Log.Critical*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Log.LogMessage_Native(Chroma.Log.LogLevel,System.String)
      commentId: M:Chroma.Log.LogMessage_Native(Chroma.Log.LogLevel,System.String)
      language: CSharp
      name:
        CSharp: LogMessage_Native(Log.LogLevel, String)
        VB: LogMessage_Native(Log.LogLevel, String)
      nameWithType:
        CSharp: Log.LogMessage_Native(Log.LogLevel, String)
        VB: Log.LogMessage_Native(Log.LogLevel, String)
      qualifiedName:
        CSharp: Chroma.Log.LogMessage_Native(Chroma.Log.LogLevel, System.String)
        VB: Chroma.Log.LogMessage_Native(Chroma.Log.LogLevel, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void LogMessage_Native(Log.LogLevel level, string formattedMessage)
          VB: Shared Sub LogMessage_Native(level As Log.LogLevel, formattedMessage As String)
        parameters:
        - id: level
          type: Chroma.Log.LogLevel
        - id: formattedMessage
          type: System.String
      overload: Chroma.Log.LogMessage_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
  - id: Chroma.Log.LogLevel
    commentId: T:Chroma.Log.LogLevel
    language: CSharp
    name:
      CSharp: Log.LogLevel
      VB: Log.LogLevel
    nameWithType:
      CSharp: Log.LogLevel
      VB: Log.LogLevel
    qualifiedName:
      CSharp: Chroma.Log.LogLevel
      VB: Chroma.Log.LogLevel
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: LogLevel
      path: ''
      startLine: 937
    syntax:
      content:
        CSharp: enum LogLevel
        VB: Enum LogLevel
    modifiers:
      CSharp:
      - enum
      VB:
      - Enum
    items:
    - id: Chroma.Log.LogLevel.Trace
      commentId: F:Chroma.Log.LogLevel.Trace
      language: CSharp
      name:
        CSharp: Trace
        VB: Trace
      nameWithType:
        CSharp: Log.LogLevel.Trace
        VB: Log.LogLevel.Trace
      qualifiedName:
        CSharp: Chroma.Log.LogLevel.Trace
        VB: Chroma.Log.LogLevel.Trace
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Trace
        path: ''
        startLine: 939
      syntax:
        content:
          CSharp: Trace = 1
          VB: Trace = 1
        return:
          type: Chroma.Log.LogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Log.LogLevel.Debug
      commentId: F:Chroma.Log.LogLevel.Debug
      language: CSharp
      name:
        CSharp: Debug
        VB: Debug
      nameWithType:
        CSharp: Log.LogLevel.Debug
        VB: Log.LogLevel.Debug
      qualifiedName:
        CSharp: Chroma.Log.LogLevel.Debug
        VB: Chroma.Log.LogLevel.Debug
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Debug
        path: ''
        startLine: 940
      syntax:
        content:
          CSharp: Debug = 2
          VB: Debug = 2
        return:
          type: Chroma.Log.LogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Log.LogLevel.Info
      commentId: F:Chroma.Log.LogLevel.Info
      language: CSharp
      name:
        CSharp: Info
        VB: Info
      nameWithType:
        CSharp: Log.LogLevel.Info
        VB: Log.LogLevel.Info
      qualifiedName:
        CSharp: Chroma.Log.LogLevel.Info
        VB: Chroma.Log.LogLevel.Info
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Info
        path: ''
        startLine: 941
      syntax:
        content:
          CSharp: Info = 4
          VB: Info = 4
        return:
          type: Chroma.Log.LogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Log.LogLevel.Warn
      commentId: F:Chroma.Log.LogLevel.Warn
      language: CSharp
      name:
        CSharp: Warn
        VB: Warn
      nameWithType:
        CSharp: Log.LogLevel.Warn
        VB: Log.LogLevel.Warn
      qualifiedName:
        CSharp: Chroma.Log.LogLevel.Warn
        VB: Chroma.Log.LogLevel.Warn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Warn
        path: ''
        startLine: 942
      syntax:
        content:
          CSharp: Warn = 8
          VB: Warn = 8
        return:
          type: Chroma.Log.LogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Log.LogLevel.Error
      commentId: F:Chroma.Log.LogLevel.Error
      language: CSharp
      name:
        CSharp: Error
        VB: Error
      nameWithType:
        CSharp: Log.LogLevel.Error
        VB: Log.LogLevel.Error
      qualifiedName:
        CSharp: Chroma.Log.LogLevel.Error
        VB: Chroma.Log.LogLevel.Error
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Error
        path: ''
        startLine: 943
      syntax:
        content:
          CSharp: Error = 16
          VB: Error = 16
        return:
          type: Chroma.Log.LogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Log.LogLevel.Critical
      commentId: F:Chroma.Log.LogLevel.Critical
      language: CSharp
      name:
        CSharp: Critical
        VB: Critical
      nameWithType:
        CSharp: Log.LogLevel.Critical
        VB: Log.LogLevel.Critical
      qualifiedName:
        CSharp: Chroma.Log.LogLevel.Critical
        VB: Chroma.Log.LogLevel.Critical
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Critical
        path: ''
        startLine: 944
      syntax:
        content:
          CSharp: Critical = 32
          VB: Critical = 32
        return:
          type: Chroma.Log.LogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Chroma.RuntimeException
    commentId: T:Chroma.RuntimeException
    language: CSharp
    name:
      CSharp: RuntimeException
      VB: RuntimeException
    nameWithType:
      CSharp: RuntimeException
      VB: RuntimeException
    qualifiedName:
      CSharp: Chroma.RuntimeException
      VB: Chroma.RuntimeException
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: RuntimeException
      path: ''
      startLine: 978
    syntax:
      content:
        CSharp: public class RuntimeException
        VB: Public Class RuntimeException
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Chroma.RuntimeException.OnException(System.Object)
      commentId: M:Chroma.RuntimeException.OnException(System.Object)
      language: CSharp
      name:
        CSharp: OnException(Object)
        VB: OnException(Object)
      nameWithType:
        CSharp: RuntimeException.OnException(Object)
        VB: RuntimeException.OnException(Object)
      qualifiedName:
        CSharp: Chroma.RuntimeException.OnException(System.Object)
        VB: Chroma.RuntimeException.OnException(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: OnException
        path: ''
        startLine: 981
      syntax:
        content:
          CSharp: public static void OnException(object exception)
          VB: Public Shared Sub OnException(exception As Object)
        parameters:
        - id: exception
          type: System.Object
      overload: Chroma.RuntimeException.OnException*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Chroma.Scene
    commentId: T:Chroma.Scene
    language: CSharp
    name:
      CSharp: Scene
      VB: Scene
    nameWithType:
      CSharp: Scene
      VB: Scene
    qualifiedName:
      CSharp: Chroma.Scene
      VB: Chroma.Scene
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Scene
      path: ''
      startLine: 1010
    syntax:
      content:
        CSharp: public static class Scene
        VB: Public Module Scene
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items: []
  - id: Chroma.StateMachine`1
    commentId: T:Chroma.StateMachine`1
    language: CSharp
    name:
      CSharp: StateMachine<T>
      VB: StateMachine(Of T)
    nameWithType:
      CSharp: StateMachine<T>
      VB: StateMachine(Of T)
    qualifiedName:
      CSharp: Chroma.StateMachine<T>
      VB: Chroma.StateMachine(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: StateMachine
      path: ''
      startLine: 1033
    syntax:
      content:
        CSharp: >-
          public class StateMachine<T>

              where T : struct, IConvertible
        VB: Public Class StateMachine(Of T As {Structure, IConvertible})
      typeParameters:
      - id: T
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Chroma.StateMachine`1.Current
      commentId: P:Chroma.StateMachine`1.Current
      language: CSharp
      name:
        CSharp: Current
        VB: Current
      nameWithType:
        CSharp: StateMachine<T>.Current
        VB: StateMachine(Of T).Current
      qualifiedName:
        CSharp: Chroma.StateMachine<T>.Current
        VB: Chroma.StateMachine(Of T).Current
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Current
        path: ''
        startLine: 1035
      syntax:
        content:
          CSharp: public T Current { get; }
          VB: Public ReadOnly Property Current As T
        parameters: []
        return:
          type: '{T}'
      overload: Chroma.StateMachine`1.Current*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Chroma.StateMachine`1._update
      commentId: F:Chroma.StateMachine`1._update
      language: CSharp
      name:
        CSharp: _update
        VB: _update
      nameWithType:
        CSharp: StateMachine<T>._update
        VB: StateMachine(Of T)._update
      qualifiedName:
        CSharp: Chroma.StateMachine<T>._update
        VB: Chroma.StateMachine(Of T)._update
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _update
        path: ''
        startLine: 1036
      syntax:
        content:
          CSharp: Dictionary<T, Action> _update
          VB: _update As Dictionary(Of T, Action)
        return:
          type: Dictionary{{T},System.Action}
      modifiers:
        CSharp: []
        VB: []
    - id: Chroma.StateMachine`1._coroutines
      commentId: F:Chroma.StateMachine`1._coroutines
      language: CSharp
      name:
        CSharp: _coroutines
        VB: _coroutines
      nameWithType:
        CSharp: StateMachine<T>._coroutines
        VB: StateMachine(Of T)._coroutines
      qualifiedName:
        CSharp: Chroma.StateMachine<T>._coroutines
        VB: Chroma.StateMachine(Of T)._coroutines
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _coroutines
        path: ''
        startLine: 1037
      syntax:
        content:
          CSharp: Dictionary<T, Coroutine> _coroutines
          VB: _coroutines As Dictionary(Of T, Coroutine)
        return:
          type: Dictionary{{T},Chroma.Coroutine}
      modifiers:
        CSharp: []
        VB: []
    - id: Chroma.StateMachine`1._begin
      commentId: F:Chroma.StateMachine`1._begin
      language: CSharp
      name:
        CSharp: _begin
        VB: _begin
      nameWithType:
        CSharp: StateMachine<T>._begin
        VB: StateMachine(Of T)._begin
      qualifiedName:
        CSharp: Chroma.StateMachine<T>._begin
        VB: Chroma.StateMachine(Of T)._begin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _begin
        path: ''
        startLine: 1038
      syntax:
        content:
          CSharp: Dictionary<T, Action> _begin
          VB: _begin As Dictionary(Of T, Action)
        return:
          type: Dictionary{{T},System.Action}
      modifiers:
        CSharp: []
        VB: []
    - id: Chroma.StateMachine`1._end
      commentId: F:Chroma.StateMachine`1._end
      language: CSharp
      name:
        CSharp: _end
        VB: _end
      nameWithType:
        CSharp: StateMachine<T>._end
        VB: StateMachine(Of T)._end
      qualifiedName:
        CSharp: Chroma.StateMachine<T>._end
        VB: Chroma.StateMachine(Of T)._end
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: _end
        path: ''
        startLine: 1039
      syntax:
        content:
          CSharp: Dictionary<T, Action> _end
          VB: _end As Dictionary(Of T, Action)
        return:
          type: Dictionary{{T},System.Action}
      modifiers:
        CSharp: []
        VB: []
    - id: Chroma.StateMachine`1.#ctor(`0)
      commentId: M:Chroma.StateMachine`1.#ctor(`0)
      language: CSharp
      name:
        CSharp: StateMachine(T)
        VB: StateMachine(T)
      nameWithType:
        CSharp: StateMachine<T>.StateMachine(T)
        VB: StateMachine(Of T).StateMachine(T)
      qualifiedName:
        CSharp: Chroma.StateMachine<T>.StateMachine(T)
        VB: Chroma.StateMachine(Of T).StateMachine(T)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 1041
      syntax:
        content:
          CSharp: public StateMachine(T initial_state)
          VB: Public Sub New(initial_state As T)
        parameters:
        - id: initial_state
          type: '{T}'
      overload: Chroma.StateMachine`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.StateMachine`1.Add(`0,System.Action,Chroma.Coroutine.CoroutineFunction,System.Action,System.Action)
      commentId: M:Chroma.StateMachine`1.Add(`0,System.Action,Chroma.Coroutine.CoroutineFunction,System.Action,System.Action)
      language: CSharp
      name:
        CSharp: Add(T, Action, Coroutine.CoroutineFunction, Action, Action)
        VB: Add(T, Action, Coroutine.CoroutineFunction, Action, Action)
      nameWithType:
        CSharp: StateMachine<T>.Add(T, Action, Coroutine.CoroutineFunction, Action, Action)
        VB: StateMachine(Of T).Add(T, Action, Coroutine.CoroutineFunction, Action, Action)
      qualifiedName:
        CSharp: Chroma.StateMachine<T>.Add(T, System.Action, Chroma.Coroutine.CoroutineFunction, System.Action, System.Action)
        VB: Chroma.StateMachine(Of T).Add(T, System.Action, Chroma.Coroutine.CoroutineFunction, System.Action, System.Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Add
        path: ''
        startLine: 1051
      syntax:
        content:
          CSharp: public void Add(T state, Action update, Coroutine.CoroutineFunction coroutine = null, Action begin = null, Action end = null)
          VB: Public Sub Add(state As T, update As Action, coroutine As Coroutine.CoroutineFunction = Nothing, begin As Action = Nothing, end As Action = Nothing)
        parameters:
        - id: state
          type: '{T}'
        - id: update
          type: System.Action
        - id: coroutine
          type: Chroma.Coroutine.CoroutineFunction
        - id: begin
          type: System.Action
        - id: end
          type: System.Action
      overload: Chroma.StateMachine`1.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.StateMachine`1.Set(`0)
      commentId: M:Chroma.StateMachine`1.Set(`0)
      language: CSharp
      name:
        CSharp: Set(T)
        VB: Set(T)
      nameWithType:
        CSharp: StateMachine<T>.Set(T)
        VB: StateMachine(Of T).Set(T)
      qualifiedName:
        CSharp: Chroma.StateMachine<T>.Set(T)
        VB: Chroma.StateMachine(Of T).Set(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Set
        path: ''
        startLine: 1068
      syntax:
        content:
          CSharp: public void Set(T state)
          VB: Public Sub Set(state As T)
        parameters:
        - id: state
          type: '{T}'
      overload: Chroma.StateMachine`1.Set*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.StateMachine`1.Update
      commentId: M:Chroma.StateMachine`1.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: StateMachine<T>.Update()
        VB: StateMachine(Of T).Update()
      qualifiedName:
        CSharp: Chroma.StateMachine<T>.Update()
        VB: Chroma.StateMachine(Of T).Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Update
        path: ''
        startLine: 1081
      syntax:
        content:
          CSharp: public void Update()
          VB: Public Sub Update
      overload: Chroma.StateMachine`1.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Chroma.Time
    commentId: T:Chroma.Time
    language: CSharp
    name:
      CSharp: Time
      VB: Time
    nameWithType:
      CSharp: Time
      VB: Time
    qualifiedName:
      CSharp: Chroma.Time
      VB: Chroma.Time
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Time
      path: ''
      startLine: 1106
    syntax:
      content:
        CSharp: public static class Time
        VB: Public Module Time
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Chroma.Time.Delta
      commentId: P:Chroma.Time.Delta
      language: CSharp
      name:
        CSharp: Delta
        VB: Delta
      nameWithType:
        CSharp: Time.Delta
        VB: Time.Delta
      qualifiedName:
        CSharp: Chroma.Time.Delta
        VB: Chroma.Time.Delta
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Delta
        path: ''
        startLine: 1108
      syntax:
        content:
          CSharp: public static double Delta { get; }
          VB: Public Shared ReadOnly Property Delta As Double
        parameters: []
        return:
          type: System.Double
      overload: Chroma.Time.Delta*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Chroma.Time.DeltaF
      commentId: P:Chroma.Time.DeltaF
      language: CSharp
      name:
        CSharp: DeltaF
        VB: DeltaF
      nameWithType:
        CSharp: Time.DeltaF
        VB: Time.DeltaF
      qualifiedName:
        CSharp: Chroma.Time.DeltaF
        VB: Chroma.Time.DeltaF
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: DeltaF
        path: ''
        startLine: 1109
      syntax:
        content:
          CSharp: public static float DeltaF { get; }
          VB: Public Shared ReadOnly Property DeltaF As Single
        parameters: []
        return:
          type: System.Single
      overload: Chroma.Time.DeltaF*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Chroma.AudioSource
    commentId: T:Chroma.AudioSource
    language: CSharp
    name:
      CSharp: AudioSource
      VB: AudioSource
    nameWithType:
      CSharp: AudioSource
      VB: AudioSource
    qualifiedName:
      CSharp: Chroma.AudioSource
      VB: Chroma.AudioSource
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: AudioSource
      path: ''
      startLine: 1122
    summary: "\nComponent to attach a spacial audio source to an entity.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AudioSource : Component'
        VB: >-
          Public Class AudioSource

              Inherits Component
    inheritance:
    - System.Object
    - Chroma.Component
    inheritedMembers:
    - Chroma.Component.Entity
    - Chroma.Component.Enabled
    - Chroma.Component.GetEnabled_Native(System.UInt64,System.Type)
    - Chroma.Component.SetEnabled_Native(System.UInt64,System.Type,System.Boolean)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Chroma.AudioSource.#ctor
      commentId: M:Chroma.AudioSource.#ctor
      language: CSharp
      name:
        CSharp: AudioSource()
        VB: AudioSource()
      nameWithType:
        CSharp: AudioSource.AudioSource()
        VB: AudioSource.AudioSource()
      qualifiedName:
        CSharp: Chroma.AudioSource.AudioSource()
        VB: Chroma.AudioSource.AudioSource()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 1124
      syntax:
        content:
          CSharp: public AudioSource()
          VB: Public Sub New
      overload: Chroma.AudioSource.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Chroma.BoxCollider
    commentId: T:Chroma.BoxCollider
    language: CSharp
    name:
      CSharp: BoxCollider
      VB: BoxCollider
    nameWithType:
      CSharp: BoxCollider
      VB: BoxCollider
    qualifiedName:
      CSharp: Chroma.BoxCollider
      VB: Chroma.BoxCollider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: BoxCollider
      path: ''
      startLine: 1136
    summary: "\n2D Box Collider component.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BoxCollider : Component'
        VB: >-
          Public Class BoxCollider

              Inherits Component
    inheritance:
    - System.Object
    - Chroma.Component
    inheritedMembers:
    - Chroma.Component.Entity
    - Chroma.Component.Enabled
    - Chroma.Component.GetEnabled_Native(System.UInt64,System.Type)
    - Chroma.Component.SetEnabled_Native(System.UInt64,System.Type,System.Boolean)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Chroma.BoxCollider.#ctor
      commentId: M:Chroma.BoxCollider.#ctor
      language: CSharp
      name:
        CSharp: BoxCollider()
        VB: BoxCollider()
      nameWithType:
        CSharp: BoxCollider.BoxCollider()
        VB: BoxCollider.BoxCollider()
      qualifiedName:
        CSharp: Chroma.BoxCollider.BoxCollider()
        VB: Chroma.BoxCollider.BoxCollider()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 1138
      syntax:
        content:
          CSharp: public BoxCollider()
          VB: Public Sub New
      overload: Chroma.BoxCollider.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Chroma.Camera
    commentId: T:Chroma.Camera
    language: CSharp
    name:
      CSharp: Camera
      VB: Camera
    nameWithType:
      CSharp: Camera
      VB: Camera
    qualifiedName:
      CSharp: Chroma.Camera
      VB: Chroma.Camera
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Camera
      path: ''
      startLine: 1150
    summary: "\nCamera component\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Camera : Component'
        VB: >-
          Public Class Camera

              Inherits Component
    inheritance:
    - System.Object
    - Chroma.Component
    inheritedMembers:
    - Chroma.Component.Entity
    - Chroma.Component.Enabled
    - Chroma.Component.GetEnabled_Native(System.UInt64,System.Type)
    - Chroma.Component.SetEnabled_Native(System.UInt64,System.Type,System.Boolean)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Chroma.Camera.#ctor
      commentId: M:Chroma.Camera.#ctor
      language: CSharp
      name:
        CSharp: Camera()
        VB: Camera()
      nameWithType:
        CSharp: Camera.Camera()
        VB: Camera.Camera()
      qualifiedName:
        CSharp: Chroma.Camera.Camera()
        VB: Chroma.Camera.Camera()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 1152
      syntax:
        content:
          CSharp: public Camera()
          VB: Public Sub New
      overload: Chroma.Camera.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Chroma.CircleCollider
    commentId: T:Chroma.CircleCollider
    language: CSharp
    name:
      CSharp: CircleCollider
      VB: CircleCollider
    nameWithType:
      CSharp: CircleCollider
      VB: CircleCollider
    qualifiedName:
      CSharp: Chroma.CircleCollider
      VB: Chroma.CircleCollider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: CircleCollider
      path: ''
      startLine: 1164
    summary: "\nCircle collider\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CircleCollider : Component'
        VB: >-
          Public Class CircleCollider

              Inherits Component
    inheritance:
    - System.Object
    - Chroma.Component
    inheritedMembers:
    - Chroma.Component.Entity
    - Chroma.Component.Enabled
    - Chroma.Component.GetEnabled_Native(System.UInt64,System.Type)
    - Chroma.Component.SetEnabled_Native(System.UInt64,System.Type,System.Boolean)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Chroma.CircleCollider.#ctor
      commentId: M:Chroma.CircleCollider.#ctor
      language: CSharp
      name:
        CSharp: CircleCollider()
        VB: CircleCollider()
      nameWithType:
        CSharp: CircleCollider.CircleCollider()
        VB: CircleCollider.CircleCollider()
      qualifiedName:
        CSharp: Chroma.CircleCollider.CircleCollider()
        VB: Chroma.CircleCollider.CircleCollider()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 1166
      syntax:
        content:
          CSharp: public CircleCollider()
          VB: Public Sub New
      overload: Chroma.CircleCollider.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Chroma.ParticleEmitter
    commentId: T:Chroma.ParticleEmitter
    language: CSharp
    name:
      CSharp: ParticleEmitter
      VB: ParticleEmitter
    nameWithType:
      CSharp: ParticleEmitter
      VB: ParticleEmitter
    qualifiedName:
      CSharp: Chroma.ParticleEmitter
      VB: Chroma.ParticleEmitter
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: ParticleEmitter
      path: ''
      startLine: 1176
    summary: "\nParticle Emitter\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ParticleEmitter : Component'
        VB: >-
          Public Class ParticleEmitter

              Inherits Component
    inheritance:
    - System.Object
    - Chroma.Component
    inheritedMembers:
    - Chroma.Component.Entity
    - Chroma.Component.Enabled
    - Chroma.Component.GetEnabled_Native(System.UInt64,System.Type)
    - Chroma.Component.SetEnabled_Native(System.UInt64,System.Type,System.Boolean)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Chroma.ParticleEmitter.#ctor
      commentId: M:Chroma.ParticleEmitter.#ctor
      language: CSharp
      name:
        CSharp: ParticleEmitter()
        VB: ParticleEmitter()
      nameWithType:
        CSharp: ParticleEmitter.ParticleEmitter()
        VB: ParticleEmitter.ParticleEmitter()
      qualifiedName:
        CSharp: Chroma.ParticleEmitter.ParticleEmitter()
        VB: Chroma.ParticleEmitter.ParticleEmitter()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 1178
      syntax:
        content:
          CSharp: ParticleEmitter()
          VB: Sub New
      overload: Chroma.ParticleEmitter.#ctor*
      modifiers:
        CSharp: []
        VB: []
  - id: Chroma.SpriteRenderer
    commentId: T:Chroma.SpriteRenderer
    language: CSharp
    name:
      CSharp: SpriteRenderer
      VB: SpriteRenderer
    nameWithType:
      CSharp: SpriteRenderer
      VB: SpriteRenderer
    qualifiedName:
      CSharp: Chroma.SpriteRenderer
      VB: Chroma.SpriteRenderer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: SpriteRenderer
      path: ''
      startLine: 1193
    summary: "\nSprite Renderer Component. Controls rendering a sprite for an entity.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SpriteRenderer : Component'
        VB: >-
          Public Class SpriteRenderer

              Inherits Component
    inheritance:
    - System.Object
    - Chroma.Component
    inheritedMembers:
    - Chroma.Component.Entity
    - Chroma.Component.Enabled
    - Chroma.Component.GetEnabled_Native(System.UInt64,System.Type)
    - Chroma.Component.SetEnabled_Native(System.UInt64,System.Type,System.Boolean)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Chroma.SpriteRenderer.Color
      commentId: P:Chroma.SpriteRenderer.Color
      language: CSharp
      name:
        CSharp: Color
        VB: Color
      nameWithType:
        CSharp: SpriteRenderer.Color
        VB: SpriteRenderer.Color
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.Color
        VB: Chroma.SpriteRenderer.Color
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Color
        path: ''
        startLine: 1201
      summary: "\nColor of the sprite. Default is white.\n"
      remarks: "\nColor is multiplicatively blended with the texture in the fragment shader.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector4 Color { get; set; }
          VB: Public Property Color As Vector4
        parameters: []
        return:
          type: Chroma.Vector4
      overload: Chroma.SpriteRenderer.Color*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Chroma.SpriteRenderer.Offset
      commentId: P:Chroma.SpriteRenderer.Offset
      language: CSharp
      name:
        CSharp: Offset
        VB: Offset
      nameWithType:
        CSharp: SpriteRenderer.Offset
        VB: SpriteRenderer.Offset
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.Offset
        VB: Chroma.SpriteRenderer.Offset
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Offset
        path: ''
        startLine: 1217
      summary: "\nOffset of the sprite. By default the sprite renders starting at the entity&apos;s transform position. The offset is added to the transform.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 Offset { get; set; }
          VB: Public Property Offset As Vector2
        parameters: []
        return:
          type: Chroma.Vector2
      overload: Chroma.SpriteRenderer.Offset*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Chroma.SpriteRenderer.Layer
      commentId: P:Chroma.SpriteRenderer.Layer
      language: CSharp
      name:
        CSharp: Layer
        VB: Layer
      nameWithType:
        CSharp: SpriteRenderer.Layer
        VB: SpriteRenderer.Layer
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.Layer
        VB: Chroma.SpriteRenderer.Layer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Layer
        path: ''
        startLine: 1233
      summary: "\n[DEPRICATED] Layer of the sprite.\n"
      example: []
      syntax:
        content:
          CSharp: public string Layer { get; set; }
          VB: Public Property Layer As String
        parameters: []
        return:
          type: System.String
      overload: Chroma.SpriteRenderer.Layer*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Chroma.SpriteRenderer.PlayOnStart
      commentId: P:Chroma.SpriteRenderer.PlayOnStart
      language: CSharp
      name:
        CSharp: PlayOnStart
        VB: PlayOnStart
      nameWithType:
        CSharp: SpriteRenderer.PlayOnStart
        VB: SpriteRenderer.PlayOnStart
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.PlayOnStart
        VB: Chroma.SpriteRenderer.PlayOnStart
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: PlayOnStart
        path: ''
        startLine: 1250
      summary: "\nWhether the sprite should begin playing at the start of the scene.\nIf not, setting <code>Playing</code> to true will begin the sprite&apos;s animation.\nOnly applies if the sprite is animated.\n"
      example: []
      syntax:
        content:
          CSharp: public bool PlayOnStart { get; set; }
          VB: Public Property PlayOnStart As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Chroma.SpriteRenderer.PlayOnStart*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Chroma.SpriteRenderer.Playing
      commentId: P:Chroma.SpriteRenderer.Playing
      language: CSharp
      name:
        CSharp: Playing
        VB: Playing
      nameWithType:
        CSharp: SpriteRenderer.Playing
        VB: SpriteRenderer.Playing
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.Playing
        VB: Chroma.SpriteRenderer.Playing
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Playing
        path: ''
        startLine: 1266
      summary: "\nBool representing whether the sprite is playing.\nOnly applies if the sprite is animated.\n"
      example: []
      syntax:
        content:
          CSharp: public bool Playing { get; set; }
          VB: Public Property Playing As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Chroma.SpriteRenderer.Playing*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Chroma.SpriteRenderer.Loop
      commentId: P:Chroma.SpriteRenderer.Loop
      language: CSharp
      name:
        CSharp: Loop
        VB: Loop
      nameWithType:
        CSharp: SpriteRenderer.Loop
        VB: SpriteRenderer.Loop
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.Loop
        VB: Chroma.SpriteRenderer.Loop
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Loop
        path: ''
        startLine: 1283
      summary: "\nWhether the sprite animation should loop.\nIf false, the animation will stop when it hits the last frame.\nOnly applies if the sprite is animated.\n"
      example: []
      syntax:
        content:
          CSharp: public bool Loop { get; set; }
          VB: Public Property Loop As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Chroma.SpriteRenderer.Loop*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Chroma.SpriteRenderer.Speed
      commentId: P:Chroma.SpriteRenderer.Speed
      language: CSharp
      name:
        CSharp: Speed
        VB: Speed
      nameWithType:
        CSharp: SpriteRenderer.Speed
        VB: SpriteRenderer.Speed
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.Speed
        VB: Chroma.SpriteRenderer.Speed
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Speed
        path: ''
        startLine: 1299
      summary: "\nSpeed multiplier of the sprite. Default is 1.0.\nOnly applies if the sprite is animated.\n"
      example: []
      syntax:
        content:
          CSharp: public float Speed { get; set; }
          VB: Public Property Speed As Single
        parameters: []
        return:
          type: System.Single
      overload: Chroma.SpriteRenderer.Speed*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Chroma.SpriteRenderer.SpriteID
      commentId: P:Chroma.SpriteRenderer.SpriteID
      language: CSharp
      name:
        CSharp: SpriteID
        VB: SpriteID
      nameWithType:
        CSharp: SpriteRenderer.SpriteID
        VB: SpriteRenderer.SpriteID
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.SpriteID
        VB: Chroma.SpriteRenderer.SpriteID
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: SpriteID
        path: ''
        startLine: 1314
      summary: "\nSprite to render. Setting this to an ID of a sprite that does not exist will result in a warning.\n"
      example: []
      syntax:
        content:
          CSharp: public string SpriteID { get; set; }
          VB: Public Property SpriteID As String
        parameters: []
        return:
          type: System.String
      overload: Chroma.SpriteRenderer.SpriteID*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Chroma.SpriteRenderer.Animation
      commentId: P:Chroma.SpriteRenderer.Animation
      language: CSharp
      name:
        CSharp: Animation
        VB: Animation
      nameWithType:
        CSharp: SpriteRenderer.Animation
        VB: SpriteRenderer.Animation
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.Animation
        VB: Chroma.SpriteRenderer.Animation
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Animation
        path: ''
        startLine: 1330
      summary: "\nSet sprite animation by index. Index will be bounded by number of animations the sprite contains.\nOnly applies to animated sprites.\n"
      example: []
      syntax:
        content:
          CSharp: public uint Animation { get; set; }
          VB: Public Property Animation As UInteger
        parameters: []
        return:
          type: System.UInt32
      overload: Chroma.SpriteRenderer.Animation*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Chroma.SpriteRenderer.Frame
      commentId: P:Chroma.SpriteRenderer.Frame
      language: CSharp
      name:
        CSharp: Frame
        VB: Frame
      nameWithType:
        CSharp: SpriteRenderer.Frame
        VB: SpriteRenderer.Frame
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.Frame
        VB: Chroma.SpriteRenderer.Frame
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Frame
        path: ''
        startLine: 1346
      summary: "\nThe current frame of the animated sprite. This frame is independent of the selected animation (ie spans frames of all animations).\nOnly applies to animated sprites.\n"
      example: []
      syntax:
        content:
          CSharp: public uint Frame { get; set; }
          VB: Public Property Frame As UInteger
        parameters: []
        return:
          type: System.UInt32
      overload: Chroma.SpriteRenderer.Frame*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Chroma.SpriteRenderer.SetAnimationByTag(System.String)
      commentId: M:Chroma.SpriteRenderer.SetAnimationByTag(System.String)
      language: CSharp
      name:
        CSharp: SetAnimationByTag(String)
        VB: SetAnimationByTag(String)
      nameWithType:
        CSharp: SpriteRenderer.SetAnimationByTag(String)
        VB: SpriteRenderer.SetAnimationByTag(String)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.SetAnimationByTag(System.String)
        VB: Chroma.SpriteRenderer.SetAnimationByTag(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: SetAnimationByTag
        path: ''
        startLine: 1362
      summary: "\nSets the sprite animation by the animation&apos;s tag.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetAnimationByTag(string tag)
          VB: Public Sub SetAnimationByTag(tag As String)
        parameters:
        - id: tag
          type: System.String
          description: Name of the sprite&apos;s animation. This is case sensitive.
      overload: Chroma.SpriteRenderer.SetAnimationByTag*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.SpriteRenderer.GetAnimationTag(System.UInt32)
      commentId: M:Chroma.SpriteRenderer.GetAnimationTag(System.UInt32)
      language: CSharp
      name:
        CSharp: GetAnimationTag(UInt32)
        VB: GetAnimationTag(UInt32)
      nameWithType:
        CSharp: SpriteRenderer.GetAnimationTag(UInt32)
        VB: SpriteRenderer.GetAnimationTag(UInt32)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.GetAnimationTag(System.UInt32)
        VB: Chroma.SpriteRenderer.GetAnimationTag(System.UInt32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetAnimationTag
        path: ''
        startLine: 1372
      summary: "\nGets the name of the animation from the numerical ID.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetAnimationTag(uint animation)
          VB: Public Function GetAnimationTag(animation As UInteger) As String
        parameters:
        - id: animation
          type: System.UInt32
          description: 'Numerical ID of the animation '
        return:
          type: System.String
          description: Name of the animation.
      overload: Chroma.SpriteRenderer.GetAnimationTag*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.SpriteRenderer.GetAnimationTag
      commentId: M:Chroma.SpriteRenderer.GetAnimationTag
      language: CSharp
      name:
        CSharp: GetAnimationTag()
        VB: GetAnimationTag()
      nameWithType:
        CSharp: SpriteRenderer.GetAnimationTag()
        VB: SpriteRenderer.GetAnimationTag()
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.GetAnimationTag()
        VB: Chroma.SpriteRenderer.GetAnimationTag()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetAnimationTag
        path: ''
        startLine: 1381
      summary: "\nGets the current animation&apos;s tag.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetAnimationTag()
          VB: Public Function GetAnimationTag As String
        return:
          type: System.String
          description: Name/Tag of the current animation
      overload: Chroma.SpriteRenderer.GetAnimationTag*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.SpriteRenderer.RestartAnimation
      commentId: M:Chroma.SpriteRenderer.RestartAnimation
      language: CSharp
      name:
        CSharp: RestartAnimation()
        VB: RestartAnimation()
      nameWithType:
        CSharp: SpriteRenderer.RestartAnimation()
        VB: SpriteRenderer.RestartAnimation()
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.RestartAnimation()
        VB: Chroma.SpriteRenderer.RestartAnimation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RestartAnimation
        path: ''
        startLine: 1389
      summary: "\nRestarts the current animation.\n"
      example: []
      syntax:
        content:
          CSharp: public void RestartAnimation()
          VB: Public Sub RestartAnimation
      overload: Chroma.SpriteRenderer.RestartAnimation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.SpriteRenderer.GetColor_Native(System.UInt64,Chroma.Vector4@)
      commentId: M:Chroma.SpriteRenderer.GetColor_Native(System.UInt64,Chroma.Vector4@)
      language: CSharp
      name:
        CSharp: GetColor_Native(UInt64, out Vector4)
        VB: GetColor_Native(UInt64, ByRef Vector4)
      nameWithType:
        CSharp: SpriteRenderer.GetColor_Native(UInt64, out Vector4)
        VB: SpriteRenderer.GetColor_Native(UInt64, ByRef Vector4)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.GetColor_Native(System.UInt64, out Chroma.Vector4)
        VB: Chroma.SpriteRenderer.GetColor_Native(System.UInt64, ByRef Chroma.Vector4)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void GetColor_Native(ulong id, out Vector4 vec)
          VB: Shared Sub GetColor_Native(id As ULong, ByRef vec As Vector4)
        parameters:
        - id: id
          type: System.UInt64
        - id: vec
          type: Chroma.Vector4
      overload: Chroma.SpriteRenderer.GetColor_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.SetColor_Native(System.UInt64,Chroma.Vector4@)
      commentId: M:Chroma.SpriteRenderer.SetColor_Native(System.UInt64,Chroma.Vector4@)
      language: CSharp
      name:
        CSharp: SetColor_Native(UInt64, ref Vector4)
        VB: SetColor_Native(UInt64, ByRef Vector4)
      nameWithType:
        CSharp: SpriteRenderer.SetColor_Native(UInt64, ref Vector4)
        VB: SpriteRenderer.SetColor_Native(UInt64, ByRef Vector4)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.SetColor_Native(System.UInt64, ref Chroma.Vector4)
        VB: Chroma.SpriteRenderer.SetColor_Native(System.UInt64, ByRef Chroma.Vector4)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void SetColor_Native(ulong id, ref Vector4 vec)
          VB: Shared Sub SetColor_Native(id As ULong, ByRef vec As Vector4)
        parameters:
        - id: id
          type: System.UInt64
        - id: vec
          type: Chroma.Vector4
      overload: Chroma.SpriteRenderer.SetColor_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.GetOffset_Native(System.UInt64,Chroma.Vector2@)
      commentId: M:Chroma.SpriteRenderer.GetOffset_Native(System.UInt64,Chroma.Vector2@)
      language: CSharp
      name:
        CSharp: GetOffset_Native(UInt64, out Vector2)
        VB: GetOffset_Native(UInt64, ByRef Vector2)
      nameWithType:
        CSharp: SpriteRenderer.GetOffset_Native(UInt64, out Vector2)
        VB: SpriteRenderer.GetOffset_Native(UInt64, ByRef Vector2)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.GetOffset_Native(System.UInt64, out Chroma.Vector2)
        VB: Chroma.SpriteRenderer.GetOffset_Native(System.UInt64, ByRef Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void GetOffset_Native(ulong id, out Vector2 vec)
          VB: Shared Sub GetOffset_Native(id As ULong, ByRef vec As Vector2)
        parameters:
        - id: id
          type: System.UInt64
        - id: vec
          type: Chroma.Vector2
      overload: Chroma.SpriteRenderer.GetOffset_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.SetOffset_Native(System.UInt64,Chroma.Vector2@)
      commentId: M:Chroma.SpriteRenderer.SetOffset_Native(System.UInt64,Chroma.Vector2@)
      language: CSharp
      name:
        CSharp: SetOffset_Native(UInt64, ref Vector2)
        VB: SetOffset_Native(UInt64, ByRef Vector2)
      nameWithType:
        CSharp: SpriteRenderer.SetOffset_Native(UInt64, ref Vector2)
        VB: SpriteRenderer.SetOffset_Native(UInt64, ByRef Vector2)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.SetOffset_Native(System.UInt64, ref Chroma.Vector2)
        VB: Chroma.SpriteRenderer.SetOffset_Native(System.UInt64, ByRef Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void SetOffset_Native(ulong id, ref Vector2 vec)
          VB: Shared Sub SetOffset_Native(id As ULong, ByRef vec As Vector2)
        parameters:
        - id: id
          type: System.UInt64
        - id: vec
          type: Chroma.Vector2
      overload: Chroma.SpriteRenderer.SetOffset_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.GetLayer_Native(System.UInt64)
      commentId: M:Chroma.SpriteRenderer.GetLayer_Native(System.UInt64)
      language: CSharp
      name:
        CSharp: GetLayer_Native(UInt64)
        VB: GetLayer_Native(UInt64)
      nameWithType:
        CSharp: SpriteRenderer.GetLayer_Native(UInt64)
        VB: SpriteRenderer.GetLayer_Native(UInt64)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.GetLayer_Native(System.UInt64)
        VB: Chroma.SpriteRenderer.GetLayer_Native(System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern string GetLayer_Native(ulong id)
          VB: Shared Function GetLayer_Native(id As ULong) As String
        parameters:
        - id: id
          type: System.UInt64
        return:
          type: System.String
      overload: Chroma.SpriteRenderer.GetLayer_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.SetLayer_Native(System.UInt64,System.String)
      commentId: M:Chroma.SpriteRenderer.SetLayer_Native(System.UInt64,System.String)
      language: CSharp
      name:
        CSharp: SetLayer_Native(UInt64, String)
        VB: SetLayer_Native(UInt64, String)
      nameWithType:
        CSharp: SpriteRenderer.SetLayer_Native(UInt64, String)
        VB: SpriteRenderer.SetLayer_Native(UInt64, String)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.SetLayer_Native(System.UInt64, System.String)
        VB: Chroma.SpriteRenderer.SetLayer_Native(System.UInt64, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void SetLayer_Native(ulong id, string val)
          VB: Shared Sub SetLayer_Native(id As ULong, val As String)
        parameters:
        - id: id
          type: System.UInt64
        - id: val
          type: System.String
      overload: Chroma.SpriteRenderer.SetLayer_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.GetPlayOnStart_Native(System.UInt64)
      commentId: M:Chroma.SpriteRenderer.GetPlayOnStart_Native(System.UInt64)
      language: CSharp
      name:
        CSharp: GetPlayOnStart_Native(UInt64)
        VB: GetPlayOnStart_Native(UInt64)
      nameWithType:
        CSharp: SpriteRenderer.GetPlayOnStart_Native(UInt64)
        VB: SpriteRenderer.GetPlayOnStart_Native(UInt64)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.GetPlayOnStart_Native(System.UInt64)
        VB: Chroma.SpriteRenderer.GetPlayOnStart_Native(System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern bool GetPlayOnStart_Native(ulong id)
          VB: Shared Function GetPlayOnStart_Native(id As ULong) As Boolean
        parameters:
        - id: id
          type: System.UInt64
        return:
          type: System.Boolean
      overload: Chroma.SpriteRenderer.GetPlayOnStart_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.SetPlayOnStart_Native(System.UInt64,System.Boolean)
      commentId: M:Chroma.SpriteRenderer.SetPlayOnStart_Native(System.UInt64,System.Boolean)
      language: CSharp
      name:
        CSharp: SetPlayOnStart_Native(UInt64, Boolean)
        VB: SetPlayOnStart_Native(UInt64, Boolean)
      nameWithType:
        CSharp: SpriteRenderer.SetPlayOnStart_Native(UInt64, Boolean)
        VB: SpriteRenderer.SetPlayOnStart_Native(UInt64, Boolean)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.SetPlayOnStart_Native(System.UInt64, System.Boolean)
        VB: Chroma.SpriteRenderer.SetPlayOnStart_Native(System.UInt64, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void SetPlayOnStart_Native(ulong id, bool val)
          VB: Shared Sub SetPlayOnStart_Native(id As ULong, val As Boolean)
        parameters:
        - id: id
          type: System.UInt64
        - id: val
          type: System.Boolean
      overload: Chroma.SpriteRenderer.SetPlayOnStart_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.GetPlaying_Native(System.UInt64)
      commentId: M:Chroma.SpriteRenderer.GetPlaying_Native(System.UInt64)
      language: CSharp
      name:
        CSharp: GetPlaying_Native(UInt64)
        VB: GetPlaying_Native(UInt64)
      nameWithType:
        CSharp: SpriteRenderer.GetPlaying_Native(UInt64)
        VB: SpriteRenderer.GetPlaying_Native(UInt64)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.GetPlaying_Native(System.UInt64)
        VB: Chroma.SpriteRenderer.GetPlaying_Native(System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern bool GetPlaying_Native(ulong id)
          VB: Shared Function GetPlaying_Native(id As ULong) As Boolean
        parameters:
        - id: id
          type: System.UInt64
        return:
          type: System.Boolean
      overload: Chroma.SpriteRenderer.GetPlaying_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.SetPlaying_Native(System.UInt64,System.Boolean)
      commentId: M:Chroma.SpriteRenderer.SetPlaying_Native(System.UInt64,System.Boolean)
      language: CSharp
      name:
        CSharp: SetPlaying_Native(UInt64, Boolean)
        VB: SetPlaying_Native(UInt64, Boolean)
      nameWithType:
        CSharp: SpriteRenderer.SetPlaying_Native(UInt64, Boolean)
        VB: SpriteRenderer.SetPlaying_Native(UInt64, Boolean)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.SetPlaying_Native(System.UInt64, System.Boolean)
        VB: Chroma.SpriteRenderer.SetPlaying_Native(System.UInt64, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void SetPlaying_Native(ulong id, bool val)
          VB: Shared Sub SetPlaying_Native(id As ULong, val As Boolean)
        parameters:
        - id: id
          type: System.UInt64
        - id: val
          type: System.Boolean
      overload: Chroma.SpriteRenderer.SetPlaying_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.GetLoop_Native(System.UInt64)
      commentId: M:Chroma.SpriteRenderer.GetLoop_Native(System.UInt64)
      language: CSharp
      name:
        CSharp: GetLoop_Native(UInt64)
        VB: GetLoop_Native(UInt64)
      nameWithType:
        CSharp: SpriteRenderer.GetLoop_Native(UInt64)
        VB: SpriteRenderer.GetLoop_Native(UInt64)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.GetLoop_Native(System.UInt64)
        VB: Chroma.SpriteRenderer.GetLoop_Native(System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern bool GetLoop_Native(ulong id)
          VB: Shared Function GetLoop_Native(id As ULong) As Boolean
        parameters:
        - id: id
          type: System.UInt64
        return:
          type: System.Boolean
      overload: Chroma.SpriteRenderer.GetLoop_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.SetLoop_Native(System.UInt64,System.Boolean)
      commentId: M:Chroma.SpriteRenderer.SetLoop_Native(System.UInt64,System.Boolean)
      language: CSharp
      name:
        CSharp: SetLoop_Native(UInt64, Boolean)
        VB: SetLoop_Native(UInt64, Boolean)
      nameWithType:
        CSharp: SpriteRenderer.SetLoop_Native(UInt64, Boolean)
        VB: SpriteRenderer.SetLoop_Native(UInt64, Boolean)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.SetLoop_Native(System.UInt64, System.Boolean)
        VB: Chroma.SpriteRenderer.SetLoop_Native(System.UInt64, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void SetLoop_Native(ulong id, bool val)
          VB: Shared Sub SetLoop_Native(id As ULong, val As Boolean)
        parameters:
        - id: id
          type: System.UInt64
        - id: val
          type: System.Boolean
      overload: Chroma.SpriteRenderer.SetLoop_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.GetSpeedMultiplier_Native(System.UInt64)
      commentId: M:Chroma.SpriteRenderer.GetSpeedMultiplier_Native(System.UInt64)
      language: CSharp
      name:
        CSharp: GetSpeedMultiplier_Native(UInt64)
        VB: GetSpeedMultiplier_Native(UInt64)
      nameWithType:
        CSharp: SpriteRenderer.GetSpeedMultiplier_Native(UInt64)
        VB: SpriteRenderer.GetSpeedMultiplier_Native(UInt64)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.GetSpeedMultiplier_Native(System.UInt64)
        VB: Chroma.SpriteRenderer.GetSpeedMultiplier_Native(System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern float GetSpeedMultiplier_Native(ulong id)
          VB: Shared Function GetSpeedMultiplier_Native(id As ULong) As Single
        parameters:
        - id: id
          type: System.UInt64
        return:
          type: System.Single
      overload: Chroma.SpriteRenderer.GetSpeedMultiplier_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.SetSpeedMultiplier_Native(System.UInt64,System.Single)
      commentId: M:Chroma.SpriteRenderer.SetSpeedMultiplier_Native(System.UInt64,System.Single)
      language: CSharp
      name:
        CSharp: SetSpeedMultiplier_Native(UInt64, Single)
        VB: SetSpeedMultiplier_Native(UInt64, Single)
      nameWithType:
        CSharp: SpriteRenderer.SetSpeedMultiplier_Native(UInt64, Single)
        VB: SpriteRenderer.SetSpeedMultiplier_Native(UInt64, Single)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.SetSpeedMultiplier_Native(System.UInt64, System.Single)
        VB: Chroma.SpriteRenderer.SetSpeedMultiplier_Native(System.UInt64, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void SetSpeedMultiplier_Native(ulong id, float val)
          VB: Shared Sub SetSpeedMultiplier_Native(id As ULong, val As Single)
        parameters:
        - id: id
          type: System.UInt64
        - id: val
          type: System.Single
      overload: Chroma.SpriteRenderer.SetSpeedMultiplier_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.GetSprite_Native(System.UInt64)
      commentId: M:Chroma.SpriteRenderer.GetSprite_Native(System.UInt64)
      language: CSharp
      name:
        CSharp: GetSprite_Native(UInt64)
        VB: GetSprite_Native(UInt64)
      nameWithType:
        CSharp: SpriteRenderer.GetSprite_Native(UInt64)
        VB: SpriteRenderer.GetSprite_Native(UInt64)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.GetSprite_Native(System.UInt64)
        VB: Chroma.SpriteRenderer.GetSprite_Native(System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern string GetSprite_Native(ulong id)
          VB: Shared Function GetSprite_Native(id As ULong) As String
        parameters:
        - id: id
          type: System.UInt64
        return:
          type: System.String
      overload: Chroma.SpriteRenderer.GetSprite_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.SetSprite_Native(System.UInt64,System.String)
      commentId: M:Chroma.SpriteRenderer.SetSprite_Native(System.UInt64,System.String)
      language: CSharp
      name:
        CSharp: SetSprite_Native(UInt64, String)
        VB: SetSprite_Native(UInt64, String)
      nameWithType:
        CSharp: SpriteRenderer.SetSprite_Native(UInt64, String)
        VB: SpriteRenderer.SetSprite_Native(UInt64, String)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.SetSprite_Native(System.UInt64, System.String)
        VB: Chroma.SpriteRenderer.SetSprite_Native(System.UInt64, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void SetSprite_Native(ulong id, string val)
          VB: Shared Sub SetSprite_Native(id As ULong, val As String)
        parameters:
        - id: id
          type: System.UInt64
        - id: val
          type: System.String
      overload: Chroma.SpriteRenderer.SetSprite_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.GetAnimation_Native(System.UInt64)
      commentId: M:Chroma.SpriteRenderer.GetAnimation_Native(System.UInt64)
      language: CSharp
      name:
        CSharp: GetAnimation_Native(UInt64)
        VB: GetAnimation_Native(UInt64)
      nameWithType:
        CSharp: SpriteRenderer.GetAnimation_Native(UInt64)
        VB: SpriteRenderer.GetAnimation_Native(UInt64)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.GetAnimation_Native(System.UInt64)
        VB: Chroma.SpriteRenderer.GetAnimation_Native(System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern uint GetAnimation_Native(ulong id)
          VB: Shared Function GetAnimation_Native(id As ULong) As UInteger
        parameters:
        - id: id
          type: System.UInt64
        return:
          type: System.UInt32
      overload: Chroma.SpriteRenderer.GetAnimation_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.SetAnimation_Native(System.UInt64,System.UInt32)
      commentId: M:Chroma.SpriteRenderer.SetAnimation_Native(System.UInt64,System.UInt32)
      language: CSharp
      name:
        CSharp: SetAnimation_Native(UInt64, UInt32)
        VB: SetAnimation_Native(UInt64, UInt32)
      nameWithType:
        CSharp: SpriteRenderer.SetAnimation_Native(UInt64, UInt32)
        VB: SpriteRenderer.SetAnimation_Native(UInt64, UInt32)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.SetAnimation_Native(System.UInt64, System.UInt32)
        VB: Chroma.SpriteRenderer.SetAnimation_Native(System.UInt64, System.UInt32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void SetAnimation_Native(ulong id, uint val)
          VB: Shared Sub SetAnimation_Native(id As ULong, val As UInteger)
        parameters:
        - id: id
          type: System.UInt64
        - id: val
          type: System.UInt32
      overload: Chroma.SpriteRenderer.SetAnimation_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.GetFrame_Native(System.UInt64)
      commentId: M:Chroma.SpriteRenderer.GetFrame_Native(System.UInt64)
      language: CSharp
      name:
        CSharp: GetFrame_Native(UInt64)
        VB: GetFrame_Native(UInt64)
      nameWithType:
        CSharp: SpriteRenderer.GetFrame_Native(UInt64)
        VB: SpriteRenderer.GetFrame_Native(UInt64)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.GetFrame_Native(System.UInt64)
        VB: Chroma.SpriteRenderer.GetFrame_Native(System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern uint GetFrame_Native(ulong id)
          VB: Shared Function GetFrame_Native(id As ULong) As UInteger
        parameters:
        - id: id
          type: System.UInt64
        return:
          type: System.UInt32
      overload: Chroma.SpriteRenderer.GetFrame_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.SetFrame_Native(System.UInt64,System.UInt32)
      commentId: M:Chroma.SpriteRenderer.SetFrame_Native(System.UInt64,System.UInt32)
      language: CSharp
      name:
        CSharp: SetFrame_Native(UInt64, UInt32)
        VB: SetFrame_Native(UInt64, UInt32)
      nameWithType:
        CSharp: SpriteRenderer.SetFrame_Native(UInt64, UInt32)
        VB: SpriteRenderer.SetFrame_Native(UInt64, UInt32)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.SetFrame_Native(System.UInt64, System.UInt32)
        VB: Chroma.SpriteRenderer.SetFrame_Native(System.UInt64, System.UInt32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void SetFrame_Native(ulong id, uint val)
          VB: Shared Sub SetFrame_Native(id As ULong, val As UInteger)
        parameters:
        - id: id
          type: System.UInt64
        - id: val
          type: System.UInt32
      overload: Chroma.SpriteRenderer.SetFrame_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.GetAnimationTag_Native(System.UInt64,System.UInt32)
      commentId: M:Chroma.SpriteRenderer.GetAnimationTag_Native(System.UInt64,System.UInt32)
      language: CSharp
      name:
        CSharp: GetAnimationTag_Native(UInt64, UInt32)
        VB: GetAnimationTag_Native(UInt64, UInt32)
      nameWithType:
        CSharp: SpriteRenderer.GetAnimationTag_Native(UInt64, UInt32)
        VB: SpriteRenderer.GetAnimationTag_Native(UInt64, UInt32)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.GetAnimationTag_Native(System.UInt64, System.UInt32)
        VB: Chroma.SpriteRenderer.GetAnimationTag_Native(System.UInt64, System.UInt32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern string GetAnimationTag_Native(ulong id, uint val)
          VB: Shared Function GetAnimationTag_Native(id As ULong, val As UInteger) As String
        parameters:
        - id: id
          type: System.UInt64
        - id: val
          type: System.UInt32
        return:
          type: System.String
      overload: Chroma.SpriteRenderer.GetAnimationTag_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.SetAnimationByTag_Native(System.UInt64,System.String)
      commentId: M:Chroma.SpriteRenderer.SetAnimationByTag_Native(System.UInt64,System.String)
      language: CSharp
      name:
        CSharp: SetAnimationByTag_Native(UInt64, String)
        VB: SetAnimationByTag_Native(UInt64, String)
      nameWithType:
        CSharp: SpriteRenderer.SetAnimationByTag_Native(UInt64, String)
        VB: SpriteRenderer.SetAnimationByTag_Native(UInt64, String)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.SetAnimationByTag_Native(System.UInt64, System.String)
        VB: Chroma.SpriteRenderer.SetAnimationByTag_Native(System.UInt64, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void SetAnimationByTag_Native(ulong id, string val)
          VB: Shared Sub SetAnimationByTag_Native(id As ULong, val As String)
        parameters:
        - id: id
          type: System.UInt64
        - id: val
          type: System.String
      overload: Chroma.SpriteRenderer.SetAnimationByTag_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.SpriteRenderer.RestartAnimation_Native(System.UInt64)
      commentId: M:Chroma.SpriteRenderer.RestartAnimation_Native(System.UInt64)
      language: CSharp
      name:
        CSharp: RestartAnimation_Native(UInt64)
        VB: RestartAnimation_Native(UInt64)
      nameWithType:
        CSharp: SpriteRenderer.RestartAnimation_Native(UInt64)
        VB: SpriteRenderer.RestartAnimation_Native(UInt64)
      qualifiedName:
        CSharp: Chroma.SpriteRenderer.RestartAnimation_Native(System.UInt64)
        VB: Chroma.SpriteRenderer.RestartAnimation_Native(System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void RestartAnimation_Native(ulong id)
          VB: Shared Sub RestartAnimation_Native(id As ULong)
        parameters:
        - id: id
          type: System.UInt64
      overload: Chroma.SpriteRenderer.RestartAnimation_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
  - id: Chroma.Tag
    commentId: T:Chroma.Tag
    language: CSharp
    name:
      CSharp: Tag
      VB: Tag
    nameWithType:
      CSharp: Tag
      VB: Tag
    qualifiedName:
      CSharp: Chroma.Tag
      VB: Chroma.Tag
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Tag
      path: ''
      startLine: 1477
    summary: "\n[DEPRICATED] Tag component for the entity.\n"
    example: []
    syntax:
      content:
        CSharp: 'class Tag : Component'
        VB: >-
          Class Tag

              Inherits Component
    inheritance:
    - System.Object
    - Chroma.Component
    inheritedMembers:
    - Chroma.Component.Entity
    - Chroma.Component.Enabled
    - Chroma.Component.GetEnabled_Native(System.UInt64,System.Type)
    - Chroma.Component.SetEnabled_Native(System.UInt64,System.Type,System.Boolean)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - class
      VB:
      - Class
    items:
    - id: Chroma.Tag.Name
      commentId: P:Chroma.Tag.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: Tag.Name
        VB: Tag.Name
      qualifiedName:
        CSharp: Chroma.Tag.Name
        VB: Chroma.Tag.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Name
        path: ''
        startLine: 1482
      summary: "\nEntity&apos;s name\n"
      example: []
      syntax:
        content:
          CSharp: string Name { }
          VB: ReadOnly WriteOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Chroma.Tag.Name*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Chroma.Tag.GetTag_Native(System.UInt64)
      commentId: M:Chroma.Tag.GetTag_Native(System.UInt64)
      language: CSharp
      name:
        CSharp: GetTag_Native(UInt64)
        VB: GetTag_Native(UInt64)
      nameWithType:
        CSharp: Tag.GetTag_Native(UInt64)
        VB: Tag.GetTag_Native(UInt64)
      qualifiedName:
        CSharp: Chroma.Tag.GetTag_Native(System.UInt64)
        VB: Chroma.Tag.GetTag_Native(System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern string GetTag_Native(ulong id)
          VB: Shared Function GetTag_Native(id As ULong) As String
        parameters:
        - id: id
          type: System.UInt64
        return:
          type: System.String
      overload: Chroma.Tag.GetTag_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Tag.SetTag_Native(System.UInt64,System.String)
      commentId: M:Chroma.Tag.SetTag_Native(System.UInt64,System.String)
      language: CSharp
      name:
        CSharp: SetTag_Native(UInt64, String)
        VB: SetTag_Native(UInt64, String)
      nameWithType:
        CSharp: Tag.SetTag_Native(UInt64, String)
        VB: Tag.SetTag_Native(UInt64, String)
      qualifiedName:
        CSharp: Chroma.Tag.SetTag_Native(System.UInt64, System.String)
        VB: Chroma.Tag.SetTag_Native(System.UInt64, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern string SetTag_Native(ulong id, string tag)
          VB: Shared Function SetTag_Native(id As ULong, tag As String) As String
        parameters:
        - id: id
          type: System.UInt64
        - id: tag
          type: System.String
        return:
          type: System.String
      overload: Chroma.Tag.SetTag_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
  - id: Chroma.Transform
    commentId: T:Chroma.Transform
    language: CSharp
    name:
      CSharp: Transform
      VB: Transform
    nameWithType:
      CSharp: Transform
      VB: Transform
    qualifiedName:
      CSharp: Chroma.Transform
      VB: Chroma.Transform
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Transform
      path: ''
      startLine: 1511
    summary: "\nTransform component for the entity. The engine enforces the existance of this component for all entities.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Transform : Component'
        VB: >-
          Public Class Transform

              Inherits Component
    inheritance:
    - System.Object
    - Chroma.Component
    inheritedMembers:
    - Chroma.Component.Entity
    - Chroma.Component.Enabled
    - Chroma.Component.GetEnabled_Native(System.UInt64,System.Type)
    - Chroma.Component.SetEnabled_Native(System.UInt64,System.Type,System.Boolean)
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Chroma.Transform.Position
      commentId: P:Chroma.Transform.Position
      language: CSharp
      name:
        CSharp: Position
        VB: Position
      nameWithType:
        CSharp: Transform.Position
        VB: Transform.Position
      qualifiedName:
        CSharp: Chroma.Transform.Position
        VB: Chroma.Transform.Position
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Position
        path: ''
        startLine: 1516
      summary: "\nPositional component for the transform. Represents the position of the entity in the scene.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 Position { get; set; }
          VB: Public Property Position As Vector2
        parameters: []
        return:
          type: Chroma.Vector2
      overload: Chroma.Transform.Position*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Chroma.Transform.Rotation
      commentId: P:Chroma.Transform.Rotation
      language: CSharp
      name:
        CSharp: Rotation
        VB: Rotation
      nameWithType:
        CSharp: Transform.Rotation
        VB: Transform.Rotation
      qualifiedName:
        CSharp: Chroma.Transform.Rotation
        VB: Chroma.Transform.Rotation
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Rotation
        path: ''
        startLine: 1534
      summary: "\nRotational component for the transform. Represents the euler angle in degrees of the entity.\nRotation is internally stored in radians and is converted in this geter/setter.\nUse <code>RadRotation</code> for accessing the rotation in radians.\n"
      example: []
      syntax:
        content:
          CSharp: public float Rotation { get; set; }
          VB: Public Property Rotation As Single
        parameters: []
        return:
          type: System.Single
      overload: Chroma.Transform.Rotation*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Chroma.Transform.RadRotation
      commentId: P:Chroma.Transform.RadRotation
      language: CSharp
      name:
        CSharp: RadRotation
        VB: RadRotation
      nameWithType:
        CSharp: Transform.RadRotation
        VB: Transform.RadRotation
      qualifiedName:
        CSharp: Chroma.Transform.RadRotation
        VB: Chroma.Transform.RadRotation
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RadRotation
        path: ''
        startLine: 1550
      summary: "\nRotational component for the transform in radians.\nUse <code>Rotation</code> for accessing rotation in degrees.\n"
      example: []
      syntax:
        content:
          CSharp: public float RadRotation { get; set; }
          VB: Public Property RadRotation As Single
        parameters: []
        return:
          type: System.Single
      overload: Chroma.Transform.RadRotation*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Chroma.Transform.Scale
      commentId: P:Chroma.Transform.Scale
      language: CSharp
      name:
        CSharp: Scale
        VB: Scale
      nameWithType:
        CSharp: Transform.Scale
        VB: Transform.Scale
      qualifiedName:
        CSharp: Chroma.Transform.Scale
        VB: Chroma.Transform.Scale
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Scale
        path: ''
        startLine: 1565
      summary: "\nScale component of the transform.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 Scale { get; set; }
          VB: Public Property Scale As Vector2
        parameters: []
        return:
          type: Chroma.Vector2
      overload: Chroma.Transform.Scale*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Chroma.Transform.ToString
      commentId: M:Chroma.Transform.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: Transform.ToString()
        VB: Transform.ToString()
      qualifiedName:
        CSharp: Chroma.Transform.ToString()
        VB: Chroma.Transform.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: ToString
        path: ''
        startLine: 1582
      summary: "\nGets the transform component as a string.\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: Formatted string containing transform data.
      overload: Chroma.Transform.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Chroma.Transform.GetTransformPosition_Native(System.UInt64,Chroma.Vector2@)
      commentId: M:Chroma.Transform.GetTransformPosition_Native(System.UInt64,Chroma.Vector2@)
      language: CSharp
      name:
        CSharp: GetTransformPosition_Native(UInt64, out Vector2)
        VB: GetTransformPosition_Native(UInt64, ByRef Vector2)
      nameWithType:
        CSharp: Transform.GetTransformPosition_Native(UInt64, out Vector2)
        VB: Transform.GetTransformPosition_Native(UInt64, ByRef Vector2)
      qualifiedName:
        CSharp: Chroma.Transform.GetTransformPosition_Native(System.UInt64, out Chroma.Vector2)
        VB: Chroma.Transform.GetTransformPosition_Native(System.UInt64, ByRef Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void GetTransformPosition_Native(ulong id, out Vector2 result)
          VB: Shared Sub GetTransformPosition_Native(id As ULong, ByRef result As Vector2)
        parameters:
        - id: id
          type: System.UInt64
        - id: result
          type: Chroma.Vector2
      overload: Chroma.Transform.GetTransformPosition_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Transform.GetTransformRotation_Native(System.UInt64)
      commentId: M:Chroma.Transform.GetTransformRotation_Native(System.UInt64)
      language: CSharp
      name:
        CSharp: GetTransformRotation_Native(UInt64)
        VB: GetTransformRotation_Native(UInt64)
      nameWithType:
        CSharp: Transform.GetTransformRotation_Native(UInt64)
        VB: Transform.GetTransformRotation_Native(UInt64)
      qualifiedName:
        CSharp: Chroma.Transform.GetTransformRotation_Native(System.UInt64)
        VB: Chroma.Transform.GetTransformRotation_Native(System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern float GetTransformRotation_Native(ulong id)
          VB: Shared Function GetTransformRotation_Native(id As ULong) As Single
        parameters:
        - id: id
          type: System.UInt64
        return:
          type: System.Single
      overload: Chroma.Transform.GetTransformRotation_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Transform.GetTransformScale_Native(System.UInt64,Chroma.Vector2@)
      commentId: M:Chroma.Transform.GetTransformScale_Native(System.UInt64,Chroma.Vector2@)
      language: CSharp
      name:
        CSharp: GetTransformScale_Native(UInt64, out Vector2)
        VB: GetTransformScale_Native(UInt64, ByRef Vector2)
      nameWithType:
        CSharp: Transform.GetTransformScale_Native(UInt64, out Vector2)
        VB: Transform.GetTransformScale_Native(UInt64, ByRef Vector2)
      qualifiedName:
        CSharp: Chroma.Transform.GetTransformScale_Native(System.UInt64, out Chroma.Vector2)
        VB: Chroma.Transform.GetTransformScale_Native(System.UInt64, ByRef Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void GetTransformScale_Native(ulong id, out Vector2 result)
          VB: Shared Sub GetTransformScale_Native(id As ULong, ByRef result As Vector2)
        parameters:
        - id: id
          type: System.UInt64
        - id: result
          type: Chroma.Vector2
      overload: Chroma.Transform.GetTransformScale_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Transform.SetTransformPosition_Native(System.UInt64,Chroma.Vector2@)
      commentId: M:Chroma.Transform.SetTransformPosition_Native(System.UInt64,Chroma.Vector2@)
      language: CSharp
      name:
        CSharp: SetTransformPosition_Native(UInt64, ref Vector2)
        VB: SetTransformPosition_Native(UInt64, ByRef Vector2)
      nameWithType:
        CSharp: Transform.SetTransformPosition_Native(UInt64, ref Vector2)
        VB: Transform.SetTransformPosition_Native(UInt64, ByRef Vector2)
      qualifiedName:
        CSharp: Chroma.Transform.SetTransformPosition_Native(System.UInt64, ref Chroma.Vector2)
        VB: Chroma.Transform.SetTransformPosition_Native(System.UInt64, ByRef Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void SetTransformPosition_Native(ulong id, ref Vector2 value)
          VB: Shared Sub SetTransformPosition_Native(id As ULong, ByRef value As Vector2)
        parameters:
        - id: id
          type: System.UInt64
        - id: value
          type: Chroma.Vector2
      overload: Chroma.Transform.SetTransformPosition_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Transform.SetTransformRotation_Native(System.UInt64,System.Single)
      commentId: M:Chroma.Transform.SetTransformRotation_Native(System.UInt64,System.Single)
      language: CSharp
      name:
        CSharp: SetTransformRotation_Native(UInt64, Single)
        VB: SetTransformRotation_Native(UInt64, Single)
      nameWithType:
        CSharp: Transform.SetTransformRotation_Native(UInt64, Single)
        VB: Transform.SetTransformRotation_Native(UInt64, Single)
      qualifiedName:
        CSharp: Chroma.Transform.SetTransformRotation_Native(System.UInt64, System.Single)
        VB: Chroma.Transform.SetTransformRotation_Native(System.UInt64, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void SetTransformRotation_Native(ulong id, float value)
          VB: Shared Sub SetTransformRotation_Native(id As ULong, value As Single)
        parameters:
        - id: id
          type: System.UInt64
        - id: value
          type: System.Single
      overload: Chroma.Transform.SetTransformRotation_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
    - id: Chroma.Transform.SetTransformScale_Native(System.UInt64,Chroma.Vector2@)
      commentId: M:Chroma.Transform.SetTransformScale_Native(System.UInt64,Chroma.Vector2@)
      language: CSharp
      name:
        CSharp: SetTransformScale_Native(UInt64, ref Vector2)
        VB: SetTransformScale_Native(UInt64, ByRef Vector2)
      nameWithType:
        CSharp: Transform.SetTransformScale_Native(UInt64, ref Vector2)
        VB: Transform.SetTransformScale_Native(UInt64, ByRef Vector2)
      qualifiedName:
        CSharp: Chroma.Transform.SetTransformScale_Native(System.UInt64, ref Chroma.Vector2)
        VB: Chroma.Transform.SetTransformScale_Native(System.UInt64, ByRef Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        path: cs.temp.dll
        isExternal: true
      syntax:
        content:
          CSharp: static extern void SetTransformScale_Native(ulong id, ref Vector2 value)
          VB: Shared Sub SetTransformScale_Native(id As ULong, ByRef value As Vector2)
        parameters:
        - id: id
          type: System.UInt64
        - id: value
          type: Chroma.Vector2
      overload: Chroma.Transform.SetTransformScale_Native*
      modifiers:
        CSharp:
        - static
        - extern
        VB:
        - Shared
  - id: Chroma.ExecutionOrder
    commentId: T:Chroma.ExecutionOrder
    language: CSharp
    name:
      CSharp: ExecutionOrder
      VB: ExecutionOrder
    nameWithType:
      CSharp: ExecutionOrder
      VB: ExecutionOrder
    qualifiedName:
      CSharp: Chroma.ExecutionOrder
      VB: Chroma.ExecutionOrder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: ExecutionOrder
      path: ''
      startLine: 1617
    syntax:
      content:
        CSharp: 'public class ExecutionOrder : Attribute, _Attribute'
        VB: >-
          Public Class ExecutionOrder

              Inherits Attribute

              Implements _Attribute
    inheritance:
    - System.Object
    - System.Attribute
    implements:
    - System.Runtime.InteropServices._Attribute
    inheritedMembers:
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.Equals(System.Object)
    - System.Attribute.GetHashCode
    - System.Attribute.Match(System.Object)
    - System.Attribute.IsDefaultAttribute
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    - System.Attribute.TypeId
    - System.Object.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Chroma.ExecutionOrder.Order
      commentId: P:Chroma.ExecutionOrder.Order
      language: CSharp
      name:
        CSharp: Order
        VB: Order
      nameWithType:
        CSharp: ExecutionOrder.Order
        VB: ExecutionOrder.Order
      qualifiedName:
        CSharp: Chroma.ExecutionOrder.Order
        VB: Chroma.ExecutionOrder.Order
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Order
        path: ''
        startLine: 1620
      syntax:
        content:
          CSharp: public int Order { get; }
          VB: Public ReadOnly Property Order As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Chroma.ExecutionOrder.Order*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Chroma.ExecutionOrder.#ctor(System.Int32)
      commentId: M:Chroma.ExecutionOrder.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: ExecutionOrder(Int32)
        VB: ExecutionOrder(Int32)
      nameWithType:
        CSharp: ExecutionOrder.ExecutionOrder(Int32)
        VB: ExecutionOrder.ExecutionOrder(Int32)
      qualifiedName:
        CSharp: Chroma.ExecutionOrder.ExecutionOrder(System.Int32)
        VB: Chroma.ExecutionOrder.ExecutionOrder(System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 1622
      syntax:
        content:
          CSharp: public ExecutionOrder(int order)
          VB: Public Sub New(order As Integer)
        parameters:
        - id: order
          type: System.Int32
      overload: Chroma.ExecutionOrder.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Chroma.ExecutionOrderHelper
    commentId: T:Chroma.ExecutionOrderHelper
    language: CSharp
    name:
      CSharp: ExecutionOrderHelper
      VB: ExecutionOrderHelper
    nameWithType:
      CSharp: ExecutionOrderHelper
      VB: ExecutionOrderHelper
    qualifiedName:
      CSharp: Chroma.ExecutionOrderHelper
      VB: Chroma.ExecutionOrderHelper
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: ExecutionOrderHelper
      path: ''
      startLine: 1629
    syntax:
      content:
        CSharp: static class ExecutionOrderHelper
        VB: Module ExecutionOrderHelper
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - static
      - class
      VB:
      - Module
    items:
    - id: Chroma.ExecutionOrderHelper.GetOrderFromTypeName(System.String)
      commentId: M:Chroma.ExecutionOrderHelper.GetOrderFromTypeName(System.String)
      language: CSharp
      name:
        CSharp: GetOrderFromTypeName(String)
        VB: GetOrderFromTypeName(String)
      nameWithType:
        CSharp: ExecutionOrderHelper.GetOrderFromTypeName(String)
        VB: ExecutionOrderHelper.GetOrderFromTypeName(String)
      qualifiedName:
        CSharp: Chroma.ExecutionOrderHelper.GetOrderFromTypeName(System.String)
        VB: Chroma.ExecutionOrderHelper.GetOrderFromTypeName(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetOrderFromTypeName
        path: ''
        startLine: 1631
      syntax:
        content:
          CSharp: static int GetOrderFromTypeName(string name)
          VB: Shared Function GetOrderFromTypeName(name As String) As Integer
        parameters:
        - id: name
          type: System.String
        return:
          type: System.Int32
      overload: Chroma.ExecutionOrderHelper.GetOrderFromTypeName*
      modifiers:
        CSharp:
        - static
        VB:
        - Shared
    - id: Chroma.ExecutionOrderHelper.GetOrderFromType(System.Type)
      commentId: M:Chroma.ExecutionOrderHelper.GetOrderFromType(System.Type)
      language: CSharp
      name:
        CSharp: GetOrderFromType(Type)
        VB: GetOrderFromType(Type)
      nameWithType:
        CSharp: ExecutionOrderHelper.GetOrderFromType(Type)
        VB: ExecutionOrderHelper.GetOrderFromType(Type)
      qualifiedName:
        CSharp: Chroma.ExecutionOrderHelper.GetOrderFromType(System.Type)
        VB: Chroma.ExecutionOrderHelper.GetOrderFromType(System.Type)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetOrderFromType
        path: ''
        startLine: 1646
      syntax:
        content:
          CSharp: static int GetOrderFromType(Type t)
          VB: Shared Function GetOrderFromType(t As Type) As Integer
        parameters:
        - id: t
          type: System.Type
        return:
          type: System.Int32
      overload: Chroma.ExecutionOrderHelper.GetOrderFromType*
      modifiers:
        CSharp:
        - static
        VB:
        - Shared
  - id: Chroma.Color
    commentId: T:Chroma.Color
    language: CSharp
    name:
      CSharp: Color
      VB: Color
    nameWithType:
      CSharp: Color
      VB: Color
    qualifiedName:
      CSharp: Chroma.Color
      VB: Chroma.Color
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Color
      path: ''
      startLine: 1755
    syntax:
      content:
        CSharp: public struct Color
        VB: Public Structure Color
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items: []
  - id: Chroma.Mathf
    commentId: T:Chroma.Mathf
    language: CSharp
    name:
      CSharp: Mathf
      VB: Mathf
    nameWithType:
      CSharp: Mathf
      VB: Mathf
    qualifiedName:
      CSharp: Chroma.Mathf
      VB: Chroma.Mathf
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Mathf
      path: ''
      startLine: 1770
    summary: "\nFloat based math class for use in engine.\n"
    example: []
    syntax:
      content:
        CSharp: public class Mathf
        VB: Public Class Mathf
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Chroma.Mathf.PI
      commentId: F:Chroma.Mathf.PI
      language: CSharp
      name:
        CSharp: PI
        VB: PI
      nameWithType:
        CSharp: Mathf.PI
        VB: Mathf.PI
      qualifiedName:
        CSharp: Chroma.Mathf.PI
        VB: Chroma.Mathf.PI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: PI
        path: ''
        startLine: 1775
      summary: "\nPI to a precision of 16 decimal digits.\n"
      example: []
      syntax:
        content:
          CSharp: public const float PI = 3.14159274F
          VB: Public Const PI As Single = 3.14159274F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Mathf.E
      commentId: F:Chroma.Mathf.E
      language: CSharp
      name:
        CSharp: E
        VB: E
      nameWithType:
        CSharp: Mathf.E
        VB: Mathf.E
      qualifiedName:
        CSharp: Chroma.Mathf.E
        VB: Chroma.Mathf.E
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: E
        path: ''
        startLine: 1780
      summary: "\nE to a precision of 16 decimal digits.\n"
      example: []
      syntax:
        content:
          CSharp: public const float E = 2.71828175F
          VB: Public Const E As Single = 2.71828175F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Chroma.Mathf.Abs(System.Single)
      commentId: M:Chroma.Mathf.Abs(System.Single)
      language: CSharp
      name:
        CSharp: Abs(Single)
        VB: Abs(Single)
      nameWithType:
        CSharp: Mathf.Abs(Single)
        VB: Mathf.Abs(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Abs(System.Single)
        VB: Chroma.Mathf.Abs(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Abs
        path: ''
        startLine: 1782
      syntax:
        content:
          CSharp: public static float Abs(float val)
          VB: Public Shared Function Abs(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Abs*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Acos(System.Single)
      commentId: M:Chroma.Mathf.Acos(System.Single)
      language: CSharp
      name:
        CSharp: Acos(Single)
        VB: Acos(Single)
      nameWithType:
        CSharp: Mathf.Acos(Single)
        VB: Mathf.Acos(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Acos(System.Single)
        VB: Chroma.Mathf.Acos(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Acos
        path: ''
        startLine: 1787
      syntax:
        content:
          CSharp: public static float Acos(float val)
          VB: Public Shared Function Acos(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Acos*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Atan(System.Single)
      commentId: M:Chroma.Mathf.Atan(System.Single)
      language: CSharp
      name:
        CSharp: Atan(Single)
        VB: Atan(Single)
      nameWithType:
        CSharp: Mathf.Atan(Single)
        VB: Mathf.Atan(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Atan(System.Single)
        VB: Chroma.Mathf.Atan(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Atan
        path: ''
        startLine: 1792
      syntax:
        content:
          CSharp: public static float Atan(float val)
          VB: Public Shared Function Atan(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Atan*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Atan2(System.Single,System.Single)
      commentId: M:Chroma.Mathf.Atan2(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Atan2(Single, Single)
        VB: Atan2(Single, Single)
      nameWithType:
        CSharp: Mathf.Atan2(Single, Single)
        VB: Mathf.Atan2(Single, Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Atan2(System.Single, System.Single)
        VB: Chroma.Mathf.Atan2(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Atan2
        path: ''
        startLine: 1797
      syntax:
        content:
          CSharp: public static float Atan2(float x, float y)
          VB: Public Shared Function Atan2(x As Single, y As Single) As Single
        parameters:
        - id: x
          type: System.Single
        - id: y
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Atan2*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Ceiling(System.Single)
      commentId: M:Chroma.Mathf.Ceiling(System.Single)
      language: CSharp
      name:
        CSharp: Ceiling(Single)
        VB: Ceiling(Single)
      nameWithType:
        CSharp: Mathf.Ceiling(Single)
        VB: Mathf.Ceiling(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Ceiling(System.Single)
        VB: Chroma.Mathf.Ceiling(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Ceiling
        path: ''
        startLine: 1802
      syntax:
        content:
          CSharp: public static float Ceiling(float val)
          VB: Public Shared Function Ceiling(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Ceiling*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Cos(System.Single)
      commentId: M:Chroma.Mathf.Cos(System.Single)
      language: CSharp
      name:
        CSharp: Cos(Single)
        VB: Cos(Single)
      nameWithType:
        CSharp: Mathf.Cos(Single)
        VB: Mathf.Cos(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Cos(System.Single)
        VB: Chroma.Mathf.Cos(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Cos
        path: ''
        startLine: 1807
      syntax:
        content:
          CSharp: public static float Cos(float val)
          VB: Public Shared Function Cos(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Cos*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Cosh(System.Single)
      commentId: M:Chroma.Mathf.Cosh(System.Single)
      language: CSharp
      name:
        CSharp: Cosh(Single)
        VB: Cosh(Single)
      nameWithType:
        CSharp: Mathf.Cosh(Single)
        VB: Mathf.Cosh(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Cosh(System.Single)
        VB: Chroma.Mathf.Cosh(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Cosh
        path: ''
        startLine: 1812
      syntax:
        content:
          CSharp: public static float Cosh(float val)
          VB: Public Shared Function Cosh(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Cosh*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Clamp(System.Single,System.Single,System.Single)
      commentId: M:Chroma.Mathf.Clamp(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Clamp(Single, Single, Single)
        VB: Clamp(Single, Single, Single)
      nameWithType:
        CSharp: Mathf.Clamp(Single, Single, Single)
        VB: Mathf.Clamp(Single, Single, Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Clamp(System.Single, System.Single, System.Single)
        VB: Chroma.Mathf.Clamp(System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Clamp
        path: ''
        startLine: 1818
      syntax:
        content:
          CSharp: public static float Clamp(float val, float min, float max)
          VB: Public Shared Function Clamp(val As Single, min As Single, max As Single) As Single
        parameters:
        - id: val
          type: System.Single
        - id: min
          type: System.Single
        - id: max
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Clamp*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Clamp``1(``0,``0,``0)
      commentId: M:Chroma.Mathf.Clamp``1(``0,``0,``0)
      language: CSharp
      name:
        CSharp: Clamp<T>(T, T, T)
        VB: Clamp(Of T)(T, T, T)
      nameWithType:
        CSharp: Mathf.Clamp<T>(T, T, T)
        VB: Mathf.Clamp(Of T)(T, T, T)
      qualifiedName:
        CSharp: Chroma.Mathf.Clamp<T>(T, T, T)
        VB: Chroma.Mathf.Clamp(Of T)(T, T, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Clamp
        path: ''
        startLine: 1827
      syntax:
        content:
          CSharp: >-
            public static T Clamp<T>(T val, T min, T max)

                where T : IComparable<T>
          VB: Public Shared Function Clamp(Of T As IComparable(Of T))(val As T, min As T, max As T) As T
        parameters:
        - id: val
          type: '{T}'
        - id: min
          type: '{T}'
        - id: max
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: Chroma.Mathf.Clamp*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Exp(System.Single)
      commentId: M:Chroma.Mathf.Exp(System.Single)
      language: CSharp
      name:
        CSharp: Exp(Single)
        VB: Exp(Single)
      nameWithType:
        CSharp: Mathf.Exp(Single)
        VB: Mathf.Exp(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Exp(System.Single)
        VB: Chroma.Mathf.Exp(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Exp
        path: ''
        startLine: 1836
      syntax:
        content:
          CSharp: public static float Exp(float val)
          VB: Public Shared Function Exp(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Exp*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Floor(System.Single)
      commentId: M:Chroma.Mathf.Floor(System.Single)
      language: CSharp
      name:
        CSharp: Floor(Single)
        VB: Floor(Single)
      nameWithType:
        CSharp: Mathf.Floor(Single)
        VB: Mathf.Floor(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Floor(System.Single)
        VB: Chroma.Mathf.Floor(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Floor
        path: ''
        startLine: 1841
      syntax:
        content:
          CSharp: public static float Floor(float val)
          VB: Public Shared Function Floor(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Floor*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.IEEERemainder(System.Single,System.Single)
      commentId: M:Chroma.Mathf.IEEERemainder(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: IEEERemainder(Single, Single)
        VB: IEEERemainder(Single, Single)
      nameWithType:
        CSharp: Mathf.IEEERemainder(Single, Single)
        VB: Mathf.IEEERemainder(Single, Single)
      qualifiedName:
        CSharp: Chroma.Mathf.IEEERemainder(System.Single, System.Single)
        VB: Chroma.Mathf.IEEERemainder(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: IEEERemainder
        path: ''
        startLine: 1846
      syntax:
        content:
          CSharp: public static float IEEERemainder(float a, float b)
          VB: Public Shared Function IEEERemainder(a As Single, b As Single) As Single
        parameters:
        - id: a
          type: System.Single
        - id: b
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.IEEERemainder*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Log(System.Single)
      commentId: M:Chroma.Mathf.Log(System.Single)
      language: CSharp
      name:
        CSharp: Log(Single)
        VB: Log(Single)
      nameWithType:
        CSharp: Mathf.Log(Single)
        VB: Mathf.Log(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Log(System.Single)
        VB: Chroma.Mathf.Log(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Log
        path: ''
        startLine: 1851
      syntax:
        content:
          CSharp: public static float Log(float val)
          VB: Public Shared Function Log(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Log*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Log(System.Single,System.Single)
      commentId: M:Chroma.Mathf.Log(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Log(Single, Single)
        VB: Log(Single, Single)
      nameWithType:
        CSharp: Mathf.Log(Single, Single)
        VB: Mathf.Log(Single, Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Log(System.Single, System.Single)
        VB: Chroma.Mathf.Log(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Log
        path: ''
        startLine: 1856
      syntax:
        content:
          CSharp: public static float Log(float val, float new_base)
          VB: Public Shared Function Log(val As Single, new_base As Single) As Single
        parameters:
        - id: val
          type: System.Single
        - id: new_base
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Log*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Log10(System.Single)
      commentId: M:Chroma.Mathf.Log10(System.Single)
      language: CSharp
      name:
        CSharp: Log10(Single)
        VB: Log10(Single)
      nameWithType:
        CSharp: Mathf.Log10(Single)
        VB: Mathf.Log10(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Log10(System.Single)
        VB: Chroma.Mathf.Log10(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Log10
        path: ''
        startLine: 1861
      syntax:
        content:
          CSharp: public static float Log10(float val)
          VB: Public Shared Function Log10(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Log10*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Min(System.Byte,System.Byte)
      commentId: M:Chroma.Mathf.Min(System.Byte,System.Byte)
      language: CSharp
      name:
        CSharp: Min(Byte, Byte)
        VB: Min(Byte, Byte)
      nameWithType:
        CSharp: Mathf.Min(Byte, Byte)
        VB: Mathf.Min(Byte, Byte)
      qualifiedName:
        CSharp: Chroma.Mathf.Min(System.Byte, System.Byte)
        VB: Chroma.Mathf.Min(System.Byte, System.Byte)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Min
        path: ''
        startLine: 1866
      syntax:
        content:
          CSharp: public static byte Min(byte a, byte b)
          VB: Public Shared Function Min(a As Byte, b As Byte) As Byte
        parameters:
        - id: a
          type: System.Byte
        - id: b
          type: System.Byte
        return:
          type: System.Byte
      overload: Chroma.Mathf.Min*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Min(System.Decimal,System.Decimal)
      commentId: M:Chroma.Mathf.Min(System.Decimal,System.Decimal)
      language: CSharp
      name:
        CSharp: Min(Decimal, Decimal)
        VB: Min(Decimal, Decimal)
      nameWithType:
        CSharp: Mathf.Min(Decimal, Decimal)
        VB: Mathf.Min(Decimal, Decimal)
      qualifiedName:
        CSharp: Chroma.Mathf.Min(System.Decimal, System.Decimal)
        VB: Chroma.Mathf.Min(System.Decimal, System.Decimal)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Min
        path: ''
        startLine: 1871
      syntax:
        content:
          CSharp: public static decimal Min(decimal a, decimal b)
          VB: Public Shared Function Min(a As Decimal, b As Decimal) As Decimal
        parameters:
        - id: a
          type: System.Decimal
        - id: b
          type: System.Decimal
        return:
          type: System.Decimal
      overload: Chroma.Mathf.Min*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Min(System.Double,System.Double)
      commentId: M:Chroma.Mathf.Min(System.Double,System.Double)
      language: CSharp
      name:
        CSharp: Min(Double, Double)
        VB: Min(Double, Double)
      nameWithType:
        CSharp: Mathf.Min(Double, Double)
        VB: Mathf.Min(Double, Double)
      qualifiedName:
        CSharp: Chroma.Mathf.Min(System.Double, System.Double)
        VB: Chroma.Mathf.Min(System.Double, System.Double)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Min
        path: ''
        startLine: 1876
      syntax:
        content:
          CSharp: public static double Min(double a, double b)
          VB: Public Shared Function Min(a As Double, b As Double) As Double
        parameters:
        - id: a
          type: System.Double
        - id: b
          type: System.Double
        return:
          type: System.Double
      overload: Chroma.Mathf.Min*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Min(System.Int16,System.Int16)
      commentId: M:Chroma.Mathf.Min(System.Int16,System.Int16)
      language: CSharp
      name:
        CSharp: Min(Int16, Int16)
        VB: Min(Int16, Int16)
      nameWithType:
        CSharp: Mathf.Min(Int16, Int16)
        VB: Mathf.Min(Int16, Int16)
      qualifiedName:
        CSharp: Chroma.Mathf.Min(System.Int16, System.Int16)
        VB: Chroma.Mathf.Min(System.Int16, System.Int16)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Min
        path: ''
        startLine: 1881
      syntax:
        content:
          CSharp: public static short Min(short a, short b)
          VB: Public Shared Function Min(a As Short, b As Short) As Short
        parameters:
        - id: a
          type: System.Int16
        - id: b
          type: System.Int16
        return:
          type: System.Int16
      overload: Chroma.Mathf.Min*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Min(System.Int32,System.Int32)
      commentId: M:Chroma.Mathf.Min(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Min(Int32, Int32)
        VB: Min(Int32, Int32)
      nameWithType:
        CSharp: Mathf.Min(Int32, Int32)
        VB: Mathf.Min(Int32, Int32)
      qualifiedName:
        CSharp: Chroma.Mathf.Min(System.Int32, System.Int32)
        VB: Chroma.Mathf.Min(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Min
        path: ''
        startLine: 1886
      syntax:
        content:
          CSharp: public static int Min(int a, int b)
          VB: Public Shared Function Min(a As Integer, b As Integer) As Integer
        parameters:
        - id: a
          type: System.Int32
        - id: b
          type: System.Int32
        return:
          type: System.Int32
      overload: Chroma.Mathf.Min*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Min(System.Int64,System.Int64)
      commentId: M:Chroma.Mathf.Min(System.Int64,System.Int64)
      language: CSharp
      name:
        CSharp: Min(Int64, Int64)
        VB: Min(Int64, Int64)
      nameWithType:
        CSharp: Mathf.Min(Int64, Int64)
        VB: Mathf.Min(Int64, Int64)
      qualifiedName:
        CSharp: Chroma.Mathf.Min(System.Int64, System.Int64)
        VB: Chroma.Mathf.Min(System.Int64, System.Int64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Min
        path: ''
        startLine: 1891
      syntax:
        content:
          CSharp: public static long Min(long a, long b)
          VB: Public Shared Function Min(a As Long, b As Long) As Long
        parameters:
        - id: a
          type: System.Int64
        - id: b
          type: System.Int64
        return:
          type: System.Int64
      overload: Chroma.Mathf.Min*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Min(System.SByte,System.SByte)
      commentId: M:Chroma.Mathf.Min(System.SByte,System.SByte)
      language: CSharp
      name:
        CSharp: Min(SByte, SByte)
        VB: Min(SByte, SByte)
      nameWithType:
        CSharp: Mathf.Min(SByte, SByte)
        VB: Mathf.Min(SByte, SByte)
      qualifiedName:
        CSharp: Chroma.Mathf.Min(System.SByte, System.SByte)
        VB: Chroma.Mathf.Min(System.SByte, System.SByte)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Min
        path: ''
        startLine: 1896
      syntax:
        content:
          CSharp: public static sbyte Min(sbyte a, sbyte b)
          VB: Public Shared Function Min(a As SByte, b As SByte) As SByte
        parameters:
        - id: a
          type: System.SByte
        - id: b
          type: System.SByte
        return:
          type: System.SByte
      overload: Chroma.Mathf.Min*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Min(System.Single,System.Single)
      commentId: M:Chroma.Mathf.Min(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Min(Single, Single)
        VB: Min(Single, Single)
      nameWithType:
        CSharp: Mathf.Min(Single, Single)
        VB: Mathf.Min(Single, Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Min(System.Single, System.Single)
        VB: Chroma.Mathf.Min(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Min
        path: ''
        startLine: 1901
      syntax:
        content:
          CSharp: public static float Min(float a, float b)
          VB: Public Shared Function Min(a As Single, b As Single) As Single
        parameters:
        - id: a
          type: System.Single
        - id: b
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Min*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Min(System.UInt16,System.UInt16)
      commentId: M:Chroma.Mathf.Min(System.UInt16,System.UInt16)
      language: CSharp
      name:
        CSharp: Min(UInt16, UInt16)
        VB: Min(UInt16, UInt16)
      nameWithType:
        CSharp: Mathf.Min(UInt16, UInt16)
        VB: Mathf.Min(UInt16, UInt16)
      qualifiedName:
        CSharp: Chroma.Mathf.Min(System.UInt16, System.UInt16)
        VB: Chroma.Mathf.Min(System.UInt16, System.UInt16)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Min
        path: ''
        startLine: 1906
      syntax:
        content:
          CSharp: public static ushort Min(ushort a, ushort b)
          VB: Public Shared Function Min(a As UShort, b As UShort) As UShort
        parameters:
        - id: a
          type: System.UInt16
        - id: b
          type: System.UInt16
        return:
          type: System.UInt16
      overload: Chroma.Mathf.Min*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Min(System.UInt32,System.UInt32)
      commentId: M:Chroma.Mathf.Min(System.UInt32,System.UInt32)
      language: CSharp
      name:
        CSharp: Min(UInt32, UInt32)
        VB: Min(UInt32, UInt32)
      nameWithType:
        CSharp: Mathf.Min(UInt32, UInt32)
        VB: Mathf.Min(UInt32, UInt32)
      qualifiedName:
        CSharp: Chroma.Mathf.Min(System.UInt32, System.UInt32)
        VB: Chroma.Mathf.Min(System.UInt32, System.UInt32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Min
        path: ''
        startLine: 1911
      syntax:
        content:
          CSharp: public static uint Min(uint a, uint b)
          VB: Public Shared Function Min(a As UInteger, b As UInteger) As UInteger
        parameters:
        - id: a
          type: System.UInt32
        - id: b
          type: System.UInt32
        return:
          type: System.UInt32
      overload: Chroma.Mathf.Min*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Min(System.UInt64,System.UInt64)
      commentId: M:Chroma.Mathf.Min(System.UInt64,System.UInt64)
      language: CSharp
      name:
        CSharp: Min(UInt64, UInt64)
        VB: Min(UInt64, UInt64)
      nameWithType:
        CSharp: Mathf.Min(UInt64, UInt64)
        VB: Mathf.Min(UInt64, UInt64)
      qualifiedName:
        CSharp: Chroma.Mathf.Min(System.UInt64, System.UInt64)
        VB: Chroma.Mathf.Min(System.UInt64, System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Min
        path: ''
        startLine: 1916
      syntax:
        content:
          CSharp: public static ulong Min(ulong a, ulong b)
          VB: Public Shared Function Min(a As ULong, b As ULong) As ULong
        parameters:
        - id: a
          type: System.UInt64
        - id: b
          type: System.UInt64
        return:
          type: System.UInt64
      overload: Chroma.Mathf.Min*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Max(System.Byte,System.Byte)
      commentId: M:Chroma.Mathf.Max(System.Byte,System.Byte)
      language: CSharp
      name:
        CSharp: Max(Byte, Byte)
        VB: Max(Byte, Byte)
      nameWithType:
        CSharp: Mathf.Max(Byte, Byte)
        VB: Mathf.Max(Byte, Byte)
      qualifiedName:
        CSharp: Chroma.Mathf.Max(System.Byte, System.Byte)
        VB: Chroma.Mathf.Max(System.Byte, System.Byte)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Max
        path: ''
        startLine: 1921
      syntax:
        content:
          CSharp: public static byte Max(byte a, byte b)
          VB: Public Shared Function Max(a As Byte, b As Byte) As Byte
        parameters:
        - id: a
          type: System.Byte
        - id: b
          type: System.Byte
        return:
          type: System.Byte
      overload: Chroma.Mathf.Max*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Max(System.Decimal,System.Decimal)
      commentId: M:Chroma.Mathf.Max(System.Decimal,System.Decimal)
      language: CSharp
      name:
        CSharp: Max(Decimal, Decimal)
        VB: Max(Decimal, Decimal)
      nameWithType:
        CSharp: Mathf.Max(Decimal, Decimal)
        VB: Mathf.Max(Decimal, Decimal)
      qualifiedName:
        CSharp: Chroma.Mathf.Max(System.Decimal, System.Decimal)
        VB: Chroma.Mathf.Max(System.Decimal, System.Decimal)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Max
        path: ''
        startLine: 1926
      syntax:
        content:
          CSharp: public static decimal Max(decimal a, decimal b)
          VB: Public Shared Function Max(a As Decimal, b As Decimal) As Decimal
        parameters:
        - id: a
          type: System.Decimal
        - id: b
          type: System.Decimal
        return:
          type: System.Decimal
      overload: Chroma.Mathf.Max*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Max(System.Double,System.Double)
      commentId: M:Chroma.Mathf.Max(System.Double,System.Double)
      language: CSharp
      name:
        CSharp: Max(Double, Double)
        VB: Max(Double, Double)
      nameWithType:
        CSharp: Mathf.Max(Double, Double)
        VB: Mathf.Max(Double, Double)
      qualifiedName:
        CSharp: Chroma.Mathf.Max(System.Double, System.Double)
        VB: Chroma.Mathf.Max(System.Double, System.Double)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Max
        path: ''
        startLine: 1931
      syntax:
        content:
          CSharp: public static double Max(double a, double b)
          VB: Public Shared Function Max(a As Double, b As Double) As Double
        parameters:
        - id: a
          type: System.Double
        - id: b
          type: System.Double
        return:
          type: System.Double
      overload: Chroma.Mathf.Max*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Max(System.Int16,System.Int16)
      commentId: M:Chroma.Mathf.Max(System.Int16,System.Int16)
      language: CSharp
      name:
        CSharp: Max(Int16, Int16)
        VB: Max(Int16, Int16)
      nameWithType:
        CSharp: Mathf.Max(Int16, Int16)
        VB: Mathf.Max(Int16, Int16)
      qualifiedName:
        CSharp: Chroma.Mathf.Max(System.Int16, System.Int16)
        VB: Chroma.Mathf.Max(System.Int16, System.Int16)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Max
        path: ''
        startLine: 1936
      syntax:
        content:
          CSharp: public static short Max(short a, short b)
          VB: Public Shared Function Max(a As Short, b As Short) As Short
        parameters:
        - id: a
          type: System.Int16
        - id: b
          type: System.Int16
        return:
          type: System.Int16
      overload: Chroma.Mathf.Max*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Max(System.Int32,System.Int32)
      commentId: M:Chroma.Mathf.Max(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Max(Int32, Int32)
        VB: Max(Int32, Int32)
      nameWithType:
        CSharp: Mathf.Max(Int32, Int32)
        VB: Mathf.Max(Int32, Int32)
      qualifiedName:
        CSharp: Chroma.Mathf.Max(System.Int32, System.Int32)
        VB: Chroma.Mathf.Max(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Max
        path: ''
        startLine: 1941
      syntax:
        content:
          CSharp: public static int Max(int a, int b)
          VB: Public Shared Function Max(a As Integer, b As Integer) As Integer
        parameters:
        - id: a
          type: System.Int32
        - id: b
          type: System.Int32
        return:
          type: System.Int32
      overload: Chroma.Mathf.Max*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Max(System.Int64,System.Int64)
      commentId: M:Chroma.Mathf.Max(System.Int64,System.Int64)
      language: CSharp
      name:
        CSharp: Max(Int64, Int64)
        VB: Max(Int64, Int64)
      nameWithType:
        CSharp: Mathf.Max(Int64, Int64)
        VB: Mathf.Max(Int64, Int64)
      qualifiedName:
        CSharp: Chroma.Mathf.Max(System.Int64, System.Int64)
        VB: Chroma.Mathf.Max(System.Int64, System.Int64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Max
        path: ''
        startLine: 1946
      syntax:
        content:
          CSharp: public static long Max(long a, long b)
          VB: Public Shared Function Max(a As Long, b As Long) As Long
        parameters:
        - id: a
          type: System.Int64
        - id: b
          type: System.Int64
        return:
          type: System.Int64
      overload: Chroma.Mathf.Max*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Max(System.SByte,System.SByte)
      commentId: M:Chroma.Mathf.Max(System.SByte,System.SByte)
      language: CSharp
      name:
        CSharp: Max(SByte, SByte)
        VB: Max(SByte, SByte)
      nameWithType:
        CSharp: Mathf.Max(SByte, SByte)
        VB: Mathf.Max(SByte, SByte)
      qualifiedName:
        CSharp: Chroma.Mathf.Max(System.SByte, System.SByte)
        VB: Chroma.Mathf.Max(System.SByte, System.SByte)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Max
        path: ''
        startLine: 1951
      syntax:
        content:
          CSharp: public static sbyte Max(sbyte a, sbyte b)
          VB: Public Shared Function Max(a As SByte, b As SByte) As SByte
        parameters:
        - id: a
          type: System.SByte
        - id: b
          type: System.SByte
        return:
          type: System.SByte
      overload: Chroma.Mathf.Max*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Max(System.Single,System.Single)
      commentId: M:Chroma.Mathf.Max(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Max(Single, Single)
        VB: Max(Single, Single)
      nameWithType:
        CSharp: Mathf.Max(Single, Single)
        VB: Mathf.Max(Single, Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Max(System.Single, System.Single)
        VB: Chroma.Mathf.Max(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Max
        path: ''
        startLine: 1956
      syntax:
        content:
          CSharp: public static float Max(float a, float b)
          VB: Public Shared Function Max(a As Single, b As Single) As Single
        parameters:
        - id: a
          type: System.Single
        - id: b
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Max*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Max(System.UInt16,System.UInt16)
      commentId: M:Chroma.Mathf.Max(System.UInt16,System.UInt16)
      language: CSharp
      name:
        CSharp: Max(UInt16, UInt16)
        VB: Max(UInt16, UInt16)
      nameWithType:
        CSharp: Mathf.Max(UInt16, UInt16)
        VB: Mathf.Max(UInt16, UInt16)
      qualifiedName:
        CSharp: Chroma.Mathf.Max(System.UInt16, System.UInt16)
        VB: Chroma.Mathf.Max(System.UInt16, System.UInt16)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Max
        path: ''
        startLine: 1961
      syntax:
        content:
          CSharp: public static ushort Max(ushort a, ushort b)
          VB: Public Shared Function Max(a As UShort, b As UShort) As UShort
        parameters:
        - id: a
          type: System.UInt16
        - id: b
          type: System.UInt16
        return:
          type: System.UInt16
      overload: Chroma.Mathf.Max*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Max(System.UInt32,System.UInt32)
      commentId: M:Chroma.Mathf.Max(System.UInt32,System.UInt32)
      language: CSharp
      name:
        CSharp: Max(UInt32, UInt32)
        VB: Max(UInt32, UInt32)
      nameWithType:
        CSharp: Mathf.Max(UInt32, UInt32)
        VB: Mathf.Max(UInt32, UInt32)
      qualifiedName:
        CSharp: Chroma.Mathf.Max(System.UInt32, System.UInt32)
        VB: Chroma.Mathf.Max(System.UInt32, System.UInt32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Max
        path: ''
        startLine: 1966
      syntax:
        content:
          CSharp: public static uint Max(uint a, uint b)
          VB: Public Shared Function Max(a As UInteger, b As UInteger) As UInteger
        parameters:
        - id: a
          type: System.UInt32
        - id: b
          type: System.UInt32
        return:
          type: System.UInt32
      overload: Chroma.Mathf.Max*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Max(System.UInt64,System.UInt64)
      commentId: M:Chroma.Mathf.Max(System.UInt64,System.UInt64)
      language: CSharp
      name:
        CSharp: Max(UInt64, UInt64)
        VB: Max(UInt64, UInt64)
      nameWithType:
        CSharp: Mathf.Max(UInt64, UInt64)
        VB: Mathf.Max(UInt64, UInt64)
      qualifiedName:
        CSharp: Chroma.Mathf.Max(System.UInt64, System.UInt64)
        VB: Chroma.Mathf.Max(System.UInt64, System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Max
        path: ''
        startLine: 1971
      syntax:
        content:
          CSharp: public static ulong Max(ulong a, ulong b)
          VB: Public Shared Function Max(a As ULong, b As ULong) As ULong
        parameters:
        - id: a
          type: System.UInt64
        - id: b
          type: System.UInt64
        return:
          type: System.UInt64
      overload: Chroma.Mathf.Max*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Pow(System.Single,System.Single)
      commentId: M:Chroma.Mathf.Pow(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Pow(Single, Single)
        VB: Pow(Single, Single)
      nameWithType:
        CSharp: Mathf.Pow(Single, Single)
        VB: Mathf.Pow(Single, Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Pow(System.Single, System.Single)
        VB: Chroma.Mathf.Pow(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Pow
        path: ''
        startLine: 1976
      syntax:
        content:
          CSharp: public static float Pow(float a, float b)
          VB: Public Shared Function Pow(a As Single, b As Single) As Single
        parameters:
        - id: a
          type: System.Single
        - id: b
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Pow*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Round(System.Single)
      commentId: M:Chroma.Mathf.Round(System.Single)
      language: CSharp
      name:
        CSharp: Round(Single)
        VB: Round(Single)
      nameWithType:
        CSharp: Mathf.Round(Single)
        VB: Mathf.Round(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Round(System.Single)
        VB: Chroma.Mathf.Round(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Round
        path: ''
        startLine: 1981
      syntax:
        content:
          CSharp: public static float Round(float val)
          VB: Public Shared Function Round(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Round*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Round(System.Single,System.Int32)
      commentId: M:Chroma.Mathf.Round(System.Single,System.Int32)
      language: CSharp
      name:
        CSharp: Round(Single, Int32)
        VB: Round(Single, Int32)
      nameWithType:
        CSharp: Mathf.Round(Single, Int32)
        VB: Mathf.Round(Single, Int32)
      qualifiedName:
        CSharp: Chroma.Mathf.Round(System.Single, System.Int32)
        VB: Chroma.Mathf.Round(System.Single, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Round
        path: ''
        startLine: 1986
      syntax:
        content:
          CSharp: public static float Round(float val, int rounding)
          VB: Public Shared Function Round(val As Single, rounding As Integer) As Single
        parameters:
        - id: val
          type: System.Single
        - id: rounding
          type: System.Int32
        return:
          type: System.Single
      overload: Chroma.Mathf.Round*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Sign(System.Decimal)
      commentId: M:Chroma.Mathf.Sign(System.Decimal)
      language: CSharp
      name:
        CSharp: Sign(Decimal)
        VB: Sign(Decimal)
      nameWithType:
        CSharp: Mathf.Sign(Decimal)
        VB: Mathf.Sign(Decimal)
      qualifiedName:
        CSharp: Chroma.Mathf.Sign(System.Decimal)
        VB: Chroma.Mathf.Sign(System.Decimal)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Sign
        path: ''
        startLine: 1991
      syntax:
        content:
          CSharp: public static int Sign(decimal val)
          VB: Public Shared Function Sign(val As Decimal) As Integer
        parameters:
        - id: val
          type: System.Decimal
        return:
          type: System.Int32
      overload: Chroma.Mathf.Sign*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Sign(System.Double)
      commentId: M:Chroma.Mathf.Sign(System.Double)
      language: CSharp
      name:
        CSharp: Sign(Double)
        VB: Sign(Double)
      nameWithType:
        CSharp: Mathf.Sign(Double)
        VB: Mathf.Sign(Double)
      qualifiedName:
        CSharp: Chroma.Mathf.Sign(System.Double)
        VB: Chroma.Mathf.Sign(System.Double)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Sign
        path: ''
        startLine: 1996
      syntax:
        content:
          CSharp: public static int Sign(double val)
          VB: Public Shared Function Sign(val As Double) As Integer
        parameters:
        - id: val
          type: System.Double
        return:
          type: System.Int32
      overload: Chroma.Mathf.Sign*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Sign(System.Int16)
      commentId: M:Chroma.Mathf.Sign(System.Int16)
      language: CSharp
      name:
        CSharp: Sign(Int16)
        VB: Sign(Int16)
      nameWithType:
        CSharp: Mathf.Sign(Int16)
        VB: Mathf.Sign(Int16)
      qualifiedName:
        CSharp: Chroma.Mathf.Sign(System.Int16)
        VB: Chroma.Mathf.Sign(System.Int16)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Sign
        path: ''
        startLine: 2001
      syntax:
        content:
          CSharp: public static int Sign(short val)
          VB: Public Shared Function Sign(val As Short) As Integer
        parameters:
        - id: val
          type: System.Int16
        return:
          type: System.Int32
      overload: Chroma.Mathf.Sign*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Sign(System.Int32)
      commentId: M:Chroma.Mathf.Sign(System.Int32)
      language: CSharp
      name:
        CSharp: Sign(Int32)
        VB: Sign(Int32)
      nameWithType:
        CSharp: Mathf.Sign(Int32)
        VB: Mathf.Sign(Int32)
      qualifiedName:
        CSharp: Chroma.Mathf.Sign(System.Int32)
        VB: Chroma.Mathf.Sign(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Sign
        path: ''
        startLine: 2006
      syntax:
        content:
          CSharp: public static int Sign(int val)
          VB: Public Shared Function Sign(val As Integer) As Integer
        parameters:
        - id: val
          type: System.Int32
        return:
          type: System.Int32
      overload: Chroma.Mathf.Sign*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Sign(System.Int64)
      commentId: M:Chroma.Mathf.Sign(System.Int64)
      language: CSharp
      name:
        CSharp: Sign(Int64)
        VB: Sign(Int64)
      nameWithType:
        CSharp: Mathf.Sign(Int64)
        VB: Mathf.Sign(Int64)
      qualifiedName:
        CSharp: Chroma.Mathf.Sign(System.Int64)
        VB: Chroma.Mathf.Sign(System.Int64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Sign
        path: ''
        startLine: 2011
      syntax:
        content:
          CSharp: public static int Sign(long val)
          VB: Public Shared Function Sign(val As Long) As Integer
        parameters:
        - id: val
          type: System.Int64
        return:
          type: System.Int32
      overload: Chroma.Mathf.Sign*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Sign(System.SByte)
      commentId: M:Chroma.Mathf.Sign(System.SByte)
      language: CSharp
      name:
        CSharp: Sign(SByte)
        VB: Sign(SByte)
      nameWithType:
        CSharp: Mathf.Sign(SByte)
        VB: Mathf.Sign(SByte)
      qualifiedName:
        CSharp: Chroma.Mathf.Sign(System.SByte)
        VB: Chroma.Mathf.Sign(System.SByte)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Sign
        path: ''
        startLine: 2016
      syntax:
        content:
          CSharp: public static int Sign(sbyte val)
          VB: Public Shared Function Sign(val As SByte) As Integer
        parameters:
        - id: val
          type: System.SByte
        return:
          type: System.Int32
      overload: Chroma.Mathf.Sign*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Sign(System.Single)
      commentId: M:Chroma.Mathf.Sign(System.Single)
      language: CSharp
      name:
        CSharp: Sign(Single)
        VB: Sign(Single)
      nameWithType:
        CSharp: Mathf.Sign(Single)
        VB: Mathf.Sign(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Sign(System.Single)
        VB: Chroma.Mathf.Sign(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Sign
        path: ''
        startLine: 2021
      syntax:
        content:
          CSharp: public static int Sign(float val)
          VB: Public Shared Function Sign(val As Single) As Integer
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Int32
      overload: Chroma.Mathf.Sign*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Sin(System.Single)
      commentId: M:Chroma.Mathf.Sin(System.Single)
      language: CSharp
      name:
        CSharp: Sin(Single)
        VB: Sin(Single)
      nameWithType:
        CSharp: Mathf.Sin(Single)
        VB: Mathf.Sin(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Sin(System.Single)
        VB: Chroma.Mathf.Sin(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Sin
        path: ''
        startLine: 2026
      syntax:
        content:
          CSharp: public static float Sin(float val)
          VB: Public Shared Function Sin(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Sin*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Sinh(System.Single)
      commentId: M:Chroma.Mathf.Sinh(System.Single)
      language: CSharp
      name:
        CSharp: Sinh(Single)
        VB: Sinh(Single)
      nameWithType:
        CSharp: Mathf.Sinh(Single)
        VB: Mathf.Sinh(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Sinh(System.Single)
        VB: Chroma.Mathf.Sinh(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Sinh
        path: ''
        startLine: 2031
      syntax:
        content:
          CSharp: public static float Sinh(float val)
          VB: Public Shared Function Sinh(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Sinh*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Sqrt(System.Single)
      commentId: M:Chroma.Mathf.Sqrt(System.Single)
      language: CSharp
      name:
        CSharp: Sqrt(Single)
        VB: Sqrt(Single)
      nameWithType:
        CSharp: Mathf.Sqrt(Single)
        VB: Mathf.Sqrt(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Sqrt(System.Single)
        VB: Chroma.Mathf.Sqrt(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Sqrt
        path: ''
        startLine: 2036
      syntax:
        content:
          CSharp: public static float Sqrt(float val)
          VB: Public Shared Function Sqrt(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Sqrt*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Square(System.Single)
      commentId: M:Chroma.Mathf.Square(System.Single)
      language: CSharp
      name:
        CSharp: Square(Single)
        VB: Square(Single)
      nameWithType:
        CSharp: Mathf.Square(Single)
        VB: Mathf.Square(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Square(System.Single)
        VB: Chroma.Mathf.Square(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Square
        path: ''
        startLine: 2041
      syntax:
        content:
          CSharp: public static float Square(float val)
          VB: Public Shared Function Square(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Square*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Tan(System.Single)
      commentId: M:Chroma.Mathf.Tan(System.Single)
      language: CSharp
      name:
        CSharp: Tan(Single)
        VB: Tan(Single)
      nameWithType:
        CSharp: Mathf.Tan(Single)
        VB: Mathf.Tan(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Tan(System.Single)
        VB: Chroma.Mathf.Tan(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Tan
        path: ''
        startLine: 2046
      syntax:
        content:
          CSharp: public static float Tan(float val)
          VB: Public Shared Function Tan(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Tan*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Tanh(System.Single)
      commentId: M:Chroma.Mathf.Tanh(System.Single)
      language: CSharp
      name:
        CSharp: Tanh(Single)
        VB: Tanh(Single)
      nameWithType:
        CSharp: Mathf.Tanh(Single)
        VB: Mathf.Tanh(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Tanh(System.Single)
        VB: Chroma.Mathf.Tanh(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Tanh
        path: ''
        startLine: 2051
      syntax:
        content:
          CSharp: public static float Tanh(float val)
          VB: Public Shared Function Tanh(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Tanh*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.Truncate(System.Single)
      commentId: M:Chroma.Mathf.Truncate(System.Single)
      language: CSharp
      name:
        CSharp: Truncate(Single)
        VB: Truncate(Single)
      nameWithType:
        CSharp: Mathf.Truncate(Single)
        VB: Mathf.Truncate(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.Truncate(System.Single)
        VB: Chroma.Mathf.Truncate(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Truncate
        path: ''
        startLine: 2056
      syntax:
        content:
          CSharp: public static float Truncate(float val)
          VB: Public Shared Function Truncate(val As Single) As Single
        parameters:
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.Truncate*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.RadiansToDegrees(System.Single)
      commentId: M:Chroma.Mathf.RadiansToDegrees(System.Single)
      language: CSharp
      name:
        CSharp: RadiansToDegrees(Single)
        VB: RadiansToDegrees(Single)
      nameWithType:
        CSharp: Mathf.RadiansToDegrees(Single)
        VB: Mathf.RadiansToDegrees(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.RadiansToDegrees(System.Single)
        VB: Chroma.Mathf.RadiansToDegrees(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: RadiansToDegrees
        path: ''
        startLine: 2062
      syntax:
        content:
          CSharp: public static float RadiansToDegrees(float radians)
          VB: Public Shared Function RadiansToDegrees(radians As Single) As Single
        parameters:
        - id: radians
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.RadiansToDegrees*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Mathf.DegreesToRadians(System.Single)
      commentId: M:Chroma.Mathf.DegreesToRadians(System.Single)
      language: CSharp
      name:
        CSharp: DegreesToRadians(Single)
        VB: DegreesToRadians(Single)
      nameWithType:
        CSharp: Mathf.DegreesToRadians(Single)
        VB: Mathf.DegreesToRadians(Single)
      qualifiedName:
        CSharp: Chroma.Mathf.DegreesToRadians(System.Single)
        VB: Chroma.Mathf.DegreesToRadians(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: DegreesToRadians
        path: ''
        startLine: 2067
      syntax:
        content:
          CSharp: public static float DegreesToRadians(float degrees)
          VB: Public Shared Function DegreesToRadians(degrees As Single) As Single
        parameters:
        - id: degrees
          type: System.Single
        return:
          type: System.Single
      overload: Chroma.Mathf.DegreesToRadians*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Chroma.Vector2
    commentId: T:Chroma.Vector2
    language: CSharp
    name:
      CSharp: Vector2
      VB: Vector2
    nameWithType:
      CSharp: Vector2
      VB: Vector2
    qualifiedName:
      CSharp: Chroma.Vector2
      VB: Chroma.Vector2
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Vector2
      path: ''
      startLine: 2083
    summary: "\n2-Component Vector Structure.\n"
    example: []
    syntax:
      content:
        CSharp: 'public struct Vector2 : IEquatable<Vector2>'
        VB: >-
          Public Structure Vector2

              Implements IEquatable(Of Vector2)
    implements:
    - System.IEquatable{Chroma.Vector2}
    inheritedMembers:
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Chroma.Vector2.X
      commentId: F:Chroma.Vector2.X
      language: CSharp
      name:
        CSharp: X
        VB: X
      nameWithType:
        CSharp: Vector2.X
        VB: Vector2.X
      qualifiedName:
        CSharp: Chroma.Vector2.X
        VB: Chroma.Vector2.X
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: X
        path: ''
        startLine: 2089
      summary: "\nX component of the vector.\n"
      example: []
      syntax:
        content:
          CSharp: public float X
          VB: Public X As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector2.Y
      commentId: F:Chroma.Vector2.Y
      language: CSharp
      name:
        CSharp: Y
        VB: Y
      nameWithType:
        CSharp: Vector2.Y
        VB: Vector2.Y
      qualifiedName:
        CSharp: Chroma.Vector2.Y
        VB: Chroma.Vector2.Y
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Y
        path: ''
        startLine: 2093
      summary: "\nY component of the vector.\n"
      example: []
      syntax:
        content:
          CSharp: public float Y
          VB: Public Y As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector2.Zero
      commentId: F:Chroma.Vector2.Zero
      language: CSharp
      name:
        CSharp: Zero
        VB: Zero
      nameWithType:
        CSharp: Vector2.Zero
        VB: Vector2.Zero
      qualifiedName:
        CSharp: Chroma.Vector2.Zero
        VB: Chroma.Vector2.Zero
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Zero
        path: ''
        startLine: 2096
      syntax:
        content:
          CSharp: public static Vector2 Zero
          VB: Public Shared Zero As Vector2
        return:
          type: Chroma.Vector2
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.One
      commentId: F:Chroma.Vector2.One
      language: CSharp
      name:
        CSharp: One
        VB: One
      nameWithType:
        CSharp: Vector2.One
        VB: Vector2.One
      qualifiedName:
        CSharp: Chroma.Vector2.One
        VB: Chroma.Vector2.One
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: One
        path: ''
        startLine: 2097
      syntax:
        content:
          CSharp: public static Vector2 One
          VB: Public Shared One As Vector2
        return:
          type: Chroma.Vector2
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.Up
      commentId: F:Chroma.Vector2.Up
      language: CSharp
      name:
        CSharp: Up
        VB: Up
      nameWithType:
        CSharp: Vector2.Up
        VB: Vector2.Up
      qualifiedName:
        CSharp: Chroma.Vector2.Up
        VB: Chroma.Vector2.Up
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Up
        path: ''
        startLine: 2098
      syntax:
        content:
          CSharp: public static Vector2 Up
          VB: Public Shared Up As Vector2
        return:
          type: Chroma.Vector2
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.Down
      commentId: F:Chroma.Vector2.Down
      language: CSharp
      name:
        CSharp: Down
        VB: Down
      nameWithType:
        CSharp: Vector2.Down
        VB: Vector2.Down
      qualifiedName:
        CSharp: Chroma.Vector2.Down
        VB: Chroma.Vector2.Down
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Down
        path: ''
        startLine: 2099
      syntax:
        content:
          CSharp: public static Vector2 Down
          VB: Public Shared Down As Vector2
        return:
          type: Chroma.Vector2
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.Left
      commentId: F:Chroma.Vector2.Left
      language: CSharp
      name:
        CSharp: Left
        VB: Left
      nameWithType:
        CSharp: Vector2.Left
        VB: Vector2.Left
      qualifiedName:
        CSharp: Chroma.Vector2.Left
        VB: Chroma.Vector2.Left
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Left
        path: ''
        startLine: 2100
      syntax:
        content:
          CSharp: public static Vector2 Left
          VB: Public Shared Left As Vector2
        return:
          type: Chroma.Vector2
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.Right
      commentId: F:Chroma.Vector2.Right
      language: CSharp
      name:
        CSharp: Right
        VB: Right
      nameWithType:
        CSharp: Vector2.Right
        VB: Vector2.Right
      qualifiedName:
        CSharp: Chroma.Vector2.Right
        VB: Chroma.Vector2.Right
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Right
        path: ''
        startLine: 2101
      syntax:
        content:
          CSharp: public static Vector2 Right
          VB: Public Shared Right As Vector2
        return:
          type: Chroma.Vector2
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.#ctor(System.Single,System.Single)
      commentId: M:Chroma.Vector2.#ctor(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Vector2(Single, Single)
        VB: Vector2(Single, Single)
      nameWithType:
        CSharp: Vector2.Vector2(Single, Single)
        VB: Vector2.Vector2(Single, Single)
      qualifiedName:
        CSharp: Chroma.Vector2.Vector2(System.Single, System.Single)
        VB: Chroma.Vector2.Vector2(System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 2108
      summary: "\nConstructs a new vector with intial values.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2(float x, float y)
          VB: Public Sub New(x As Single, y As Single)
        parameters:
        - id: x
          type: System.Single
          description: ''
        - id: y
          type: System.Single
          description: ''
      overload: Chroma.Vector2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector2.#ctor(System.Single)
      commentId: M:Chroma.Vector2.#ctor(System.Single)
      language: CSharp
      name:
        CSharp: Vector2(Single)
        VB: Vector2(Single)
      nameWithType:
        CSharp: Vector2.Vector2(Single)
        VB: Vector2.Vector2(Single)
      qualifiedName:
        CSharp: Chroma.Vector2.Vector2(System.Single)
        VB: Chroma.Vector2.Vector2(System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 2118
      summary: "\nConstructs a new vector with an initial scalar (sets x and y to scalar).\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2(float scalar)
          VB: Public Sub New(scalar As Single)
        parameters:
        - id: scalar
          type: System.Single
          description: ''
      overload: Chroma.Vector2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector2.Clamp(Chroma.Vector2,Chroma.Vector2)
      commentId: M:Chroma.Vector2.Clamp(Chroma.Vector2,Chroma.Vector2)
      language: CSharp
      name:
        CSharp: Clamp(Vector2, Vector2)
        VB: Clamp(Vector2, Vector2)
      nameWithType:
        CSharp: Vector2.Clamp(Vector2, Vector2)
        VB: Vector2.Clamp(Vector2, Vector2)
      qualifiedName:
        CSharp: Chroma.Vector2.Clamp(Chroma.Vector2, Chroma.Vector2)
        VB: Chroma.Vector2.Clamp(Chroma.Vector2, Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Clamp
        path: ''
        startLine: 2128
      summary: "\nClamps the this vector between two vectors. The function performes a component-wise clamp, meaning clamping each component is done independently.\n"
      example: []
      syntax:
        content:
          CSharp: public void Clamp(Vector2 min, Vector2 max)
          VB: Public Sub Clamp(min As Vector2, max As Vector2)
        parameters:
        - id: min
          type: Chroma.Vector2
          description: ''
        - id: max
          type: Chroma.Vector2
          description: ''
      overload: Chroma.Vector2.Clamp*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector2.Length
      commentId: M:Chroma.Vector2.Length
      language: CSharp
      name:
        CSharp: Length()
        VB: Length()
      nameWithType:
        CSharp: Vector2.Length()
        VB: Vector2.Length()
      qualifiedName:
        CSharp: Chroma.Vector2.Length()
        VB: Chroma.Vector2.Length()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Length
        path: ''
        startLine: 2138
      summary: "\nCalculates the length of the vector.\n"
      example: []
      syntax:
        content:
          CSharp: public float Length()
          VB: Public Function Length As Single
        return:
          type: System.Single
          description: ''
      overload: Chroma.Vector2.Length*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector2.Normalized
      commentId: M:Chroma.Vector2.Normalized
      language: CSharp
      name:
        CSharp: Normalized()
        VB: Normalized()
      nameWithType:
        CSharp: Vector2.Normalized()
        VB: Vector2.Normalized()
      qualifiedName:
        CSharp: Chroma.Vector2.Normalized()
        VB: Chroma.Vector2.Normalized()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Normalized
        path: ''
        startLine: 2149
      summary: "\nReturns a normalized version of this vector. \nNote: This does not normalize this vector, but rather returns a copy which is normalized.\nSee <code>Normalize</code> to normalize this vector.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 Normalized()
          VB: Public Function Normalized As Vector2
        return:
          type: Chroma.Vector2
          description: ''
      overload: Chroma.Vector2.Normalized*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector2.Normalize
      commentId: M:Chroma.Vector2.Normalize
      language: CSharp
      name:
        CSharp: Normalize()
        VB: Normalize()
      nameWithType:
        CSharp: Vector2.Normalize()
        VB: Vector2.Normalize()
      qualifiedName:
        CSharp: Chroma.Vector2.Normalize()
        VB: Chroma.Vector2.Normalize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Normalize
        path: ''
        startLine: 2167
      summary: "\nNormalizes this vector.\n"
      example: []
      syntax:
        content:
          CSharp: public void Normalize()
          VB: Public Sub Normalize
      overload: Chroma.Vector2.Normalize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector2.Distance(Chroma.Vector2)
      commentId: M:Chroma.Vector2.Distance(Chroma.Vector2)
      language: CSharp
      name:
        CSharp: Distance(Vector2)
        VB: Distance(Vector2)
      nameWithType:
        CSharp: Vector2.Distance(Vector2)
        VB: Vector2.Distance(Vector2)
      qualifiedName:
        CSharp: Chroma.Vector2.Distance(Chroma.Vector2)
        VB: Chroma.Vector2.Distance(Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Distance
        path: ''
        startLine: 2182
      summary: "\nCalculates the distance between this and another vector.\n"
      example: []
      syntax:
        content:
          CSharp: public float Distance(Vector2 other)
          VB: Public Function Distance(other As Vector2) As Single
        parameters:
        - id: other
          type: Chroma.Vector2
          description: Other vector to calculate distance.
        return:
          type: System.Single
          description: Distance between this and other.
      overload: Chroma.Vector2.Distance*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector2.Distance(Chroma.Vector2,Chroma.Vector2)
      commentId: M:Chroma.Vector2.Distance(Chroma.Vector2,Chroma.Vector2)
      language: CSharp
      name:
        CSharp: Distance(Vector2, Vector2)
        VB: Distance(Vector2, Vector2)
      nameWithType:
        CSharp: Vector2.Distance(Vector2, Vector2)
        VB: Vector2.Distance(Vector2, Vector2)
      qualifiedName:
        CSharp: Chroma.Vector2.Distance(Chroma.Vector2, Chroma.Vector2)
        VB: Chroma.Vector2.Distance(Chroma.Vector2, Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Distance
        path: ''
        startLine: 2193
      summary: "\nCalculates the distance between two vectors.\n"
      example: []
      syntax:
        content:
          CSharp: public static float Distance(Vector2 first, Vector2 second)
          VB: Public Shared Function Distance(first As Vector2, second As Vector2) As Single
        parameters:
        - id: first
          type: Chroma.Vector2
          description: ''
        - id: second
          type: Chroma.Vector2
          description: ''
        return:
          type: System.Single
          description: Distance between the two vectors.
      overload: Chroma.Vector2.Distance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.Lerp(Chroma.Vector2,Chroma.Vector2,System.Single)
      commentId: M:Chroma.Vector2.Lerp(Chroma.Vector2,Chroma.Vector2,System.Single)
      language: CSharp
      name:
        CSharp: Lerp(Vector2, Vector2, Single)
        VB: Lerp(Vector2, Vector2, Single)
      nameWithType:
        CSharp: Vector2.Lerp(Vector2, Vector2, Single)
        VB: Vector2.Lerp(Vector2, Vector2, Single)
      qualifiedName:
        CSharp: Chroma.Vector2.Lerp(Chroma.Vector2, Chroma.Vector2, System.Single)
        VB: Chroma.Vector2.Lerp(Chroma.Vector2, Chroma.Vector2, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Lerp
        path: ''
        startLine: 2208
      summary: "\nLinear interpolation between two vectors.\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 Lerp(Vector2 from, Vector2 to, float delta)
          VB: Public Shared Function Lerp(from As Vector2, to As Vector2, delta As Single) As Vector2
        parameters:
        - id: from
          type: Chroma.Vector2
          description: Starting vector
        - id: to
          type: Chroma.Vector2
          description: Ending vector
        - id: delta
          type: System.Single
          description: Delta time
        return:
          type: Chroma.Vector2
          description: ''
      overload: Chroma.Vector2.Lerp*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.Angle(Chroma.Vector2,Chroma.Vector2)
      commentId: M:Chroma.Vector2.Angle(Chroma.Vector2,Chroma.Vector2)
      language: CSharp
      name:
        CSharp: Angle(Vector2, Vector2)
        VB: Angle(Vector2, Vector2)
      nameWithType:
        CSharp: Vector2.Angle(Vector2, Vector2)
        VB: Vector2.Angle(Vector2, Vector2)
      qualifiedName:
        CSharp: Chroma.Vector2.Angle(Chroma.Vector2, Chroma.Vector2)
        VB: Chroma.Vector2.Angle(Chroma.Vector2, Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Angle
        path: ''
        startLine: 2223
      summary: "\nCalculates the angle between two vectors.\n"
      example: []
      syntax:
        content:
          CSharp: public static float Angle(Vector2 a, Vector2 b)
          VB: Public Shared Function Angle(a As Vector2, b As Vector2) As Single
        parameters:
        - id: a
          type: Chroma.Vector2
          description: ''
        - id: b
          type: Chroma.Vector2
          description: ''
        return:
          type: System.Single
          description: ''
      overload: Chroma.Vector2.Angle*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.Dot(Chroma.Vector2,Chroma.Vector2)
      commentId: M:Chroma.Vector2.Dot(Chroma.Vector2,Chroma.Vector2)
      language: CSharp
      name:
        CSharp: Dot(Vector2, Vector2)
        VB: Dot(Vector2, Vector2)
      nameWithType:
        CSharp: Vector2.Dot(Vector2, Vector2)
        VB: Vector2.Dot(Vector2, Vector2)
      qualifiedName:
        CSharp: Chroma.Vector2.Dot(Chroma.Vector2, Chroma.Vector2)
        VB: Chroma.Vector2.Dot(Chroma.Vector2, Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Dot
        path: ''
        startLine: 2235
      summary: "\nCalculates the dot product between two vectors.\n"
      example: []
      syntax:
        content:
          CSharp: public static float Dot(Vector2 a, Vector2 b)
          VB: Public Shared Function Dot(a As Vector2, b As Vector2) As Single
        parameters:
        - id: a
          type: Chroma.Vector2
          description: ''
        - id: b
          type: Chroma.Vector2
          description: ''
        return:
          type: System.Single
          description: ''
      overload: Chroma.Vector2.Dot*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.op_Multiply(Chroma.Vector2,System.Single)
      commentId: M:Chroma.Vector2.op_Multiply(Chroma.Vector2,System.Single)
      language: CSharp
      name:
        CSharp: Multiply(Vector2, Single)
        VB: Multiply(Vector2, Single)
      nameWithType:
        CSharp: Vector2.Multiply(Vector2, Single)
        VB: Vector2.Multiply(Vector2, Single)
      qualifiedName:
        CSharp: Chroma.Vector2.Multiply(Chroma.Vector2, System.Single)
        VB: Chroma.Vector2.Multiply(Chroma.Vector2, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Multiply
        path: ''
        startLine: 2247
      summary: "\nMultiplication by scalar.\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 operator *(Vector2 left, float scalar)
          VB: Public Shared Operator *(left As Vector2, scalar As Single) As Vector2
        parameters:
        - id: left
          type: Chroma.Vector2
          description: ''
        - id: scalar
          type: System.Single
          description: ''
        return:
          type: Chroma.Vector2
          description: ''
      overload: Chroma.Vector2.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.op_Multiply(System.Single,Chroma.Vector2)
      commentId: M:Chroma.Vector2.op_Multiply(System.Single,Chroma.Vector2)
      language: CSharp
      name:
        CSharp: Multiply(Single, Vector2)
        VB: Multiply(Single, Vector2)
      nameWithType:
        CSharp: Vector2.Multiply(Single, Vector2)
        VB: Vector2.Multiply(Single, Vector2)
      qualifiedName:
        CSharp: Chroma.Vector2.Multiply(System.Single, Chroma.Vector2)
        VB: Chroma.Vector2.Multiply(System.Single, Chroma.Vector2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Multiply
        path: ''
        startLine: 2258
      summary: "\nMultipication by scalar.\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 operator *(float scalar, Vector2 right)
          VB: Public Shared Operator *(scalar As Single, right As Vector2) As Vector2
        parameters:
        - id: scalar
          type: System.Single
          description: ''
        - id: right
          type: Chroma.Vector2
          description: ''
        return:
          type: Chroma.Vector2
          description: ''
      overload: Chroma.Vector2.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.op_Multiply(Chroma.Vector2,Chroma.Vector2)
      commentId: M:Chroma.Vector2.op_Multiply(Chroma.Vector2,Chroma.Vector2)
      language: CSharp
      name:
        CSharp: Multiply(Vector2, Vector2)
        VB: Multiply(Vector2, Vector2)
      nameWithType:
        CSharp: Vector2.Multiply(Vector2, Vector2)
        VB: Vector2.Multiply(Vector2, Vector2)
      qualifiedName:
        CSharp: Chroma.Vector2.Multiply(Chroma.Vector2, Chroma.Vector2)
        VB: Chroma.Vector2.Multiply(Chroma.Vector2, Chroma.Vector2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Multiply
        path: ''
        startLine: 2269
      summary: "\nMultipication of two vectors.\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 operator *(Vector2 left, Vector2 right)
          VB: Public Shared Operator *(left As Vector2, right As Vector2) As Vector2
        parameters:
        - id: left
          type: Chroma.Vector2
          description: ''
        - id: right
          type: Chroma.Vector2
          description: ''
        return:
          type: Chroma.Vector2
          description: ''
      overload: Chroma.Vector2.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.op_Addition(Chroma.Vector2,Chroma.Vector2)
      commentId: M:Chroma.Vector2.op_Addition(Chroma.Vector2,Chroma.Vector2)
      language: CSharp
      name:
        CSharp: Addition(Vector2, Vector2)
        VB: Addition(Vector2, Vector2)
      nameWithType:
        CSharp: Vector2.Addition(Vector2, Vector2)
        VB: Vector2.Addition(Vector2, Vector2)
      qualifiedName:
        CSharp: Chroma.Vector2.Addition(Chroma.Vector2, Chroma.Vector2)
        VB: Chroma.Vector2.Addition(Chroma.Vector2, Chroma.Vector2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Addition
        path: ''
        startLine: 2280
      summary: "\nAddition of two vectors.\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 operator +(Vector2 left, Vector2 right)
          VB: Public Shared Operator +(left As Vector2, right As Vector2) As Vector2
        parameters:
        - id: left
          type: Chroma.Vector2
          description: ''
        - id: right
          type: Chroma.Vector2
          description: ''
        return:
          type: Chroma.Vector2
          description: ''
      overload: Chroma.Vector2.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.op_Addition(Chroma.Vector2,System.Single)
      commentId: M:Chroma.Vector2.op_Addition(Chroma.Vector2,System.Single)
      language: CSharp
      name:
        CSharp: Addition(Vector2, Single)
        VB: Addition(Vector2, Single)
      nameWithType:
        CSharp: Vector2.Addition(Vector2, Single)
        VB: Vector2.Addition(Vector2, Single)
      qualifiedName:
        CSharp: Chroma.Vector2.Addition(Chroma.Vector2, System.Single)
        VB: Chroma.Vector2.Addition(Chroma.Vector2, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Addition
        path: ''
        startLine: 2291
      summary: "\nComponent-wise addition of a value to a vector.\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 operator +(Vector2 left, float right)
          VB: Public Shared Operator +(left As Vector2, right As Single) As Vector2
        parameters:
        - id: left
          type: Chroma.Vector2
          description: ''
        - id: right
          type: System.Single
          description: ''
        return:
          type: Chroma.Vector2
          description: ''
      overload: Chroma.Vector2.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.op_Subtraction(Chroma.Vector2,Chroma.Vector2)
      commentId: M:Chroma.Vector2.op_Subtraction(Chroma.Vector2,Chroma.Vector2)
      language: CSharp
      name:
        CSharp: Subtraction(Vector2, Vector2)
        VB: Subtraction(Vector2, Vector2)
      nameWithType:
        CSharp: Vector2.Subtraction(Vector2, Vector2)
        VB: Vector2.Subtraction(Vector2, Vector2)
      qualifiedName:
        CSharp: Chroma.Vector2.Subtraction(Chroma.Vector2, Chroma.Vector2)
        VB: Chroma.Vector2.Subtraction(Chroma.Vector2, Chroma.Vector2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Subtraction
        path: ''
        startLine: 2302
      summary: "\nSubtraction of two vectors.\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 operator -(Vector2 left, Vector2 right)
          VB: Public Shared Operator -(left As Vector2, right As Vector2) As Vector2
        parameters:
        - id: left
          type: Chroma.Vector2
          description: ''
        - id: right
          type: Chroma.Vector2
          description: ''
        return:
          type: Chroma.Vector2
          description: ''
      overload: Chroma.Vector2.op_Subtraction*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.op_Division(Chroma.Vector2,Chroma.Vector2)
      commentId: M:Chroma.Vector2.op_Division(Chroma.Vector2,Chroma.Vector2)
      language: CSharp
      name:
        CSharp: Division(Vector2, Vector2)
        VB: Division(Vector2, Vector2)
      nameWithType:
        CSharp: Vector2.Division(Vector2, Vector2)
        VB: Vector2.Division(Vector2, Vector2)
      qualifiedName:
        CSharp: Chroma.Vector2.Division(Chroma.Vector2, Chroma.Vector2)
        VB: Chroma.Vector2.Division(Chroma.Vector2, Chroma.Vector2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Division
        path: ''
        startLine: 2313
      summary: "\nDivision of two vectors.\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 operator /(Vector2 left, Vector2 right)
          VB: Public Shared Operator /(left As Vector2, right As Vector2) As Vector2
        parameters:
        - id: left
          type: Chroma.Vector2
          description: ''
        - id: right
          type: Chroma.Vector2
          description: ''
        return:
          type: Chroma.Vector2
          description: ''
      overload: Chroma.Vector2.op_Division*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.op_Division(Chroma.Vector2,System.Single)
      commentId: M:Chroma.Vector2.op_Division(Chroma.Vector2,System.Single)
      language: CSharp
      name:
        CSharp: Division(Vector2, Single)
        VB: Division(Vector2, Single)
      nameWithType:
        CSharp: Vector2.Division(Vector2, Single)
        VB: Vector2.Division(Vector2, Single)
      qualifiedName:
        CSharp: Chroma.Vector2.Division(Chroma.Vector2, System.Single)
        VB: Chroma.Vector2.Division(Chroma.Vector2, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Division
        path: ''
        startLine: 2324
      summary: "\nDivision of a vector by a scalar.\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 operator /(Vector2 left, float scalar)
          VB: Public Shared Operator /(left As Vector2, scalar As Single) As Vector2
        parameters:
        - id: left
          type: Chroma.Vector2
          description: ''
        - id: scalar
          type: System.Single
          description: ''
        return:
          type: Chroma.Vector2
          description: ''
      overload: Chroma.Vector2.op_Division*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.op_UnaryNegation(Chroma.Vector2)
      commentId: M:Chroma.Vector2.op_UnaryNegation(Chroma.Vector2)
      language: CSharp
      name:
        CSharp: UnaryNegation(Vector2)
        VB: UnaryNegation(Vector2)
      nameWithType:
        CSharp: Vector2.UnaryNegation(Vector2)
        VB: Vector2.UnaryNegation(Vector2)
      qualifiedName:
        CSharp: Chroma.Vector2.UnaryNegation(Chroma.Vector2)
        VB: Chroma.Vector2.UnaryNegation(Chroma.Vector2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_UnaryNegation
        path: ''
        startLine: 2334
      summary: "\nNegation of a vector.\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 operator -(Vector2 vector)
          VB: Public Shared Operator -(vector As Vector2) As Vector2
        parameters:
        - id: vector
          type: Chroma.Vector2
          description: ''
        return:
          type: Chroma.Vector2
          description: ''
      overload: Chroma.Vector2.op_UnaryNegation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.Equals(System.Object)
      commentId: M:Chroma.Vector2.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: Vector2.Equals(Object)
        VB: Vector2.Equals(Object)
      qualifiedName:
        CSharp: Chroma.Vector2.Equals(System.Object)
        VB: Chroma.Vector2.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Equals
        path: ''
        startLine: 2344
      summary: "\nCalculates equality between two vectors.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
          description: ''
        return:
          type: System.Boolean
          description: ''
      overload: Chroma.Vector2.Equals*
      overridden: System.ValueType.Equals(System.Object)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Chroma.Vector2.Equals(Chroma.Vector2)
      commentId: M:Chroma.Vector2.Equals(Chroma.Vector2)
      language: CSharp
      name:
        CSharp: Equals(Vector2)
        VB: Equals(Vector2)
      nameWithType:
        CSharp: Vector2.Equals(Vector2)
        VB: Vector2.Equals(Vector2)
      qualifiedName:
        CSharp: Chroma.Vector2.Equals(Chroma.Vector2)
        VB: Chroma.Vector2.Equals(Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Equals
        path: ''
        startLine: 2351
      summary: "\nCalculates equality between two vectors.\n"
      example: []
      syntax:
        content:
          CSharp: public bool Equals(Vector2 right)
          VB: Public Function Equals(right As Vector2) As Boolean
        parameters:
        - id: right
          type: Chroma.Vector2
          description: ''
        return:
          type: System.Boolean
          description: ''
      overload: Chroma.Vector2.Equals*
      implements:
      - System.IEquatable{Chroma.Vector2}.Equals(Chroma.Vector2)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector2.op_Equality(Chroma.Vector2,Chroma.Vector2)
      commentId: M:Chroma.Vector2.op_Equality(Chroma.Vector2,Chroma.Vector2)
      language: CSharp
      name:
        CSharp: Equality(Vector2, Vector2)
        VB: Equality(Vector2, Vector2)
      nameWithType:
        CSharp: Vector2.Equality(Vector2, Vector2)
        VB: Vector2.Equality(Vector2, Vector2)
      qualifiedName:
        CSharp: Chroma.Vector2.Equality(Chroma.Vector2, Chroma.Vector2)
        VB: Chroma.Vector2.Equality(Chroma.Vector2, Chroma.Vector2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Equality
        path: ''
        startLine: 2359
      summary: "\nCalculates equality between two vectors.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool operator ==(Vector2 left, Vector2 right)
          VB: Public Shared Operator =(left As Vector2, right As Vector2) As Boolean
        parameters:
        - id: left
          type: Chroma.Vector2
          description: ''
        - id: right
          type: Chroma.Vector2
          description: ''
        return:
          type: System.Boolean
          description: ''
      overload: Chroma.Vector2.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.op_Inequality(Chroma.Vector2,Chroma.Vector2)
      commentId: M:Chroma.Vector2.op_Inequality(Chroma.Vector2,Chroma.Vector2)
      language: CSharp
      name:
        CSharp: Inequality(Vector2, Vector2)
        VB: Inequality(Vector2, Vector2)
      nameWithType:
        CSharp: Vector2.Inequality(Vector2, Vector2)
        VB: Vector2.Inequality(Vector2, Vector2)
      qualifiedName:
        CSharp: Chroma.Vector2.Inequality(Chroma.Vector2, Chroma.Vector2)
        VB: Chroma.Vector2.Inequality(Chroma.Vector2, Chroma.Vector2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Inequality
        path: ''
        startLine: 2367
      summary: "\nCalculates non-equality between two vectors.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool operator !=(Vector2 left, Vector2 right)
          VB: Public Shared Operator <>(left As Vector2, right As Vector2) As Boolean
        parameters:
        - id: left
          type: Chroma.Vector2
          description: ''
        - id: right
          type: Chroma.Vector2
          description: ''
        return:
          type: System.Boolean
          description: ''
      overload: Chroma.Vector2.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.Cos(Chroma.Vector2)
      commentId: M:Chroma.Vector2.Cos(Chroma.Vector2)
      language: CSharp
      name:
        CSharp: Cos(Vector2)
        VB: Cos(Vector2)
      nameWithType:
        CSharp: Vector2.Cos(Vector2)
        VB: Vector2.Cos(Vector2)
      qualifiedName:
        CSharp: Chroma.Vector2.Cos(Chroma.Vector2)
        VB: Chroma.Vector2.Cos(Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Cos
        path: ''
        startLine: 2374
      summary: "\nComputes the cosine of a vector, component-wise.\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 Cos(Vector2 vector)
          VB: Public Shared Function Cos(vector As Vector2) As Vector2
        parameters:
        - id: vector
          type: Chroma.Vector2
          description: ''
        return:
          type: Chroma.Vector2
          description: ''
      overload: Chroma.Vector2.Cos*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.Sin(Chroma.Vector2)
      commentId: M:Chroma.Vector2.Sin(Chroma.Vector2)
      language: CSharp
      name:
        CSharp: Sin(Vector2)
        VB: Sin(Vector2)
      nameWithType:
        CSharp: Vector2.Sin(Vector2)
        VB: Vector2.Sin(Vector2)
      qualifiedName:
        CSharp: Chroma.Vector2.Sin(Chroma.Vector2)
        VB: Chroma.Vector2.Sin(Chroma.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Sin
        path: ''
        startLine: 2384
      summary: "\nComputes the sine of a vector, component-wise.\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 Sin(Vector2 vector)
          VB: Public Shared Function Sin(vector As Vector2) As Vector2
        parameters:
        - id: vector
          type: Chroma.Vector2
          description: ''
        return:
          type: Chroma.Vector2
          description: ''
      overload: Chroma.Vector2.Sin*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector2.ToString
      commentId: M:Chroma.Vector2.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: Vector2.ToString()
        VB: Vector2.ToString()
      qualifiedName:
        CSharp: Chroma.Vector2.ToString()
        VB: Chroma.Vector2.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: ToString
        path: ''
        startLine: 2393
      summary: "\nCreates a formatted string containing the components of the vector.\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: ''
      overload: Chroma.Vector2.ToString*
      overridden: System.ValueType.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Chroma.Vector2.GetHashCode
      commentId: M:Chroma.Vector2.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: Vector2.GetHashCode()
        VB: Vector2.GetHashCode()
      qualifiedName:
        CSharp: Chroma.Vector2.GetHashCode()
        VB: Chroma.Vector2.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetHashCode
        path: ''
        startLine: 2402
      summary: "\nComputes the hash code of the vector.\n"
      example: []
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
          description: ''
      overload: Chroma.Vector2.GetHashCode*
      overridden: System.ValueType.GetHashCode
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Chroma.Vector3
    commentId: T:Chroma.Vector3
    language: CSharp
    name:
      CSharp: Vector3
      VB: Vector3
    nameWithType:
      CSharp: Vector3
      VB: Vector3
    qualifiedName:
      CSharp: Chroma.Vector3
      VB: Chroma.Vector3
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Vector3
      path: ''
      startLine: 2417
    syntax:
      content:
        CSharp: 'public struct Vector3 : IEquatable<Vector3>'
        VB: >-
          Public Structure Vector3

              Implements IEquatable(Of Vector3)
    implements:
    - System.IEquatable{Chroma.Vector3}
    inheritedMembers:
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Chroma.Vector3.X
      commentId: F:Chroma.Vector3.X
      language: CSharp
      name:
        CSharp: X
        VB: X
      nameWithType:
        CSharp: Vector3.X
        VB: Vector3.X
      qualifiedName:
        CSharp: Chroma.Vector3.X
        VB: Chroma.Vector3.X
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: X
        path: ''
        startLine: 2420
      syntax:
        content:
          CSharp: public float X
          VB: Public X As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector3.Y
      commentId: F:Chroma.Vector3.Y
      language: CSharp
      name:
        CSharp: Y
        VB: Y
      nameWithType:
        CSharp: Vector3.Y
        VB: Vector3.Y
      qualifiedName:
        CSharp: Chroma.Vector3.Y
        VB: Chroma.Vector3.Y
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Y
        path: ''
        startLine: 2421
      syntax:
        content:
          CSharp: public float Y
          VB: Public Y As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector3.Z
      commentId: F:Chroma.Vector3.Z
      language: CSharp
      name:
        CSharp: Z
        VB: Z
      nameWithType:
        CSharp: Vector3.Z
        VB: Vector3.Z
      qualifiedName:
        CSharp: Chroma.Vector3.Z
        VB: Chroma.Vector3.Z
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Z
        path: ''
        startLine: 2422
      syntax:
        content:
          CSharp: public float Z
          VB: Public Z As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector3.Zero
      commentId: F:Chroma.Vector3.Zero
      language: CSharp
      name:
        CSharp: Zero
        VB: Zero
      nameWithType:
        CSharp: Vector3.Zero
        VB: Vector3.Zero
      qualifiedName:
        CSharp: Chroma.Vector3.Zero
        VB: Chroma.Vector3.Zero
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Zero
        path: ''
        startLine: 2424
      syntax:
        content:
          CSharp: public static Vector3 Zero
          VB: Public Shared Zero As Vector3
        return:
          type: Chroma.Vector3
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.One
      commentId: F:Chroma.Vector3.One
      language: CSharp
      name:
        CSharp: One
        VB: One
      nameWithType:
        CSharp: Vector3.One
        VB: Vector3.One
      qualifiedName:
        CSharp: Chroma.Vector3.One
        VB: Chroma.Vector3.One
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: One
        path: ''
        startLine: 2425
      syntax:
        content:
          CSharp: public static Vector3 One
          VB: Public Shared One As Vector3
        return:
          type: Chroma.Vector3
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.Forward
      commentId: F:Chroma.Vector3.Forward
      language: CSharp
      name:
        CSharp: Forward
        VB: Forward
      nameWithType:
        CSharp: Vector3.Forward
        VB: Vector3.Forward
      qualifiedName:
        CSharp: Chroma.Vector3.Forward
        VB: Chroma.Vector3.Forward
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Forward
        path: ''
        startLine: 2426
      syntax:
        content:
          CSharp: public static Vector3 Forward
          VB: Public Shared Forward As Vector3
        return:
          type: Chroma.Vector3
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.Right
      commentId: F:Chroma.Vector3.Right
      language: CSharp
      name:
        CSharp: Right
        VB: Right
      nameWithType:
        CSharp: Vector3.Right
        VB: Vector3.Right
      qualifiedName:
        CSharp: Chroma.Vector3.Right
        VB: Chroma.Vector3.Right
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Right
        path: ''
        startLine: 2427
      syntax:
        content:
          CSharp: public static Vector3 Right
          VB: Public Shared Right As Vector3
        return:
          type: Chroma.Vector3
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.Up
      commentId: F:Chroma.Vector3.Up
      language: CSharp
      name:
        CSharp: Up
        VB: Up
      nameWithType:
        CSharp: Vector3.Up
        VB: Vector3.Up
      qualifiedName:
        CSharp: Chroma.Vector3.Up
        VB: Chroma.Vector3.Up
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Up
        path: ''
        startLine: 2428
      syntax:
        content:
          CSharp: public static Vector3 Up
          VB: Public Shared Up As Vector3
        return:
          type: Chroma.Vector3
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.Down
      commentId: F:Chroma.Vector3.Down
      language: CSharp
      name:
        CSharp: Down
        VB: Down
      nameWithType:
        CSharp: Vector3.Down
        VB: Vector3.Down
      qualifiedName:
        CSharp: Chroma.Vector3.Down
        VB: Chroma.Vector3.Down
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Down
        path: ''
        startLine: 2429
      syntax:
        content:
          CSharp: public static Vector3 Down
          VB: Public Shared Down As Vector3
        return:
          type: Chroma.Vector3
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.#ctor(System.Single,System.Single,System.Single)
      commentId: M:Chroma.Vector3.#ctor(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Vector3(Single, Single, Single)
        VB: Vector3(Single, Single, Single)
      nameWithType:
        CSharp: Vector3.Vector3(Single, Single, Single)
        VB: Vector3.Vector3(Single, Single, Single)
      qualifiedName:
        CSharp: Chroma.Vector3.Vector3(System.Single, System.Single, System.Single)
        VB: Chroma.Vector3.Vector3(System.Single, System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 2432
      syntax:
        content:
          CSharp: public Vector3(float x, float y, float z)
          VB: Public Sub New(x As Single, y As Single, z As Single)
        parameters:
        - id: x
          type: System.Single
        - id: y
          type: System.Single
        - id: z
          type: System.Single
      overload: Chroma.Vector3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector3.#ctor(System.Single)
      commentId: M:Chroma.Vector3.#ctor(System.Single)
      language: CSharp
      name:
        CSharp: Vector3(Single)
        VB: Vector3(Single)
      nameWithType:
        CSharp: Vector3.Vector3(Single)
        VB: Vector3.Vector3(Single)
      qualifiedName:
        CSharp: Chroma.Vector3.Vector3(System.Single)
        VB: Chroma.Vector3.Vector3(System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 2439
      syntax:
        content:
          CSharp: public Vector3(float scalar)
          VB: Public Sub New(scalar As Single)
        parameters:
        - id: scalar
          type: System.Single
      overload: Chroma.Vector3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector3.#ctor(System.Single,System.Single)
      commentId: M:Chroma.Vector3.#ctor(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Vector3(Single, Single)
        VB: Vector3(Single, Single)
      nameWithType:
        CSharp: Vector3.Vector3(Single, Single)
        VB: Vector3.Vector3(Single, Single)
      qualifiedName:
        CSharp: Chroma.Vector3.Vector3(System.Single, System.Single)
        VB: Chroma.Vector3.Vector3(System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 2444
      syntax:
        content:
          CSharp: public Vector3(float x, float y)
          VB: Public Sub New(x As Single, y As Single)
        parameters:
        - id: x
          type: System.Single
        - id: y
          type: System.Single
      overload: Chroma.Vector3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector3.#ctor(Chroma.Vector2)
      commentId: M:Chroma.Vector3.#ctor(Chroma.Vector2)
      language: CSharp
      name:
        CSharp: Vector3(Vector2)
        VB: Vector3(Vector2)
      nameWithType:
        CSharp: Vector3.Vector3(Vector2)
        VB: Vector3.Vector3(Vector2)
      qualifiedName:
        CSharp: Chroma.Vector3.Vector3(Chroma.Vector2)
        VB: Chroma.Vector3.Vector3(Chroma.Vector2)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 2451
      syntax:
        content:
          CSharp: public Vector3(Vector2 xy)
          VB: Public Sub New(xy As Vector2)
        parameters:
        - id: xy
          type: Chroma.Vector2
      overload: Chroma.Vector3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector3.#ctor(Chroma.Vector2,System.Single)
      commentId: M:Chroma.Vector3.#ctor(Chroma.Vector2,System.Single)
      language: CSharp
      name:
        CSharp: Vector3(Vector2, Single)
        VB: Vector3(Vector2, Single)
      nameWithType:
        CSharp: Vector3.Vector3(Vector2, Single)
        VB: Vector3.Vector3(Vector2, Single)
      qualifiedName:
        CSharp: Chroma.Vector3.Vector3(Chroma.Vector2, System.Single)
        VB: Chroma.Vector3.Vector3(Chroma.Vector2, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 2458
      syntax:
        content:
          CSharp: public Vector3(Vector2 xy, float z)
          VB: Public Sub New(xy As Vector2, z As Single)
        parameters:
        - id: xy
          type: Chroma.Vector2
        - id: z
          type: System.Single
      overload: Chroma.Vector3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector3.#ctor(Chroma.Vector4)
      commentId: M:Chroma.Vector3.#ctor(Chroma.Vector4)
      language: CSharp
      name:
        CSharp: Vector3(Vector4)
        VB: Vector3(Vector4)
      nameWithType:
        CSharp: Vector3.Vector3(Vector4)
        VB: Vector3.Vector3(Vector4)
      qualifiedName:
        CSharp: Chroma.Vector3.Vector3(Chroma.Vector4)
        VB: Chroma.Vector3.Vector3(Chroma.Vector4)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 2465
      syntax:
        content:
          CSharp: public Vector3(Vector4 vec)
          VB: Public Sub New(vec As Vector4)
        parameters:
        - id: vec
          type: Chroma.Vector4
      overload: Chroma.Vector3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector3.Clamp(Chroma.Vector3,Chroma.Vector3)
      commentId: M:Chroma.Vector3.Clamp(Chroma.Vector3,Chroma.Vector3)
      language: CSharp
      name:
        CSharp: Clamp(Vector3, Vector3)
        VB: Clamp(Vector3, Vector3)
      nameWithType:
        CSharp: Vector3.Clamp(Vector3, Vector3)
        VB: Vector3.Clamp(Vector3, Vector3)
      qualifiedName:
        CSharp: Chroma.Vector3.Clamp(Chroma.Vector3, Chroma.Vector3)
        VB: Chroma.Vector3.Clamp(Chroma.Vector3, Chroma.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Clamp
        path: ''
        startLine: 2472
      syntax:
        content:
          CSharp: public void Clamp(Vector3 min, Vector3 max)
          VB: Public Sub Clamp(min As Vector3, max As Vector3)
        parameters:
        - id: min
          type: Chroma.Vector3
        - id: max
          type: Chroma.Vector3
      overload: Chroma.Vector3.Clamp*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector3.Length
      commentId: M:Chroma.Vector3.Length
      language: CSharp
      name:
        CSharp: Length()
        VB: Length()
      nameWithType:
        CSharp: Vector3.Length()
        VB: Vector3.Length()
      qualifiedName:
        CSharp: Chroma.Vector3.Length()
        VB: Chroma.Vector3.Length()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Length
        path: ''
        startLine: 2479
      syntax:
        content:
          CSharp: public float Length()
          VB: Public Function Length As Single
        return:
          type: System.Single
      overload: Chroma.Vector3.Length*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector3.Normalized
      commentId: M:Chroma.Vector3.Normalized
      language: CSharp
      name:
        CSharp: Normalized()
        VB: Normalized()
      nameWithType:
        CSharp: Vector3.Normalized()
        VB: Vector3.Normalized()
      qualifiedName:
        CSharp: Chroma.Vector3.Normalized()
        VB: Chroma.Vector3.Normalized()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Normalized
        path: ''
        startLine: 2484
      syntax:
        content:
          CSharp: public Vector3 Normalized()
          VB: Public Function Normalized As Vector3
        return:
          type: Chroma.Vector3
      overload: Chroma.Vector3.Normalized*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector3.Normalize
      commentId: M:Chroma.Vector3.Normalize
      language: CSharp
      name:
        CSharp: Normalize()
        VB: Normalize()
      nameWithType:
        CSharp: Vector3.Normalize()
        VB: Vector3.Normalize()
      qualifiedName:
        CSharp: Chroma.Vector3.Normalize()
        VB: Chroma.Vector3.Normalize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Normalize
        path: ''
        startLine: 2501
      syntax:
        content:
          CSharp: public void Normalize()
          VB: Public Sub Normalize
      overload: Chroma.Vector3.Normalize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector3.Distance(Chroma.Vector3)
      commentId: M:Chroma.Vector3.Distance(Chroma.Vector3)
      language: CSharp
      name:
        CSharp: Distance(Vector3)
        VB: Distance(Vector3)
      nameWithType:
        CSharp: Vector3.Distance(Vector3)
        VB: Vector3.Distance(Vector3)
      qualifiedName:
        CSharp: Chroma.Vector3.Distance(Chroma.Vector3)
        VB: Chroma.Vector3.Distance(Chroma.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Distance
        path: ''
        startLine: 2513
      syntax:
        content:
          CSharp: public float Distance(Vector3 other)
          VB: Public Function Distance(other As Vector3) As Single
        parameters:
        - id: other
          type: Chroma.Vector3
        return:
          type: System.Single
      overload: Chroma.Vector3.Distance*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector3.Distance(Chroma.Vector3,Chroma.Vector3)
      commentId: M:Chroma.Vector3.Distance(Chroma.Vector3,Chroma.Vector3)
      language: CSharp
      name:
        CSharp: Distance(Vector3, Vector3)
        VB: Distance(Vector3, Vector3)
      nameWithType:
        CSharp: Vector3.Distance(Vector3, Vector3)
        VB: Vector3.Distance(Vector3, Vector3)
      qualifiedName:
        CSharp: Chroma.Vector3.Distance(Chroma.Vector3, Chroma.Vector3)
        VB: Chroma.Vector3.Distance(Chroma.Vector3, Chroma.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Distance
        path: ''
        startLine: 2518
      syntax:
        content:
          CSharp: public static float Distance(Vector3 first, Vector3 second)
          VB: Public Shared Function Distance(first As Vector3, second As Vector3) As Single
        parameters:
        - id: first
          type: Chroma.Vector3
        - id: second
          type: Chroma.Vector3
        return:
          type: System.Single
      overload: Chroma.Vector3.Distance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.Lerp(Chroma.Vector3,Chroma.Vector3,System.Single)
      commentId: M:Chroma.Vector3.Lerp(Chroma.Vector3,Chroma.Vector3,System.Single)
      language: CSharp
      name:
        CSharp: Lerp(Vector3, Vector3, Single)
        VB: Lerp(Vector3, Vector3, Single)
      nameWithType:
        CSharp: Vector3.Lerp(Vector3, Vector3, Single)
        VB: Vector3.Lerp(Vector3, Vector3, Single)
      qualifiedName:
        CSharp: Chroma.Vector3.Lerp(Chroma.Vector3, Chroma.Vector3, System.Single)
        VB: Chroma.Vector3.Lerp(Chroma.Vector3, Chroma.Vector3, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Lerp
        path: ''
        startLine: 2523
      syntax:
        content:
          CSharp: public static Vector3 Lerp(Vector3 from, Vector3 to, float delta)
          VB: Public Shared Function Lerp(from As Vector3, to As Vector3, delta As Single) As Vector3
        parameters:
        - id: from
          type: Chroma.Vector3
        - id: to
          type: Chroma.Vector3
        - id: delta
          type: System.Single
        return:
          type: Chroma.Vector3
      overload: Chroma.Vector3.Lerp*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.op_Multiply(Chroma.Vector3,System.Single)
      commentId: M:Chroma.Vector3.op_Multiply(Chroma.Vector3,System.Single)
      language: CSharp
      name:
        CSharp: Multiply(Vector3, Single)
        VB: Multiply(Vector3, Single)
      nameWithType:
        CSharp: Vector3.Multiply(Vector3, Single)
        VB: Vector3.Multiply(Vector3, Single)
      qualifiedName:
        CSharp: Chroma.Vector3.Multiply(Chroma.Vector3, System.Single)
        VB: Chroma.Vector3.Multiply(Chroma.Vector3, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Multiply
        path: ''
        startLine: 2532
      syntax:
        content:
          CSharp: public static Vector3 operator *(Vector3 left, float scalar)
          VB: Public Shared Operator *(left As Vector3, scalar As Single) As Vector3
        parameters:
        - id: left
          type: Chroma.Vector3
        - id: scalar
          type: System.Single
        return:
          type: Chroma.Vector3
      overload: Chroma.Vector3.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.op_Multiply(System.Single,Chroma.Vector3)
      commentId: M:Chroma.Vector3.op_Multiply(System.Single,Chroma.Vector3)
      language: CSharp
      name:
        CSharp: Multiply(Single, Vector3)
        VB: Multiply(Single, Vector3)
      nameWithType:
        CSharp: Vector3.Multiply(Single, Vector3)
        VB: Vector3.Multiply(Single, Vector3)
      qualifiedName:
        CSharp: Chroma.Vector3.Multiply(System.Single, Chroma.Vector3)
        VB: Chroma.Vector3.Multiply(System.Single, Chroma.Vector3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Multiply
        path: ''
        startLine: 2537
      syntax:
        content:
          CSharp: public static Vector3 operator *(float scalar, Vector3 right)
          VB: Public Shared Operator *(scalar As Single, right As Vector3) As Vector3
        parameters:
        - id: scalar
          type: System.Single
        - id: right
          type: Chroma.Vector3
        return:
          type: Chroma.Vector3
      overload: Chroma.Vector3.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.op_Multiply(Chroma.Vector3,Chroma.Vector3)
      commentId: M:Chroma.Vector3.op_Multiply(Chroma.Vector3,Chroma.Vector3)
      language: CSharp
      name:
        CSharp: Multiply(Vector3, Vector3)
        VB: Multiply(Vector3, Vector3)
      nameWithType:
        CSharp: Vector3.Multiply(Vector3, Vector3)
        VB: Vector3.Multiply(Vector3, Vector3)
      qualifiedName:
        CSharp: Chroma.Vector3.Multiply(Chroma.Vector3, Chroma.Vector3)
        VB: Chroma.Vector3.Multiply(Chroma.Vector3, Chroma.Vector3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Multiply
        path: ''
        startLine: 2542
      syntax:
        content:
          CSharp: public static Vector3 operator *(Vector3 left, Vector3 right)
          VB: Public Shared Operator *(left As Vector3, right As Vector3) As Vector3
        parameters:
        - id: left
          type: Chroma.Vector3
        - id: right
          type: Chroma.Vector3
        return:
          type: Chroma.Vector3
      overload: Chroma.Vector3.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.op_Addition(Chroma.Vector3,Chroma.Vector3)
      commentId: M:Chroma.Vector3.op_Addition(Chroma.Vector3,Chroma.Vector3)
      language: CSharp
      name:
        CSharp: Addition(Vector3, Vector3)
        VB: Addition(Vector3, Vector3)
      nameWithType:
        CSharp: Vector3.Addition(Vector3, Vector3)
        VB: Vector3.Addition(Vector3, Vector3)
      qualifiedName:
        CSharp: Chroma.Vector3.Addition(Chroma.Vector3, Chroma.Vector3)
        VB: Chroma.Vector3.Addition(Chroma.Vector3, Chroma.Vector3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Addition
        path: ''
        startLine: 2547
      syntax:
        content:
          CSharp: public static Vector3 operator +(Vector3 left, Vector3 right)
          VB: Public Shared Operator +(left As Vector3, right As Vector3) As Vector3
        parameters:
        - id: left
          type: Chroma.Vector3
        - id: right
          type: Chroma.Vector3
        return:
          type: Chroma.Vector3
      overload: Chroma.Vector3.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.op_Addition(Chroma.Vector3,System.Single)
      commentId: M:Chroma.Vector3.op_Addition(Chroma.Vector3,System.Single)
      language: CSharp
      name:
        CSharp: Addition(Vector3, Single)
        VB: Addition(Vector3, Single)
      nameWithType:
        CSharp: Vector3.Addition(Vector3, Single)
        VB: Vector3.Addition(Vector3, Single)
      qualifiedName:
        CSharp: Chroma.Vector3.Addition(Chroma.Vector3, System.Single)
        VB: Chroma.Vector3.Addition(Chroma.Vector3, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Addition
        path: ''
        startLine: 2552
      syntax:
        content:
          CSharp: public static Vector3 operator +(Vector3 left, float right)
          VB: Public Shared Operator +(left As Vector3, right As Single) As Vector3
        parameters:
        - id: left
          type: Chroma.Vector3
        - id: right
          type: System.Single
        return:
          type: Chroma.Vector3
      overload: Chroma.Vector3.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.op_Subtraction(Chroma.Vector3,Chroma.Vector3)
      commentId: M:Chroma.Vector3.op_Subtraction(Chroma.Vector3,Chroma.Vector3)
      language: CSharp
      name:
        CSharp: Subtraction(Vector3, Vector3)
        VB: Subtraction(Vector3, Vector3)
      nameWithType:
        CSharp: Vector3.Subtraction(Vector3, Vector3)
        VB: Vector3.Subtraction(Vector3, Vector3)
      qualifiedName:
        CSharp: Chroma.Vector3.Subtraction(Chroma.Vector3, Chroma.Vector3)
        VB: Chroma.Vector3.Subtraction(Chroma.Vector3, Chroma.Vector3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Subtraction
        path: ''
        startLine: 2557
      syntax:
        content:
          CSharp: public static Vector3 operator -(Vector3 left, Vector3 right)
          VB: Public Shared Operator -(left As Vector3, right As Vector3) As Vector3
        parameters:
        - id: left
          type: Chroma.Vector3
        - id: right
          type: Chroma.Vector3
        return:
          type: Chroma.Vector3
      overload: Chroma.Vector3.op_Subtraction*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.op_Division(Chroma.Vector3,Chroma.Vector3)
      commentId: M:Chroma.Vector3.op_Division(Chroma.Vector3,Chroma.Vector3)
      language: CSharp
      name:
        CSharp: Division(Vector3, Vector3)
        VB: Division(Vector3, Vector3)
      nameWithType:
        CSharp: Vector3.Division(Vector3, Vector3)
        VB: Vector3.Division(Vector3, Vector3)
      qualifiedName:
        CSharp: Chroma.Vector3.Division(Chroma.Vector3, Chroma.Vector3)
        VB: Chroma.Vector3.Division(Chroma.Vector3, Chroma.Vector3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Division
        path: ''
        startLine: 2562
      syntax:
        content:
          CSharp: public static Vector3 operator /(Vector3 left, Vector3 right)
          VB: Public Shared Operator /(left As Vector3, right As Vector3) As Vector3
        parameters:
        - id: left
          type: Chroma.Vector3
        - id: right
          type: Chroma.Vector3
        return:
          type: Chroma.Vector3
      overload: Chroma.Vector3.op_Division*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.op_Division(Chroma.Vector3,System.Single)
      commentId: M:Chroma.Vector3.op_Division(Chroma.Vector3,System.Single)
      language: CSharp
      name:
        CSharp: Division(Vector3, Single)
        VB: Division(Vector3, Single)
      nameWithType:
        CSharp: Vector3.Division(Vector3, Single)
        VB: Vector3.Division(Vector3, Single)
      qualifiedName:
        CSharp: Chroma.Vector3.Division(Chroma.Vector3, System.Single)
        VB: Chroma.Vector3.Division(Chroma.Vector3, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Division
        path: ''
        startLine: 2567
      syntax:
        content:
          CSharp: public static Vector3 operator /(Vector3 left, float scalar)
          VB: Public Shared Operator /(left As Vector3, scalar As Single) As Vector3
        parameters:
        - id: left
          type: Chroma.Vector3
        - id: scalar
          type: System.Single
        return:
          type: Chroma.Vector3
      overload: Chroma.Vector3.op_Division*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.op_UnaryNegation(Chroma.Vector3)
      commentId: M:Chroma.Vector3.op_UnaryNegation(Chroma.Vector3)
      language: CSharp
      name:
        CSharp: UnaryNegation(Vector3)
        VB: UnaryNegation(Vector3)
      nameWithType:
        CSharp: Vector3.UnaryNegation(Vector3)
        VB: Vector3.UnaryNegation(Vector3)
      qualifiedName:
        CSharp: Chroma.Vector3.UnaryNegation(Chroma.Vector3)
        VB: Chroma.Vector3.UnaryNegation(Chroma.Vector3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_UnaryNegation
        path: ''
        startLine: 2572
      syntax:
        content:
          CSharp: public static Vector3 operator -(Vector3 vector)
          VB: Public Shared Operator -(vector As Vector3) As Vector3
        parameters:
        - id: vector
          type: Chroma.Vector3
        return:
          type: Chroma.Vector3
      overload: Chroma.Vector3.op_UnaryNegation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.Equals(System.Object)
      commentId: M:Chroma.Vector3.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: Vector3.Equals(Object)
        VB: Vector3.Equals(Object)
      qualifiedName:
        CSharp: Chroma.Vector3.Equals(System.Object)
        VB: Chroma.Vector3.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Equals
        path: ''
        startLine: 2577
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: Chroma.Vector3.Equals*
      overridden: System.ValueType.Equals(System.Object)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Chroma.Vector3.Equals(Chroma.Vector3)
      commentId: M:Chroma.Vector3.Equals(Chroma.Vector3)
      language: CSharp
      name:
        CSharp: Equals(Vector3)
        VB: Equals(Vector3)
      nameWithType:
        CSharp: Vector3.Equals(Vector3)
        VB: Vector3.Equals(Vector3)
      qualifiedName:
        CSharp: Chroma.Vector3.Equals(Chroma.Vector3)
        VB: Chroma.Vector3.Equals(Chroma.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Equals
        path: ''
        startLine: 2579
      syntax:
        content:
          CSharp: public bool Equals(Vector3 right)
          VB: Public Function Equals(right As Vector3) As Boolean
        parameters:
        - id: right
          type: Chroma.Vector3
        return:
          type: System.Boolean
      overload: Chroma.Vector3.Equals*
      implements:
      - System.IEquatable{Chroma.Vector3}.Equals(Chroma.Vector3)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector3.op_Equality(Chroma.Vector3,Chroma.Vector3)
      commentId: M:Chroma.Vector3.op_Equality(Chroma.Vector3,Chroma.Vector3)
      language: CSharp
      name:
        CSharp: Equality(Vector3, Vector3)
        VB: Equality(Vector3, Vector3)
      nameWithType:
        CSharp: Vector3.Equality(Vector3, Vector3)
        VB: Vector3.Equality(Vector3, Vector3)
      qualifiedName:
        CSharp: Chroma.Vector3.Equality(Chroma.Vector3, Chroma.Vector3)
        VB: Chroma.Vector3.Equality(Chroma.Vector3, Chroma.Vector3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Equality
        path: ''
        startLine: 2581
      syntax:
        content:
          CSharp: public static bool operator ==(Vector3 left, Vector3 right)
          VB: Public Shared Operator =(left As Vector3, right As Vector3) As Boolean
        parameters:
        - id: left
          type: Chroma.Vector3
        - id: right
          type: Chroma.Vector3
        return:
          type: System.Boolean
      overload: Chroma.Vector3.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.op_Inequality(Chroma.Vector3,Chroma.Vector3)
      commentId: M:Chroma.Vector3.op_Inequality(Chroma.Vector3,Chroma.Vector3)
      language: CSharp
      name:
        CSharp: Inequality(Vector3, Vector3)
        VB: Inequality(Vector3, Vector3)
      nameWithType:
        CSharp: Vector3.Inequality(Vector3, Vector3)
        VB: Vector3.Inequality(Vector3, Vector3)
      qualifiedName:
        CSharp: Chroma.Vector3.Inequality(Chroma.Vector3, Chroma.Vector3)
        VB: Chroma.Vector3.Inequality(Chroma.Vector3, Chroma.Vector3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Inequality
        path: ''
        startLine: 2583
      syntax:
        content:
          CSharp: public static bool operator !=(Vector3 left, Vector3 right)
          VB: Public Shared Operator <>(left As Vector3, right As Vector3) As Boolean
        parameters:
        - id: left
          type: Chroma.Vector3
        - id: right
          type: Chroma.Vector3
        return:
          type: System.Boolean
      overload: Chroma.Vector3.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.Cos(Chroma.Vector3)
      commentId: M:Chroma.Vector3.Cos(Chroma.Vector3)
      language: CSharp
      name:
        CSharp: Cos(Vector3)
        VB: Cos(Vector3)
      nameWithType:
        CSharp: Vector3.Cos(Vector3)
        VB: Vector3.Cos(Vector3)
      qualifiedName:
        CSharp: Chroma.Vector3.Cos(Chroma.Vector3)
        VB: Chroma.Vector3.Cos(Chroma.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Cos
        path: ''
        startLine: 2585
      syntax:
        content:
          CSharp: public static Vector3 Cos(Vector3 vector)
          VB: Public Shared Function Cos(vector As Vector3) As Vector3
        parameters:
        - id: vector
          type: Chroma.Vector3
        return:
          type: Chroma.Vector3
      overload: Chroma.Vector3.Cos*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.Sin(Chroma.Vector3)
      commentId: M:Chroma.Vector3.Sin(Chroma.Vector3)
      language: CSharp
      name:
        CSharp: Sin(Vector3)
        VB: Sin(Vector3)
      nameWithType:
        CSharp: Vector3.Sin(Vector3)
        VB: Vector3.Sin(Vector3)
      qualifiedName:
        CSharp: Chroma.Vector3.Sin(Chroma.Vector3)
        VB: Chroma.Vector3.Sin(Chroma.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Sin
        path: ''
        startLine: 2590
      syntax:
        content:
          CSharp: public static Vector3 Sin(Vector3 vector)
          VB: Public Shared Function Sin(vector As Vector3) As Vector3
        parameters:
        - id: vector
          type: Chroma.Vector3
        return:
          type: Chroma.Vector3
      overload: Chroma.Vector3.Sin*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector3.ToString
      commentId: M:Chroma.Vector3.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: Vector3.ToString()
        VB: Vector3.ToString()
      qualifiedName:
        CSharp: Chroma.Vector3.ToString()
        VB: Chroma.Vector3.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: ToString
        path: ''
        startLine: 2595
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Chroma.Vector3.ToString*
      overridden: System.ValueType.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Chroma.Vector3.GetHashCode
      commentId: M:Chroma.Vector3.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: Vector3.GetHashCode()
        VB: Vector3.GetHashCode()
      qualifiedName:
        CSharp: Chroma.Vector3.GetHashCode()
        VB: Chroma.Vector3.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetHashCode
        path: ''
        startLine: 2600
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Chroma.Vector3.GetHashCode*
      overridden: System.ValueType.GetHashCode
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Chroma.Vector3.XY
      commentId: P:Chroma.Vector3.XY
      language: CSharp
      name:
        CSharp: XY
        VB: XY
      nameWithType:
        CSharp: Vector3.XY
        VB: Vector3.XY
      qualifiedName:
        CSharp: Chroma.Vector3.XY
        VB: Chroma.Vector3.XY
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: XY
        path: ''
        startLine: 2609
      syntax:
        content:
          CSharp: public Vector2 XY { get; set; }
          VB: Public Property XY As Vector2
        parameters: []
        return:
          type: Chroma.Vector2
      overload: Chroma.Vector3.XY*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Chroma.Vector3.XZ
      commentId: P:Chroma.Vector3.XZ
      language: CSharp
      name:
        CSharp: XZ
        VB: XZ
      nameWithType:
        CSharp: Vector3.XZ
        VB: Vector3.XZ
      qualifiedName:
        CSharp: Chroma.Vector3.XZ
        VB: Chroma.Vector3.XZ
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: XZ
        path: ''
        startLine: 2614
      syntax:
        content:
          CSharp: public Vector2 XZ { get; set; }
          VB: Public Property XZ As Vector2
        parameters: []
        return:
          type: Chroma.Vector2
      overload: Chroma.Vector3.XZ*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Chroma.Vector3.YZ
      commentId: P:Chroma.Vector3.YZ
      language: CSharp
      name:
        CSharp: YZ
        VB: YZ
      nameWithType:
        CSharp: Vector3.YZ
        VB: Vector3.YZ
      qualifiedName:
        CSharp: Chroma.Vector3.YZ
        VB: Chroma.Vector3.YZ
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: YZ
        path: ''
        startLine: 2619
      syntax:
        content:
          CSharp: public Vector2 YZ { get; set; }
          VB: Public Property YZ As Vector2
        parameters: []
        return:
          type: Chroma.Vector2
      overload: Chroma.Vector3.YZ*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Chroma.Vector4
    commentId: T:Chroma.Vector4
    language: CSharp
    name:
      CSharp: Vector4
      VB: Vector4
    nameWithType:
      CSharp: Vector4
      VB: Vector4
    qualifiedName:
      CSharp: Chroma.Vector4
      VB: Chroma.Vector4
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Chroma
    source:
      id: Vector4
      path: ''
      startLine: 2635
    syntax:
      content:
        CSharp: 'public struct Vector4 : IEquatable<Vector4>'
        VB: >-
          Public Structure Vector4

              Implements IEquatable(Of Vector4)
    implements:
    - System.IEquatable{Chroma.Vector4}
    inheritedMembers:
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Chroma.Vector4.X
      commentId: F:Chroma.Vector4.X
      language: CSharp
      name:
        CSharp: X
        VB: X
      nameWithType:
        CSharp: Vector4.X
        VB: Vector4.X
      qualifiedName:
        CSharp: Chroma.Vector4.X
        VB: Chroma.Vector4.X
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: X
        path: ''
        startLine: 2638
      syntax:
        content:
          CSharp: public float X
          VB: Public X As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector4.Y
      commentId: F:Chroma.Vector4.Y
      language: CSharp
      name:
        CSharp: Y
        VB: Y
      nameWithType:
        CSharp: Vector4.Y
        VB: Vector4.Y
      qualifiedName:
        CSharp: Chroma.Vector4.Y
        VB: Chroma.Vector4.Y
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Y
        path: ''
        startLine: 2639
      syntax:
        content:
          CSharp: public float Y
          VB: Public Y As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector4.Z
      commentId: F:Chroma.Vector4.Z
      language: CSharp
      name:
        CSharp: Z
        VB: Z
      nameWithType:
        CSharp: Vector4.Z
        VB: Vector4.Z
      qualifiedName:
        CSharp: Chroma.Vector4.Z
        VB: Chroma.Vector4.Z
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Z
        path: ''
        startLine: 2640
      syntax:
        content:
          CSharp: public float Z
          VB: Public Z As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector4.W
      commentId: F:Chroma.Vector4.W
      language: CSharp
      name:
        CSharp: W
        VB: W
      nameWithType:
        CSharp: Vector4.W
        VB: Vector4.W
      qualifiedName:
        CSharp: Chroma.Vector4.W
        VB: Chroma.Vector4.W
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: W
        path: ''
        startLine: 2641
      syntax:
        content:
          CSharp: public float W
          VB: Public W As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector4.Zero
      commentId: F:Chroma.Vector4.Zero
      language: CSharp
      name:
        CSharp: Zero
        VB: Zero
      nameWithType:
        CSharp: Vector4.Zero
        VB: Vector4.Zero
      qualifiedName:
        CSharp: Chroma.Vector4.Zero
        VB: Chroma.Vector4.Zero
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Zero
        path: ''
        startLine: 2643
      syntax:
        content:
          CSharp: public static Vector4 Zero
          VB: Public Shared Zero As Vector4
        return:
          type: Chroma.Vector4
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector4.One
      commentId: F:Chroma.Vector4.One
      language: CSharp
      name:
        CSharp: One
        VB: One
      nameWithType:
        CSharp: Vector4.One
        VB: Vector4.One
      qualifiedName:
        CSharp: Chroma.Vector4.One
        VB: Chroma.Vector4.One
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: One
        path: ''
        startLine: 2644
      syntax:
        content:
          CSharp: public static Vector4 One
          VB: Public Shared One As Vector4
        return:
          type: Chroma.Vector4
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
      commentId: M:Chroma.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Vector4(Single, Single, Single, Single)
        VB: Vector4(Single, Single, Single, Single)
      nameWithType:
        CSharp: Vector4.Vector4(Single, Single, Single, Single)
        VB: Vector4.Vector4(Single, Single, Single, Single)
      qualifiedName:
        CSharp: Chroma.Vector4.Vector4(System.Single, System.Single, System.Single, System.Single)
        VB: Chroma.Vector4.Vector4(System.Single, System.Single, System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 2646
      syntax:
        content:
          CSharp: public Vector4(float x, float y, float z, float w)
          VB: Public Sub New(x As Single, y As Single, z As Single, w As Single)
        parameters:
        - id: x
          type: System.Single
        - id: y
          type: System.Single
        - id: z
          type: System.Single
        - id: w
          type: System.Single
      overload: Chroma.Vector4.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector4.#ctor(System.Single)
      commentId: M:Chroma.Vector4.#ctor(System.Single)
      language: CSharp
      name:
        CSharp: Vector4(Single)
        VB: Vector4(Single)
      nameWithType:
        CSharp: Vector4.Vector4(Single)
        VB: Vector4.Vector4(Single)
      qualifiedName:
        CSharp: Chroma.Vector4.Vector4(System.Single)
        VB: Chroma.Vector4.Vector4(System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 2654
      syntax:
        content:
          CSharp: public Vector4(float scalar)
          VB: Public Sub New(scalar As Single)
        parameters:
        - id: scalar
          type: System.Single
      overload: Chroma.Vector4.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector4.#ctor(Chroma.Vector3)
      commentId: M:Chroma.Vector4.#ctor(Chroma.Vector3)
      language: CSharp
      name:
        CSharp: Vector4(Vector3)
        VB: Vector4(Vector3)
      nameWithType:
        CSharp: Vector4.Vector4(Vector3)
        VB: Vector4.Vector4(Vector3)
      qualifiedName:
        CSharp: Chroma.Vector4.Vector4(Chroma.Vector3)
        VB: Chroma.Vector4.Vector4(Chroma.Vector3)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 2659
      syntax:
        content:
          CSharp: public Vector4(Vector3 vec)
          VB: Public Sub New(vec As Vector3)
        parameters:
        - id: vec
          type: Chroma.Vector3
      overload: Chroma.Vector4.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector4.#ctor(Chroma.Vector3,System.Single)
      commentId: M:Chroma.Vector4.#ctor(Chroma.Vector3,System.Single)
      language: CSharp
      name:
        CSharp: Vector4(Vector3, Single)
        VB: Vector4(Vector3, Single)
      nameWithType:
        CSharp: Vector4.Vector4(Vector3, Single)
        VB: Vector4.Vector4(Vector3, Single)
      qualifiedName:
        CSharp: Chroma.Vector4.Vector4(Chroma.Vector3, System.Single)
        VB: Chroma.Vector4.Vector4(Chroma.Vector3, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 2667
      syntax:
        content:
          CSharp: public Vector4(Vector3 vec, float w)
          VB: Public Sub New(vec As Vector3, w As Single)
        parameters:
        - id: vec
          type: Chroma.Vector3
        - id: w
          type: System.Single
      overload: Chroma.Vector4.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector4.#ctor(Chroma.Vector2)
      commentId: M:Chroma.Vector4.#ctor(Chroma.Vector2)
      language: CSharp
      name:
        CSharp: Vector4(Vector2)
        VB: Vector4(Vector2)
      nameWithType:
        CSharp: Vector4.Vector4(Vector2)
        VB: Vector4.Vector4(Vector2)
      qualifiedName:
        CSharp: Chroma.Vector4.Vector4(Chroma.Vector2)
        VB: Chroma.Vector4.Vector4(Chroma.Vector2)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 2675
      syntax:
        content:
          CSharp: public Vector4(Vector2 vec)
          VB: Public Sub New(vec As Vector2)
        parameters:
        - id: vec
          type: Chroma.Vector2
      overload: Chroma.Vector4.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector4.#ctor(Chroma.Vector2,System.Single,System.Single)
      commentId: M:Chroma.Vector4.#ctor(Chroma.Vector2,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Vector4(Vector2, Single, Single)
        VB: Vector4(Vector2, Single, Single)
      nameWithType:
        CSharp: Vector4.Vector4(Vector2, Single, Single)
        VB: Vector4.Vector4(Vector2, Single, Single)
      qualifiedName:
        CSharp: Chroma.Vector4.Vector4(Chroma.Vector2, System.Single, System.Single)
        VB: Chroma.Vector4.Vector4(Chroma.Vector2, System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: .ctor
        path: ''
        startLine: 2683
      syntax:
        content:
          CSharp: public Vector4(Vector2 vec, float z, float w)
          VB: Public Sub New(vec As Vector2, z As Single, w As Single)
        parameters:
        - id: vec
          type: Chroma.Vector2
        - id: z
          type: System.Single
        - id: w
          type: System.Single
      overload: Chroma.Vector4.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector4.Clamp(Chroma.Vector4,Chroma.Vector4)
      commentId: M:Chroma.Vector4.Clamp(Chroma.Vector4,Chroma.Vector4)
      language: CSharp
      name:
        CSharp: Clamp(Vector4, Vector4)
        VB: Clamp(Vector4, Vector4)
      nameWithType:
        CSharp: Vector4.Clamp(Vector4, Vector4)
        VB: Vector4.Clamp(Vector4, Vector4)
      qualifiedName:
        CSharp: Chroma.Vector4.Clamp(Chroma.Vector4, Chroma.Vector4)
        VB: Chroma.Vector4.Clamp(Chroma.Vector4, Chroma.Vector4)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Clamp
        path: ''
        startLine: 2691
      syntax:
        content:
          CSharp: public void Clamp(Vector4 min, Vector4 max)
          VB: Public Sub Clamp(min As Vector4, max As Vector4)
        parameters:
        - id: min
          type: Chroma.Vector4
        - id: max
          type: Chroma.Vector4
      overload: Chroma.Vector4.Clamp*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector4.Length
      commentId: M:Chroma.Vector4.Length
      language: CSharp
      name:
        CSharp: Length()
        VB: Length()
      nameWithType:
        CSharp: Vector4.Length()
        VB: Vector4.Length()
      qualifiedName:
        CSharp: Chroma.Vector4.Length()
        VB: Chroma.Vector4.Length()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Length
        path: ''
        startLine: 2699
      syntax:
        content:
          CSharp: public float Length()
          VB: Public Function Length As Single
        return:
          type: System.Single
      overload: Chroma.Vector4.Length*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector4.Normalized
      commentId: M:Chroma.Vector4.Normalized
      language: CSharp
      name:
        CSharp: Normalized()
        VB: Normalized()
      nameWithType:
        CSharp: Vector4.Normalized()
        VB: Vector4.Normalized()
      qualifiedName:
        CSharp: Chroma.Vector4.Normalized()
        VB: Chroma.Vector4.Normalized()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Normalized
        path: ''
        startLine: 2704
      syntax:
        content:
          CSharp: public Vector4 Normalized()
          VB: Public Function Normalized As Vector4
        return:
          type: Chroma.Vector4
      overload: Chroma.Vector4.Normalized*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector4.Normalize
      commentId: M:Chroma.Vector4.Normalize
      language: CSharp
      name:
        CSharp: Normalize()
        VB: Normalize()
      nameWithType:
        CSharp: Vector4.Normalize()
        VB: Vector4.Normalize()
      qualifiedName:
        CSharp: Chroma.Vector4.Normalize()
        VB: Chroma.Vector4.Normalize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Normalize
        path: ''
        startLine: 2723
      syntax:
        content:
          CSharp: public void Normalize()
          VB: Public Sub Normalize
      overload: Chroma.Vector4.Normalize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector4.Distance(Chroma.Vector4)
      commentId: M:Chroma.Vector4.Distance(Chroma.Vector4)
      language: CSharp
      name:
        CSharp: Distance(Vector4)
        VB: Distance(Vector4)
      nameWithType:
        CSharp: Vector4.Distance(Vector4)
        VB: Vector4.Distance(Vector4)
      qualifiedName:
        CSharp: Chroma.Vector4.Distance(Chroma.Vector4)
        VB: Chroma.Vector4.Distance(Chroma.Vector4)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Distance
        path: ''
        startLine: 2735
      syntax:
        content:
          CSharp: public float Distance(Vector4 other)
          VB: Public Function Distance(other As Vector4) As Single
        parameters:
        - id: other
          type: Chroma.Vector4
        return:
          type: System.Single
      overload: Chroma.Vector4.Distance*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector4.Distance(Chroma.Vector4,Chroma.Vector4)
      commentId: M:Chroma.Vector4.Distance(Chroma.Vector4,Chroma.Vector4)
      language: CSharp
      name:
        CSharp: Distance(Vector4, Vector4)
        VB: Distance(Vector4, Vector4)
      nameWithType:
        CSharp: Vector4.Distance(Vector4, Vector4)
        VB: Vector4.Distance(Vector4, Vector4)
      qualifiedName:
        CSharp: Chroma.Vector4.Distance(Chroma.Vector4, Chroma.Vector4)
        VB: Chroma.Vector4.Distance(Chroma.Vector4, Chroma.Vector4)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Distance
        path: ''
        startLine: 2740
      syntax:
        content:
          CSharp: public static float Distance(Vector4 first, Vector4 second)
          VB: Public Shared Function Distance(first As Vector4, second As Vector4) As Single
        parameters:
        - id: first
          type: Chroma.Vector4
        - id: second
          type: Chroma.Vector4
        return:
          type: System.Single
      overload: Chroma.Vector4.Distance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector4.Lerp(Chroma.Vector4,Chroma.Vector4,System.Single)
      commentId: M:Chroma.Vector4.Lerp(Chroma.Vector4,Chroma.Vector4,System.Single)
      language: CSharp
      name:
        CSharp: Lerp(Vector4, Vector4, Single)
        VB: Lerp(Vector4, Vector4, Single)
      nameWithType:
        CSharp: Vector4.Lerp(Vector4, Vector4, Single)
        VB: Vector4.Lerp(Vector4, Vector4, Single)
      qualifiedName:
        CSharp: Chroma.Vector4.Lerp(Chroma.Vector4, Chroma.Vector4, System.Single)
        VB: Chroma.Vector4.Lerp(Chroma.Vector4, Chroma.Vector4, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Lerp
        path: ''
        startLine: 2745
      syntax:
        content:
          CSharp: public static Vector4 Lerp(Vector4 from, Vector4 to, float t)
          VB: Public Shared Function Lerp(from As Vector4, to As Vector4, t As Single) As Vector4
        parameters:
        - id: from
          type: Chroma.Vector4
        - id: to
          type: Chroma.Vector4
        - id: t
          type: System.Single
        return:
          type: Chroma.Vector4
      overload: Chroma.Vector4.Lerp*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector4.op_Multiply(Chroma.Vector4,System.Single)
      commentId: M:Chroma.Vector4.op_Multiply(Chroma.Vector4,System.Single)
      language: CSharp
      name:
        CSharp: Multiply(Vector4, Single)
        VB: Multiply(Vector4, Single)
      nameWithType:
        CSharp: Vector4.Multiply(Vector4, Single)
        VB: Vector4.Multiply(Vector4, Single)
      qualifiedName:
        CSharp: Chroma.Vector4.Multiply(Chroma.Vector4, System.Single)
        VB: Chroma.Vector4.Multiply(Chroma.Vector4, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Multiply
        path: ''
        startLine: 2753
      syntax:
        content:
          CSharp: public static Vector4 operator *(Vector4 left, float scalar)
          VB: Public Shared Operator *(left As Vector4, scalar As Single) As Vector4
        parameters:
        - id: left
          type: Chroma.Vector4
        - id: scalar
          type: System.Single
        return:
          type: Chroma.Vector4
      overload: Chroma.Vector4.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector4.op_Multiply(System.Single,Chroma.Vector4)
      commentId: M:Chroma.Vector4.op_Multiply(System.Single,Chroma.Vector4)
      language: CSharp
      name:
        CSharp: Multiply(Single, Vector4)
        VB: Multiply(Single, Vector4)
      nameWithType:
        CSharp: Vector4.Multiply(Single, Vector4)
        VB: Vector4.Multiply(Single, Vector4)
      qualifiedName:
        CSharp: Chroma.Vector4.Multiply(System.Single, Chroma.Vector4)
        VB: Chroma.Vector4.Multiply(System.Single, Chroma.Vector4)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Multiply
        path: ''
        startLine: 2758
      syntax:
        content:
          CSharp: public static Vector4 operator *(float scalar, Vector4 right)
          VB: Public Shared Operator *(scalar As Single, right As Vector4) As Vector4
        parameters:
        - id: scalar
          type: System.Single
        - id: right
          type: Chroma.Vector4
        return:
          type: Chroma.Vector4
      overload: Chroma.Vector4.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector4.op_Multiply(Chroma.Vector4,Chroma.Vector4)
      commentId: M:Chroma.Vector4.op_Multiply(Chroma.Vector4,Chroma.Vector4)
      language: CSharp
      name:
        CSharp: Multiply(Vector4, Vector4)
        VB: Multiply(Vector4, Vector4)
      nameWithType:
        CSharp: Vector4.Multiply(Vector4, Vector4)
        VB: Vector4.Multiply(Vector4, Vector4)
      qualifiedName:
        CSharp: Chroma.Vector4.Multiply(Chroma.Vector4, Chroma.Vector4)
        VB: Chroma.Vector4.Multiply(Chroma.Vector4, Chroma.Vector4)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Multiply
        path: ''
        startLine: 2763
      syntax:
        content:
          CSharp: public static Vector4 operator *(Vector4 left, Vector4 right)
          VB: Public Shared Operator *(left As Vector4, right As Vector4) As Vector4
        parameters:
        - id: left
          type: Chroma.Vector4
        - id: right
          type: Chroma.Vector4
        return:
          type: Chroma.Vector4
      overload: Chroma.Vector4.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector4.op_Addition(Chroma.Vector4,Chroma.Vector4)
      commentId: M:Chroma.Vector4.op_Addition(Chroma.Vector4,Chroma.Vector4)
      language: CSharp
      name:
        CSharp: Addition(Vector4, Vector4)
        VB: Addition(Vector4, Vector4)
      nameWithType:
        CSharp: Vector4.Addition(Vector4, Vector4)
        VB: Vector4.Addition(Vector4, Vector4)
      qualifiedName:
        CSharp: Chroma.Vector4.Addition(Chroma.Vector4, Chroma.Vector4)
        VB: Chroma.Vector4.Addition(Chroma.Vector4, Chroma.Vector4)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Addition
        path: ''
        startLine: 2768
      syntax:
        content:
          CSharp: public static Vector4 operator +(Vector4 left, Vector4 right)
          VB: Public Shared Operator +(left As Vector4, right As Vector4) As Vector4
        parameters:
        - id: left
          type: Chroma.Vector4
        - id: right
          type: Chroma.Vector4
        return:
          type: Chroma.Vector4
      overload: Chroma.Vector4.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector4.op_Addition(Chroma.Vector4,System.Single)
      commentId: M:Chroma.Vector4.op_Addition(Chroma.Vector4,System.Single)
      language: CSharp
      name:
        CSharp: Addition(Vector4, Single)
        VB: Addition(Vector4, Single)
      nameWithType:
        CSharp: Vector4.Addition(Vector4, Single)
        VB: Vector4.Addition(Vector4, Single)
      qualifiedName:
        CSharp: Chroma.Vector4.Addition(Chroma.Vector4, System.Single)
        VB: Chroma.Vector4.Addition(Chroma.Vector4, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Addition
        path: ''
        startLine: 2773
      syntax:
        content:
          CSharp: public static Vector4 operator +(Vector4 left, float right)
          VB: Public Shared Operator +(left As Vector4, right As Single) As Vector4
        parameters:
        - id: left
          type: Chroma.Vector4
        - id: right
          type: System.Single
        return:
          type: Chroma.Vector4
      overload: Chroma.Vector4.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector4.op_Subtraction(Chroma.Vector4,Chroma.Vector4)
      commentId: M:Chroma.Vector4.op_Subtraction(Chroma.Vector4,Chroma.Vector4)
      language: CSharp
      name:
        CSharp: Subtraction(Vector4, Vector4)
        VB: Subtraction(Vector4, Vector4)
      nameWithType:
        CSharp: Vector4.Subtraction(Vector4, Vector4)
        VB: Vector4.Subtraction(Vector4, Vector4)
      qualifiedName:
        CSharp: Chroma.Vector4.Subtraction(Chroma.Vector4, Chroma.Vector4)
        VB: Chroma.Vector4.Subtraction(Chroma.Vector4, Chroma.Vector4)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Subtraction
        path: ''
        startLine: 2778
      syntax:
        content:
          CSharp: public static Vector4 operator -(Vector4 left, Vector4 right)
          VB: Public Shared Operator -(left As Vector4, right As Vector4) As Vector4
        parameters:
        - id: left
          type: Chroma.Vector4
        - id: right
          type: Chroma.Vector4
        return:
          type: Chroma.Vector4
      overload: Chroma.Vector4.op_Subtraction*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector4.op_Division(Chroma.Vector4,Chroma.Vector4)
      commentId: M:Chroma.Vector4.op_Division(Chroma.Vector4,Chroma.Vector4)
      language: CSharp
      name:
        CSharp: Division(Vector4, Vector4)
        VB: Division(Vector4, Vector4)
      nameWithType:
        CSharp: Vector4.Division(Vector4, Vector4)
        VB: Vector4.Division(Vector4, Vector4)
      qualifiedName:
        CSharp: Chroma.Vector4.Division(Chroma.Vector4, Chroma.Vector4)
        VB: Chroma.Vector4.Division(Chroma.Vector4, Chroma.Vector4)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Division
        path: ''
        startLine: 2783
      syntax:
        content:
          CSharp: public static Vector4 operator /(Vector4 left, Vector4 right)
          VB: Public Shared Operator /(left As Vector4, right As Vector4) As Vector4
        parameters:
        - id: left
          type: Chroma.Vector4
        - id: right
          type: Chroma.Vector4
        return:
          type: Chroma.Vector4
      overload: Chroma.Vector4.op_Division*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector4.op_Division(Chroma.Vector4,System.Single)
      commentId: M:Chroma.Vector4.op_Division(Chroma.Vector4,System.Single)
      language: CSharp
      name:
        CSharp: Division(Vector4, Single)
        VB: Division(Vector4, Single)
      nameWithType:
        CSharp: Vector4.Division(Vector4, Single)
        VB: Vector4.Division(Vector4, Single)
      qualifiedName:
        CSharp: Chroma.Vector4.Division(Chroma.Vector4, System.Single)
        VB: Chroma.Vector4.Division(Chroma.Vector4, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Division
        path: ''
        startLine: 2788
      syntax:
        content:
          CSharp: public static Vector4 operator /(Vector4 left, float scalar)
          VB: Public Shared Operator /(left As Vector4, scalar As Single) As Vector4
        parameters:
        - id: left
          type: Chroma.Vector4
        - id: scalar
          type: System.Single
        return:
          type: Chroma.Vector4
      overload: Chroma.Vector4.op_Division*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector4.op_UnaryNegation(Chroma.Vector4)
      commentId: M:Chroma.Vector4.op_UnaryNegation(Chroma.Vector4)
      language: CSharp
      name:
        CSharp: UnaryNegation(Vector4)
        VB: UnaryNegation(Vector4)
      nameWithType:
        CSharp: Vector4.UnaryNegation(Vector4)
        VB: Vector4.UnaryNegation(Vector4)
      qualifiedName:
        CSharp: Chroma.Vector4.UnaryNegation(Chroma.Vector4)
        VB: Chroma.Vector4.UnaryNegation(Chroma.Vector4)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_UnaryNegation
        path: ''
        startLine: 2793
      syntax:
        content:
          CSharp: public static Vector4 operator -(Vector4 vector)
          VB: Public Shared Operator -(vector As Vector4) As Vector4
        parameters:
        - id: vector
          type: Chroma.Vector4
        return:
          type: Chroma.Vector4
      overload: Chroma.Vector4.op_UnaryNegation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector4.Equals(System.Object)
      commentId: M:Chroma.Vector4.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: Vector4.Equals(Object)
        VB: Vector4.Equals(Object)
      qualifiedName:
        CSharp: Chroma.Vector4.Equals(System.Object)
        VB: Chroma.Vector4.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Equals
        path: ''
        startLine: 2798
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: Chroma.Vector4.Equals*
      overridden: System.ValueType.Equals(System.Object)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Chroma.Vector4.Equals(Chroma.Vector4)
      commentId: M:Chroma.Vector4.Equals(Chroma.Vector4)
      language: CSharp
      name:
        CSharp: Equals(Vector4)
        VB: Equals(Vector4)
      nameWithType:
        CSharp: Vector4.Equals(Vector4)
        VB: Vector4.Equals(Vector4)
      qualifiedName:
        CSharp: Chroma.Vector4.Equals(Chroma.Vector4)
        VB: Chroma.Vector4.Equals(Chroma.Vector4)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Equals
        path: ''
        startLine: 2800
      syntax:
        content:
          CSharp: public bool Equals(Vector4 right)
          VB: Public Function Equals(right As Vector4) As Boolean
        parameters:
        - id: right
          type: Chroma.Vector4
        return:
          type: System.Boolean
      overload: Chroma.Vector4.Equals*
      implements:
      - System.IEquatable{Chroma.Vector4}.Equals(Chroma.Vector4)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Chroma.Vector4.op_Equality(Chroma.Vector4,Chroma.Vector4)
      commentId: M:Chroma.Vector4.op_Equality(Chroma.Vector4,Chroma.Vector4)
      language: CSharp
      name:
        CSharp: Equality(Vector4, Vector4)
        VB: Equality(Vector4, Vector4)
      nameWithType:
        CSharp: Vector4.Equality(Vector4, Vector4)
        VB: Vector4.Equality(Vector4, Vector4)
      qualifiedName:
        CSharp: Chroma.Vector4.Equality(Chroma.Vector4, Chroma.Vector4)
        VB: Chroma.Vector4.Equality(Chroma.Vector4, Chroma.Vector4)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Equality
        path: ''
        startLine: 2802
      syntax:
        content:
          CSharp: public static bool operator ==(Vector4 left, Vector4 right)
          VB: Public Shared Operator =(left As Vector4, right As Vector4) As Boolean
        parameters:
        - id: left
          type: Chroma.Vector4
        - id: right
          type: Chroma.Vector4
        return:
          type: System.Boolean
      overload: Chroma.Vector4.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector4.op_Inequality(Chroma.Vector4,Chroma.Vector4)
      commentId: M:Chroma.Vector4.op_Inequality(Chroma.Vector4,Chroma.Vector4)
      language: CSharp
      name:
        CSharp: Inequality(Vector4, Vector4)
        VB: Inequality(Vector4, Vector4)
      nameWithType:
        CSharp: Vector4.Inequality(Vector4, Vector4)
        VB: Vector4.Inequality(Vector4, Vector4)
      qualifiedName:
        CSharp: Chroma.Vector4.Inequality(Chroma.Vector4, Chroma.Vector4)
        VB: Chroma.Vector4.Inequality(Chroma.Vector4, Chroma.Vector4)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: op_Inequality
        path: ''
        startLine: 2804
      syntax:
        content:
          CSharp: public static bool operator !=(Vector4 left, Vector4 right)
          VB: Public Shared Operator <>(left As Vector4, right As Vector4) As Boolean
        parameters:
        - id: left
          type: Chroma.Vector4
        - id: right
          type: Chroma.Vector4
        return:
          type: System.Boolean
      overload: Chroma.Vector4.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector4.Cos(Chroma.Vector4)
      commentId: M:Chroma.Vector4.Cos(Chroma.Vector4)
      language: CSharp
      name:
        CSharp: Cos(Vector4)
        VB: Cos(Vector4)
      nameWithType:
        CSharp: Vector4.Cos(Vector4)
        VB: Vector4.Cos(Vector4)
      qualifiedName:
        CSharp: Chroma.Vector4.Cos(Chroma.Vector4)
        VB: Chroma.Vector4.Cos(Chroma.Vector4)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Cos
        path: ''
        startLine: 2806
      syntax:
        content:
          CSharp: public static Vector4 Cos(Vector4 vector)
          VB: Public Shared Function Cos(vector As Vector4) As Vector4
        parameters:
        - id: vector
          type: Chroma.Vector4
        return:
          type: Chroma.Vector4
      overload: Chroma.Vector4.Cos*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector4.Sin(Chroma.Vector4)
      commentId: M:Chroma.Vector4.Sin(Chroma.Vector4)
      language: CSharp
      name:
        CSharp: Sin(Vector4)
        VB: Sin(Vector4)
      nameWithType:
        CSharp: Vector4.Sin(Vector4)
        VB: Vector4.Sin(Vector4)
      qualifiedName:
        CSharp: Chroma.Vector4.Sin(Chroma.Vector4)
        VB: Chroma.Vector4.Sin(Chroma.Vector4)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: Sin
        path: ''
        startLine: 2811
      syntax:
        content:
          CSharp: public static Vector4 Sin(Vector4 vector)
          VB: Public Shared Function Sin(vector As Vector4) As Vector4
        parameters:
        - id: vector
          type: Chroma.Vector4
        return:
          type: Chroma.Vector4
      overload: Chroma.Vector4.Sin*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Chroma.Vector4.ToString
      commentId: M:Chroma.Vector4.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: Vector4.ToString()
        VB: Vector4.ToString()
      qualifiedName:
        CSharp: Chroma.Vector4.ToString()
        VB: Chroma.Vector4.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: ToString
        path: ''
        startLine: 2816
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Chroma.Vector4.ToString*
      overridden: System.ValueType.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Chroma.Vector4.GetHashCode
      commentId: M:Chroma.Vector4.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: Vector4.GetHashCode()
        VB: Vector4.GetHashCode()
      qualifiedName:
        CSharp: Chroma.Vector4.GetHashCode()
        VB: Chroma.Vector4.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma
      source:
        id: GetHashCode
        path: ''
        startLine: 2821
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Chroma.Vector4.GetHashCode*
      overridden: System.ValueType.GetHashCode
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
- id: Chroma.Engine
  commentId: N:Chroma.Engine
  language: CSharp
  name:
    CSharp: Chroma.Engine
    VB: Chroma.Engine
  nameWithType:
    CSharp: Chroma.Engine
    VB: Chroma.Engine
  qualifiedName:
    CSharp: Chroma.Engine
    VB: Chroma.Engine
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Chroma.Engine.ReflectionHelper
    commentId: T:Chroma.Engine.ReflectionHelper
    language: CSharp
    name:
      CSharp: ReflectionHelper
      VB: ReflectionHelper
    nameWithType:
      CSharp: ReflectionHelper
      VB: ReflectionHelper
    qualifiedName:
      CSharp: Chroma.Engine.ReflectionHelper
      VB: Chroma.Engine.ReflectionHelper
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma.Engine
    source:
      id: ReflectionHelper
      path: ''
      startLine: 1668
    syntax:
      content:
        CSharp: class ReflectionHelper
        VB: Class ReflectionHelper
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - class
      VB:
      - Class
    items:
    - id: Chroma.Engine.ReflectionHelper.GetEntityTypes
      commentId: M:Chroma.Engine.ReflectionHelper.GetEntityTypes
      language: CSharp
      name:
        CSharp: GetEntityTypes()
        VB: GetEntityTypes()
      nameWithType:
        CSharp: ReflectionHelper.GetEntityTypes()
        VB: ReflectionHelper.GetEntityTypes()
      qualifiedName:
        CSharp: Chroma.Engine.ReflectionHelper.GetEntityTypes()
        VB: Chroma.Engine.ReflectionHelper.GetEntityTypes()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma.Engine
      source:
        id: GetEntityTypes
        path: ''
        startLine: 1671
      syntax:
        content:
          CSharp: static string[] GetEntityTypes()
          VB: Shared Function GetEntityTypes As String()
        return:
          type: System.String[]
      overload: Chroma.Engine.ReflectionHelper.GetEntityTypes*
      modifiers:
        CSharp:
        - static
        VB:
        - Shared
    - id: Chroma.Engine.ReflectionHelper.GetInheritanceHierarchy(System.Type)
      commentId: M:Chroma.Engine.ReflectionHelper.GetInheritanceHierarchy(System.Type)
      language: CSharp
      name:
        CSharp: GetInheritanceHierarchy(Type)
        VB: GetInheritanceHierarchy(Type)
      nameWithType:
        CSharp: ReflectionHelper.GetInheritanceHierarchy(Type)
        VB: ReflectionHelper.GetInheritanceHierarchy(Type)
      qualifiedName:
        CSharp: Chroma.Engine.ReflectionHelper.GetInheritanceHierarchy(System.Type)
        VB: Chroma.Engine.ReflectionHelper.GetInheritanceHierarchy(System.Type)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma.Engine
      source:
        id: GetInheritanceHierarchy
        path: ''
        startLine: 1687
      syntax:
        content:
          CSharp: static IEnumerable<Type> GetInheritanceHierarchy(Type type)
          VB: Shared Function GetInheritanceHierarchy(type As Type) As IEnumerable(Of Type)
        parameters:
        - id: type
          type: System.Type
        return:
          type: IEnumerable{System.Type}
      overload: Chroma.Engine.ReflectionHelper.GetInheritanceHierarchy*
      modifiers:
        CSharp:
        - static
        VB:
        - Shared
    - id: Chroma.Engine.ReflectionHelper.GetEntityTypeHierarchy
      commentId: M:Chroma.Engine.ReflectionHelper.GetEntityTypeHierarchy
      language: CSharp
      name:
        CSharp: GetEntityTypeHierarchy()
        VB: GetEntityTypeHierarchy()
      nameWithType:
        CSharp: ReflectionHelper.GetEntityTypeHierarchy()
        VB: ReflectionHelper.GetEntityTypeHierarchy()
      qualifiedName:
        CSharp: Chroma.Engine.ReflectionHelper.GetEntityTypeHierarchy()
        VB: Chroma.Engine.ReflectionHelper.GetEntityTypeHierarchy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma.Engine
      source:
        id: GetEntityTypeHierarchy
        path: ''
        startLine: 1693
      syntax:
        content:
          CSharp: static string[] GetEntityTypeHierarchy()
          VB: Shared Function GetEntityTypeHierarchy As String()
        return:
          type: System.String[]
      overload: Chroma.Engine.ReflectionHelper.GetEntityTypeHierarchy*
      modifiers:
        CSharp:
        - static
        VB:
        - Shared
  - id: Chroma.Engine.ScriptCreationHelper
    commentId: T:Chroma.Engine.ScriptCreationHelper
    language: CSharp
    name:
      CSharp: ScriptCreationHelper
      VB: ScriptCreationHelper
    nameWithType:
      CSharp: ScriptCreationHelper
      VB: ScriptCreationHelper
    qualifiedName:
      CSharp: Chroma.Engine.ScriptCreationHelper
      VB: Chroma.Engine.ScriptCreationHelper
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Chroma.Engine
    source:
      id: ScriptCreationHelper
      path: ''
      startLine: 1726
    syntax:
      content:
        CSharp: static class ScriptCreationHelper
        VB: Module ScriptCreationHelper
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - static
      - class
      VB:
      - Module
    items:
    - id: Chroma.Engine.ScriptCreationHelper.ValidateIdentifier(System.String)
      commentId: M:Chroma.Engine.ScriptCreationHelper.ValidateIdentifier(System.String)
      language: CSharp
      name:
        CSharp: ValidateIdentifier(String)
        VB: ValidateIdentifier(String)
      nameWithType:
        CSharp: ScriptCreationHelper.ValidateIdentifier(String)
        VB: ScriptCreationHelper.ValidateIdentifier(String)
      qualifiedName:
        CSharp: Chroma.Engine.ScriptCreationHelper.ValidateIdentifier(System.String)
        VB: Chroma.Engine.ScriptCreationHelper.ValidateIdentifier(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma.Engine
      source:
        id: ValidateIdentifier
        path: ''
        startLine: 1728
      syntax:
        content:
          CSharp: static bool ValidateIdentifier(string value)
          VB: Shared Function ValidateIdentifier(value As String) As Boolean
        parameters:
        - id: value
          type: System.String
        return:
          type: System.Boolean
      overload: Chroma.Engine.ScriptCreationHelper.ValidateIdentifier*
      modifiers:
        CSharp:
        - static
        VB:
        - Shared
    - id: Chroma.Engine.ScriptCreationHelper.ValidateClassName(System.String)
      commentId: M:Chroma.Engine.ScriptCreationHelper.ValidateClassName(System.String)
      language: CSharp
      name:
        CSharp: ValidateClassName(String)
        VB: ValidateClassName(String)
      nameWithType:
        CSharp: ScriptCreationHelper.ValidateClassName(String)
        VB: ScriptCreationHelper.ValidateClassName(String)
      qualifiedName:
        CSharp: Chroma.Engine.ScriptCreationHelper.ValidateClassName(System.String)
        VB: Chroma.Engine.ScriptCreationHelper.ValidateClassName(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Chroma.Engine
      source:
        id: ValidateClassName
        path: ''
        startLine: 1733
      syntax:
        content:
          CSharp: static bool ValidateClassName(string value)
          VB: Shared Function ValidateClassName(value As String) As Boolean
        parameters:
        - id: value
          type: System.String
        return:
          type: System.Boolean
      overload: Chroma.Engine.ScriptCreationHelper.ValidateClassName*
      modifiers:
        CSharp:
        - static
        VB:
        - Shared
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Chroma.Audio.PlayEvent*:
    name:
      CSharp:
      - id: Chroma.Audio.PlayEvent*
        name: PlayEvent
        nameWithType: Audio.PlayEvent
        qualifiedName: Chroma.Audio.PlayEvent
      VB:
      - id: Chroma.Audio.PlayEvent*
        name: PlayEvent
        nameWithType: Audio.PlayEvent
        qualifiedName: Chroma.Audio.PlayEvent
    isDefinition: true
    commentId: Overload:Chroma.Audio.PlayEvent
  Chroma.Audio.PlayEventIfStopped*:
    name:
      CSharp:
      - id: Chroma.Audio.PlayEventIfStopped*
        name: PlayEventIfStopped
        nameWithType: Audio.PlayEventIfStopped
        qualifiedName: Chroma.Audio.PlayEventIfStopped
      VB:
      - id: Chroma.Audio.PlayEventIfStopped*
        name: PlayEventIfStopped
        nameWithType: Audio.PlayEventIfStopped
        qualifiedName: Chroma.Audio.PlayEventIfStopped
    isDefinition: true
    commentId: Overload:Chroma.Audio.PlayEventIfStopped
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  Chroma.Audio.StopEvent*:
    name:
      CSharp:
      - id: Chroma.Audio.StopEvent*
        name: StopEvent
        nameWithType: Audio.StopEvent
        qualifiedName: Chroma.Audio.StopEvent
      VB:
      - id: Chroma.Audio.StopEvent*
        name: StopEvent
        nameWithType: Audio.StopEvent
        qualifiedName: Chroma.Audio.StopEvent
    isDefinition: true
    commentId: Overload:Chroma.Audio.StopEvent
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  Chroma.Audio.GetEventParameter*:
    name:
      CSharp:
      - id: Chroma.Audio.GetEventParameter*
        name: GetEventParameter
        nameWithType: Audio.GetEventParameter
        qualifiedName: Chroma.Audio.GetEventParameter
      VB:
      - id: Chroma.Audio.GetEventParameter*
        name: GetEventParameter
        nameWithType: Audio.GetEventParameter
        qualifiedName: Chroma.Audio.GetEventParameter
    isDefinition: true
    commentId: Overload:Chroma.Audio.GetEventParameter
  Chroma.Audio.SetEventParameter*:
    name:
      CSharp:
      - id: Chroma.Audio.SetEventParameter*
        name: SetEventParameter
        nameWithType: Audio.SetEventParameter
        qualifiedName: Chroma.Audio.SetEventParameter
      VB:
      - id: Chroma.Audio.SetEventParameter*
        name: SetEventParameter
        nameWithType: Audio.SetEventParameter
        qualifiedName: Chroma.Audio.SetEventParameter
    isDefinition: true
    commentId: Overload:Chroma.Audio.SetEventParameter
  Chroma.Audio.IsEventPlaying*:
    name:
      CSharp:
      - id: Chroma.Audio.IsEventPlaying*
        name: IsEventPlaying
        nameWithType: Audio.IsEventPlaying
        qualifiedName: Chroma.Audio.IsEventPlaying
      VB:
      - id: Chroma.Audio.IsEventPlaying*
        name: IsEventPlaying
        nameWithType: Audio.IsEventPlaying
        qualifiedName: Chroma.Audio.IsEventPlaying
    isDefinition: true
    commentId: Overload:Chroma.Audio.IsEventPlaying
  Chroma.Audio.PlayEvent_Native*:
    name:
      CSharp:
      - id: Chroma.Audio.PlayEvent_Native*
        name: PlayEvent_Native
        nameWithType: Audio.PlayEvent_Native
        qualifiedName: Chroma.Audio.PlayEvent_Native
        isExternal: true
      VB:
      - id: Chroma.Audio.PlayEvent_Native*
        name: PlayEvent_Native
        nameWithType: Audio.PlayEvent_Native
        qualifiedName: Chroma.Audio.PlayEvent_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Audio.PlayEvent_Native
  Chroma.Audio.PlayEventIfStopped_Native*:
    name:
      CSharp:
      - id: Chroma.Audio.PlayEventIfStopped_Native*
        name: PlayEventIfStopped_Native
        nameWithType: Audio.PlayEventIfStopped_Native
        qualifiedName: Chroma.Audio.PlayEventIfStopped_Native
        isExternal: true
      VB:
      - id: Chroma.Audio.PlayEventIfStopped_Native*
        name: PlayEventIfStopped_Native
        nameWithType: Audio.PlayEventIfStopped_Native
        qualifiedName: Chroma.Audio.PlayEventIfStopped_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Audio.PlayEventIfStopped_Native
  Chroma.Audio.StopEvent_Native*:
    name:
      CSharp:
      - id: Chroma.Audio.StopEvent_Native*
        name: StopEvent_Native
        nameWithType: Audio.StopEvent_Native
        qualifiedName: Chroma.Audio.StopEvent_Native
        isExternal: true
      VB:
      - id: Chroma.Audio.StopEvent_Native*
        name: StopEvent_Native
        nameWithType: Audio.StopEvent_Native
        qualifiedName: Chroma.Audio.StopEvent_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Audio.StopEvent_Native
  Chroma.Audio.GetEventParameter_Native*:
    name:
      CSharp:
      - id: Chroma.Audio.GetEventParameter_Native*
        name: GetEventParameter_Native
        nameWithType: Audio.GetEventParameter_Native
        qualifiedName: Chroma.Audio.GetEventParameter_Native
        isExternal: true
      VB:
      - id: Chroma.Audio.GetEventParameter_Native*
        name: GetEventParameter_Native
        nameWithType: Audio.GetEventParameter_Native
        qualifiedName: Chroma.Audio.GetEventParameter_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Audio.GetEventParameter_Native
  Chroma.Audio.SetEventParameter_Native*:
    name:
      CSharp:
      - id: Chroma.Audio.SetEventParameter_Native*
        name: SetEventParameter_Native
        nameWithType: Audio.SetEventParameter_Native
        qualifiedName: Chroma.Audio.SetEventParameter_Native
        isExternal: true
      VB:
      - id: Chroma.Audio.SetEventParameter_Native*
        name: SetEventParameter_Native
        nameWithType: Audio.SetEventParameter_Native
        qualifiedName: Chroma.Audio.SetEventParameter_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Audio.SetEventParameter_Native
  Chroma.Audio.IsEventPlaying_Native*:
    name:
      CSharp:
      - id: Chroma.Audio.IsEventPlaying_Native*
        name: IsEventPlaying_Native
        nameWithType: Audio.IsEventPlaying_Native
        qualifiedName: Chroma.Audio.IsEventPlaying_Native
        isExternal: true
      VB:
      - id: Chroma.Audio.IsEventPlaying_Native*
        name: IsEventPlaying_Native
        nameWithType: Audio.IsEventPlaying_Native
        qualifiedName: Chroma.Audio.IsEventPlaying_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Audio.IsEventPlaying_Native
  Chroma.Audio:
    name:
      CSharp:
      - id: Chroma.Audio
        name: Audio
        nameWithType: Audio
        qualifiedName: Chroma.Audio
      VB:
      - id: Chroma.Audio
        name: Audio
        nameWithType: Audio
        qualifiedName: Chroma.Audio
    isDefinition: true
    commentId: T:Chroma.Audio
  Chroma:
    name:
      CSharp:
      - name: Chroma
        nameWithType: Chroma
        qualifiedName: Chroma
      VB:
      - name: Chroma
        nameWithType: Chroma
        qualifiedName: Chroma
    isDefinition: true
    commentId: N:Chroma
  Chroma.Entity:
    name:
      CSharp:
      - id: Chroma.Entity
        name: Entity
        nameWithType: Entity
        qualifiedName: Chroma.Entity
      VB:
      - id: Chroma.Entity
        name: Entity
        nameWithType: Entity
        qualifiedName: Chroma.Entity
    isDefinition: true
    parent: Chroma
    commentId: T:Chroma.Entity
  Chroma.Component.Entity*:
    name:
      CSharp:
      - id: Chroma.Component.Entity*
        name: Entity
        nameWithType: Component.Entity
        qualifiedName: Chroma.Component.Entity
      VB:
      - id: Chroma.Component.Entity*
        name: Entity
        nameWithType: Component.Entity
        qualifiedName: Chroma.Component.Entity
    isDefinition: true
    commentId: Overload:Chroma.Component.Entity
  Chroma.Component.Enabled*:
    name:
      CSharp:
      - id: Chroma.Component.Enabled*
        name: Enabled
        nameWithType: Component.Enabled
        qualifiedName: Chroma.Component.Enabled
      VB:
      - id: Chroma.Component.Enabled*
        name: Enabled
        nameWithType: Component.Enabled
        qualifiedName: Chroma.Component.Enabled
    isDefinition: true
    commentId: Overload:Chroma.Component.Enabled
  System.UInt64:
    name:
      CSharp:
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
      VB:
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UInt64
  System.Type:
    name:
      CSharp:
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      VB:
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Type
  Chroma.Component.GetEnabled_Native*:
    name:
      CSharp:
      - id: Chroma.Component.GetEnabled_Native*
        name: GetEnabled_Native
        nameWithType: Component.GetEnabled_Native
        qualifiedName: Chroma.Component.GetEnabled_Native
        isExternal: true
      VB:
      - id: Chroma.Component.GetEnabled_Native*
        name: GetEnabled_Native
        nameWithType: Component.GetEnabled_Native
        qualifiedName: Chroma.Component.GetEnabled_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Component.GetEnabled_Native
  Chroma.Component.SetEnabled_Native*:
    name:
      CSharp:
      - id: Chroma.Component.SetEnabled_Native*
        name: SetEnabled_Native
        nameWithType: Component.SetEnabled_Native
        qualifiedName: Chroma.Component.SetEnabled_Native
        isExternal: true
      VB:
      - id: Chroma.Component.SetEnabled_Native*
        name: SetEnabled_Native
        nameWithType: Component.SetEnabled_Native
        qualifiedName: Chroma.Component.SetEnabled_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Component.SetEnabled_Native
  Chroma.Component:
    name:
      CSharp:
      - id: Chroma.Component
        name: Component
        nameWithType: Component
        qualifiedName: Chroma.Component
      VB:
      - id: Chroma.Component
        name: Component
        nameWithType: Component
        qualifiedName: Chroma.Component
    isDefinition: true
    parent: Chroma
    commentId: T:Chroma.Component
  Chroma.Coroutine.Active*:
    name:
      CSharp:
      - id: Chroma.Coroutine.Active*
        name: Active
        nameWithType: Coroutine.Active
        qualifiedName: Chroma.Coroutine.Active
      VB:
      - id: Chroma.Coroutine.Active*
        name: Active
        nameWithType: Coroutine.Active
        qualifiedName: Chroma.Coroutine.Active
    isDefinition: true
    commentId: Overload:Chroma.Coroutine.Active
  Chroma.Coroutine.Finished*:
    name:
      CSharp:
      - id: Chroma.Coroutine.Finished*
        name: Finished
        nameWithType: Coroutine.Finished
        qualifiedName: Chroma.Coroutine.Finished
      VB:
      - id: Chroma.Coroutine.Finished*
        name: Finished
        nameWithType: Coroutine.Finished
        qualifiedName: Chroma.Coroutine.Finished
    isDefinition: true
    commentId: Overload:Chroma.Coroutine.Finished
  Chroma.Coroutine.CoroutineFunction:
    name:
      CSharp:
      - id: Chroma.Coroutine.CoroutineFunction
        name: Coroutine.CoroutineFunction
        nameWithType: Coroutine.CoroutineFunction
        qualifiedName: Chroma.Coroutine.CoroutineFunction
      VB:
      - id: Chroma.Coroutine.CoroutineFunction
        name: Coroutine.CoroutineFunction
        nameWithType: Coroutine.CoroutineFunction
        qualifiedName: Chroma.Coroutine.CoroutineFunction
    isDefinition: true
    parent: Chroma
    commentId: T:Chroma.Coroutine.CoroutineFunction
  Stack`1:
    name:
      CSharp:
      - id: Stack`1
        name: Stack
        nameWithType: Stack
        qualifiedName: Stack
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Stack`1
        name: Stack
        nameWithType: Stack
        qualifiedName: Stack
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Stack`1'
  Stack{IEnumerator}:
    name:
      CSharp:
      - id: Stack`1
        name: Stack
        nameWithType: Stack
        qualifiedName: Stack
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Stack`1
        name: Stack
        nameWithType: Stack
        qualifiedName: Stack
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Stack`1
    commentId: '!:Stack{IEnumerator}'
  Chroma.Coroutine.#ctor*:
    name:
      CSharp:
      - id: Chroma.Coroutine.#ctor*
        name: Coroutine
        nameWithType: Coroutine.Coroutine
        qualifiedName: Chroma.Coroutine.Coroutine
      VB:
      - id: Chroma.Coroutine.#ctor*
        name: Coroutine
        nameWithType: Coroutine.Coroutine
        qualifiedName: Chroma.Coroutine.Coroutine
    isDefinition: true
    commentId: Overload:Chroma.Coroutine.#ctor
  Chroma.Coroutine.Update*:
    name:
      CSharp:
      - id: Chroma.Coroutine.Update*
        name: Update
        nameWithType: Coroutine.Update
        qualifiedName: Chroma.Coroutine.Update
      VB:
      - id: Chroma.Coroutine.Update*
        name: Update
        nameWithType: Coroutine.Update
        qualifiedName: Chroma.Coroutine.Update
    isDefinition: true
    commentId: Overload:Chroma.Coroutine.Update
  Chroma.Coroutine.Start*:
    name:
      CSharp:
      - id: Chroma.Coroutine.Start*
        name: Start
        nameWithType: Coroutine.Start
        qualifiedName: Chroma.Coroutine.Start
      VB:
      - id: Chroma.Coroutine.Start*
        name: Start
        nameWithType: Coroutine.Start
        qualifiedName: Chroma.Coroutine.Start
    isDefinition: true
    commentId: Overload:Chroma.Coroutine.Start
  Chroma.Coroutine.Pause*:
    name:
      CSharp:
      - id: Chroma.Coroutine.Pause*
        name: Pause
        nameWithType: Coroutine.Pause
        qualifiedName: Chroma.Coroutine.Pause
      VB:
      - id: Chroma.Coroutine.Pause*
        name: Pause
        nameWithType: Coroutine.Pause
        qualifiedName: Chroma.Coroutine.Pause
    isDefinition: true
    commentId: Overload:Chroma.Coroutine.Pause
  Chroma.Coroutine.Resume*:
    name:
      CSharp:
      - id: Chroma.Coroutine.Resume*
        name: Resume
        nameWithType: Coroutine.Resume
        qualifiedName: Chroma.Coroutine.Resume
      VB:
      - id: Chroma.Coroutine.Resume*
        name: Resume
        nameWithType: Coroutine.Resume
        qualifiedName: Chroma.Coroutine.Resume
    isDefinition: true
    commentId: Overload:Chroma.Coroutine.Resume
  Chroma.Coroutine.Restart*:
    name:
      CSharp:
      - id: Chroma.Coroutine.Restart*
        name: Restart
        nameWithType: Coroutine.Restart
        qualifiedName: Chroma.Coroutine.Restart
      VB:
      - id: Chroma.Coroutine.Restart*
        name: Restart
        nameWithType: Coroutine.Restart
        qualifiedName: Chroma.Coroutine.Restart
    isDefinition: true
    commentId: Overload:Chroma.Coroutine.Restart
  Chroma.Coroutine.Stop*:
    name:
      CSharp:
      - id: Chroma.Coroutine.Stop*
        name: Stop
        nameWithType: Coroutine.Stop
        qualifiedName: Chroma.Coroutine.Stop
      VB:
      - id: Chroma.Coroutine.Stop*
        name: Stop
        nameWithType: Coroutine.Stop
        qualifiedName: Chroma.Coroutine.Stop
    isDefinition: true
    commentId: Overload:Chroma.Coroutine.Stop
  Chroma.Coroutine.Set*:
    name:
      CSharp:
      - id: Chroma.Coroutine.Set*
        name: Set
        nameWithType: Coroutine.Set
        qualifiedName: Chroma.Coroutine.Set
      VB:
      - id: Chroma.Coroutine.Set*
        name: Set
        nameWithType: Coroutine.Set
        qualifiedName: Chroma.Coroutine.Set
    isDefinition: true
    commentId: Overload:Chroma.Coroutine.Set
  Chroma.Coroutine:
    name:
      CSharp:
      - id: Chroma.Coroutine
        name: Coroutine
        nameWithType: Coroutine
        qualifiedName: Chroma.Coroutine
      VB:
      - id: Chroma.Coroutine
        name: Coroutine
        nameWithType: Coroutine
        qualifiedName: Chroma.Coroutine
    isDefinition: true
    parent: Chroma
    commentId: T:Chroma.Coroutine
  IEnumerator:
    name:
      CSharp:
      - id: IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      VB:
      - id: IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
    isDefinition: true
    commentId: '!:IEnumerator'
  Chroma.Entity.ID*:
    name:
      CSharp:
      - id: Chroma.Entity.ID*
        name: ID
        nameWithType: Entity.ID
        qualifiedName: Chroma.Entity.ID
      VB:
      - id: Chroma.Entity.ID*
        name: ID
        nameWithType: Entity.ID
        qualifiedName: Chroma.Entity.ID
    isDefinition: true
    commentId: Overload:Chroma.Entity.ID
  Chroma.Entity.Name*:
    name:
      CSharp:
      - id: Chroma.Entity.Name*
        name: Name
        nameWithType: Entity.Name
        qualifiedName: Chroma.Entity.Name
      VB:
      - id: Chroma.Entity.Name*
        name: Name
        nameWithType: Entity.Name
        qualifiedName: Chroma.Entity.Name
    isDefinition: true
    commentId: Overload:Chroma.Entity.Name
  Chroma.Entity.#ctor*:
    name:
      CSharp:
      - id: Chroma.Entity.#ctor*
        name: Entity
        nameWithType: Entity.Entity
        qualifiedName: Chroma.Entity.Entity
      VB:
      - id: Chroma.Entity.#ctor*
        name: Entity
        nameWithType: Entity.Entity
        qualifiedName: Chroma.Entity.Entity
    isDefinition: true
    commentId: Overload:Chroma.Entity.#ctor
  Chroma.Entity.Finalize*:
    name:
      CSharp:
      - id: Chroma.Entity.Finalize*
        name: Finalize
        nameWithType: Entity.Finalize
        qualifiedName: Chroma.Entity.Finalize
      VB:
      - id: Chroma.Entity.Finalize*
        name: Finalize
        nameWithType: Entity.Finalize
        qualifiedName: Chroma.Entity.Finalize
    isDefinition: true
    commentId: Overload:Chroma.Entity.Finalize
  List`1:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  List{Chroma.Coroutine}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Chroma.Coroutine
        name: Coroutine
        nameWithType: Coroutine
        qualifiedName: Chroma.Coroutine
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Chroma.Coroutine
        name: Coroutine
        nameWithType: Coroutine
        qualifiedName: Chroma.Coroutine
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{Chroma.Coroutine}'
  Chroma.Entity.CreateCoroutine*:
    name:
      CSharp:
      - id: Chroma.Entity.CreateCoroutine*
        name: CreateCoroutine
        nameWithType: Entity.CreateCoroutine
        qualifiedName: Chroma.Entity.CreateCoroutine
      VB:
      - id: Chroma.Entity.CreateCoroutine*
        name: CreateCoroutine
        nameWithType: Entity.CreateCoroutine
        qualifiedName: Chroma.Entity.CreateCoroutine
    isDefinition: true
    commentId: Overload:Chroma.Entity.CreateCoroutine
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  Chroma.Entity.CreateComponent*:
    name:
      CSharp:
      - id: Chroma.Entity.CreateComponent*
        name: CreateComponent
        nameWithType: Entity.CreateComponent
        qualifiedName: Chroma.Entity.CreateComponent
      VB:
      - id: Chroma.Entity.CreateComponent*
        name: CreateComponent
        nameWithType: Entity.CreateComponent
        qualifiedName: Chroma.Entity.CreateComponent
    isDefinition: true
    commentId: Overload:Chroma.Entity.CreateComponent
  Chroma.Entity.HasComponent*:
    name:
      CSharp:
      - id: Chroma.Entity.HasComponent*
        name: HasComponent
        nameWithType: Entity.HasComponent
        qualifiedName: Chroma.Entity.HasComponent
      VB:
      - id: Chroma.Entity.HasComponent*
        name: HasComponent
        nameWithType: Entity.HasComponent
        qualifiedName: Chroma.Entity.HasComponent
    isDefinition: true
    commentId: Overload:Chroma.Entity.HasComponent
  Chroma.Entity.GetComponent*:
    name:
      CSharp:
      - id: Chroma.Entity.GetComponent*
        name: GetComponent
        nameWithType: Entity.GetComponent
        qualifiedName: Chroma.Entity.GetComponent
      VB:
      - id: Chroma.Entity.GetComponent*
        name: GetComponent
        nameWithType: Entity.GetComponent
        qualifiedName: Chroma.Entity.GetComponent
    isDefinition: true
    commentId: Overload:Chroma.Entity.GetComponent
  Chroma.Entity.FindEntityByName*:
    name:
      CSharp:
      - id: Chroma.Entity.FindEntityByName*
        name: FindEntityByName
        nameWithType: Entity.FindEntityByName
        qualifiedName: Chroma.Entity.FindEntityByName
      VB:
      - id: Chroma.Entity.FindEntityByName*
        name: FindEntityByName
        nameWithType: Entity.FindEntityByName
        qualifiedName: Chroma.Entity.FindEntityByName
    isDefinition: true
    commentId: Overload:Chroma.Entity.FindEntityByName
  List{Chroma.Entity}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Chroma.Entity
        name: Entity
        nameWithType: Entity
        qualifiedName: Chroma.Entity
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Chroma.Entity
        name: Entity
        nameWithType: Entity
        qualifiedName: Chroma.Entity
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{Chroma.Entity}'
  Chroma.Entity.GetChildren*:
    name:
      CSharp:
      - id: Chroma.Entity.GetChildren*
        name: GetChildren
        nameWithType: Entity.GetChildren
        qualifiedName: Chroma.Entity.GetChildren
      VB:
      - id: Chroma.Entity.GetChildren*
        name: GetChildren
        nameWithType: Entity.GetChildren
        qualifiedName: Chroma.Entity.GetChildren
    isDefinition: true
    commentId: Overload:Chroma.Entity.GetChildren
  Chroma.Entity.GetChildByName*:
    name:
      CSharp:
      - id: Chroma.Entity.GetChildByName*
        name: GetChildByName
        nameWithType: Entity.GetChildByName
        qualifiedName: Chroma.Entity.GetChildByName
      VB:
      - id: Chroma.Entity.GetChildByName*
        name: GetChildByName
        nameWithType: Entity.GetChildByName
        qualifiedName: Chroma.Entity.GetChildByName
    isDefinition: true
    commentId: Overload:Chroma.Entity.GetChildByName
  Chroma.Entity.GetFirstChild*:
    name:
      CSharp:
      - id: Chroma.Entity.GetFirstChild*
        name: GetFirstChild
        nameWithType: Entity.GetFirstChild
        qualifiedName: Chroma.Entity.GetFirstChild
      VB:
      - id: Chroma.Entity.GetFirstChild*
        name: GetFirstChild
        nameWithType: Entity.GetFirstChild
        qualifiedName: Chroma.Entity.GetFirstChild
    isDefinition: true
    commentId: Overload:Chroma.Entity.GetFirstChild
  Chroma.Entity.HasChildren*:
    name:
      CSharp:
      - id: Chroma.Entity.HasChildren*
        name: HasChildren
        nameWithType: Entity.HasChildren
        qualifiedName: Chroma.Entity.HasChildren
      VB:
      - id: Chroma.Entity.HasChildren*
        name: HasChildren
        nameWithType: Entity.HasChildren
        qualifiedName: Chroma.Entity.HasChildren
    isDefinition: true
    commentId: Overload:Chroma.Entity.HasChildren
  System.UInt32:
    name:
      CSharp:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      VB:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UInt32
  Chroma.Entity.NumberChildren*:
    name:
      CSharp:
      - id: Chroma.Entity.NumberChildren*
        name: NumberChildren
        nameWithType: Entity.NumberChildren
        qualifiedName: Chroma.Entity.NumberChildren
      VB:
      - id: Chroma.Entity.NumberChildren*
        name: NumberChildren
        nameWithType: Entity.NumberChildren
        qualifiedName: Chroma.Entity.NumberChildren
    isDefinition: true
    commentId: Overload:Chroma.Entity.NumberChildren
  Chroma.Vector2:
    name:
      CSharp:
      - id: Chroma.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Chroma.Vector2
      VB:
      - id: Chroma.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Chroma.Vector2
    isDefinition: true
    parent: Chroma
    commentId: T:Chroma.Vector2
  Chroma.Entity.GetAbsolutePosition*:
    name:
      CSharp:
      - id: Chroma.Entity.GetAbsolutePosition*
        name: GetAbsolutePosition
        nameWithType: Entity.GetAbsolutePosition
        qualifiedName: Chroma.Entity.GetAbsolutePosition
      VB:
      - id: Chroma.Entity.GetAbsolutePosition*
        name: GetAbsolutePosition
        nameWithType: Entity.GetAbsolutePosition
        qualifiedName: Chroma.Entity.GetAbsolutePosition
    isDefinition: true
    commentId: Overload:Chroma.Entity.GetAbsolutePosition
  Chroma.Entity.SetAbsolutePosition*:
    name:
      CSharp:
      - id: Chroma.Entity.SetAbsolutePosition*
        name: SetAbsolutePosition
        nameWithType: Entity.SetAbsolutePosition
        qualifiedName: Chroma.Entity.SetAbsolutePosition
      VB:
      - id: Chroma.Entity.SetAbsolutePosition*
        name: SetAbsolutePosition
        nameWithType: Entity.SetAbsolutePosition
        qualifiedName: Chroma.Entity.SetAbsolutePosition
    isDefinition: true
    commentId: Overload:Chroma.Entity.SetAbsolutePosition
  Chroma.Entity.PreInit*:
    name:
      CSharp:
      - id: Chroma.Entity.PreInit*
        name: PreInit
        nameWithType: Entity.PreInit
        qualifiedName: Chroma.Entity.PreInit
      VB:
      - id: Chroma.Entity.PreInit*
        name: PreInit
        nameWithType: Entity.PreInit
        qualifiedName: Chroma.Entity.PreInit
    isDefinition: true
    commentId: Overload:Chroma.Entity.PreInit
  Chroma.Entity.Init*:
    name:
      CSharp:
      - id: Chroma.Entity.Init*
        name: Init
        nameWithType: Entity.Init
        qualifiedName: Chroma.Entity.Init
      VB:
      - id: Chroma.Entity.Init*
        name: Init
        nameWithType: Entity.Init
        qualifiedName: Chroma.Entity.Init
    isDefinition: true
    commentId: Overload:Chroma.Entity.Init
  Chroma.Entity.PostInit*:
    name:
      CSharp:
      - id: Chroma.Entity.PostInit*
        name: PostInit
        nameWithType: Entity.PostInit
        qualifiedName: Chroma.Entity.PostInit
      VB:
      - id: Chroma.Entity.PostInit*
        name: PostInit
        nameWithType: Entity.PostInit
        qualifiedName: Chroma.Entity.PostInit
    isDefinition: true
    commentId: Overload:Chroma.Entity.PostInit
  Chroma.Entity.EarlyStart*:
    name:
      CSharp:
      - id: Chroma.Entity.EarlyStart*
        name: EarlyStart
        nameWithType: Entity.EarlyStart
        qualifiedName: Chroma.Entity.EarlyStart
      VB:
      - id: Chroma.Entity.EarlyStart*
        name: EarlyStart
        nameWithType: Entity.EarlyStart
        qualifiedName: Chroma.Entity.EarlyStart
    isDefinition: true
    commentId: Overload:Chroma.Entity.EarlyStart
  Chroma.Entity.Start*:
    name:
      CSharp:
      - id: Chroma.Entity.Start*
        name: Start
        nameWithType: Entity.Start
        qualifiedName: Chroma.Entity.Start
      VB:
      - id: Chroma.Entity.Start*
        name: Start
        nameWithType: Entity.Start
        qualifiedName: Chroma.Entity.Start
    isDefinition: true
    commentId: Overload:Chroma.Entity.Start
  Chroma.Entity.LateStart*:
    name:
      CSharp:
      - id: Chroma.Entity.LateStart*
        name: LateStart
        nameWithType: Entity.LateStart
        qualifiedName: Chroma.Entity.LateStart
      VB:
      - id: Chroma.Entity.LateStart*
        name: LateStart
        nameWithType: Entity.LateStart
        qualifiedName: Chroma.Entity.LateStart
    isDefinition: true
    commentId: Overload:Chroma.Entity.LateStart
  Chroma.Entity.EarlyUpdate*:
    name:
      CSharp:
      - id: Chroma.Entity.EarlyUpdate*
        name: EarlyUpdate
        nameWithType: Entity.EarlyUpdate
        qualifiedName: Chroma.Entity.EarlyUpdate
      VB:
      - id: Chroma.Entity.EarlyUpdate*
        name: EarlyUpdate
        nameWithType: Entity.EarlyUpdate
        qualifiedName: Chroma.Entity.EarlyUpdate
    isDefinition: true
    commentId: Overload:Chroma.Entity.EarlyUpdate
  Chroma.Entity.Update*:
    name:
      CSharp:
      - id: Chroma.Entity.Update*
        name: Update
        nameWithType: Entity.Update
        qualifiedName: Chroma.Entity.Update
      VB:
      - id: Chroma.Entity.Update*
        name: Update
        nameWithType: Entity.Update
        qualifiedName: Chroma.Entity.Update
    isDefinition: true
    commentId: Overload:Chroma.Entity.Update
  Chroma.Entity.LateUpdate*:
    name:
      CSharp:
      - id: Chroma.Entity.LateUpdate*
        name: LateUpdate
        nameWithType: Entity.LateUpdate
        qualifiedName: Chroma.Entity.LateUpdate
      VB:
      - id: Chroma.Entity.LateUpdate*
        name: LateUpdate
        nameWithType: Entity.LateUpdate
        qualifiedName: Chroma.Entity.LateUpdate
    isDefinition: true
    commentId: Overload:Chroma.Entity.LateUpdate
  Chroma.Entity.InternalUpdate*:
    name:
      CSharp:
      - id: Chroma.Entity.InternalUpdate*
        name: InternalUpdate
        nameWithType: Entity.InternalUpdate
        qualifiedName: Chroma.Entity.InternalUpdate
      VB:
      - id: Chroma.Entity.InternalUpdate*
        name: InternalUpdate
        nameWithType: Entity.InternalUpdate
        qualifiedName: Chroma.Entity.InternalUpdate
    isDefinition: true
    commentId: Overload:Chroma.Entity.InternalUpdate
  Chroma.Entity.CreateComponent_Native*:
    name:
      CSharp:
      - id: Chroma.Entity.CreateComponent_Native*
        name: CreateComponent_Native
        nameWithType: Entity.CreateComponent_Native
        qualifiedName: Chroma.Entity.CreateComponent_Native
        isExternal: true
      VB:
      - id: Chroma.Entity.CreateComponent_Native*
        name: CreateComponent_Native
        nameWithType: Entity.CreateComponent_Native
        qualifiedName: Chroma.Entity.CreateComponent_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Entity.CreateComponent_Native
  Chroma.Entity.HasComponent_Native*:
    name:
      CSharp:
      - id: Chroma.Entity.HasComponent_Native*
        name: HasComponent_Native
        nameWithType: Entity.HasComponent_Native
        qualifiedName: Chroma.Entity.HasComponent_Native
        isExternal: true
      VB:
      - id: Chroma.Entity.HasComponent_Native*
        name: HasComponent_Native
        nameWithType: Entity.HasComponent_Native
        qualifiedName: Chroma.Entity.HasComponent_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Entity.HasComponent_Native
  Chroma.Entity.FindEntityByName_Native*:
    name:
      CSharp:
      - id: Chroma.Entity.FindEntityByName_Native*
        name: FindEntityByName_Native
        nameWithType: Entity.FindEntityByName_Native
        qualifiedName: Chroma.Entity.FindEntityByName_Native
        isExternal: true
      VB:
      - id: Chroma.Entity.FindEntityByName_Native*
        name: FindEntityByName_Native
        nameWithType: Entity.FindEntityByName_Native
        qualifiedName: Chroma.Entity.FindEntityByName_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Entity.FindEntityByName_Native
  List{System.UInt64}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{System.UInt64}'
  Chroma.Entity.GetChildren_Native*:
    name:
      CSharp:
      - id: Chroma.Entity.GetChildren_Native*
        name: GetChildren_Native
        nameWithType: Entity.GetChildren_Native
        qualifiedName: Chroma.Entity.GetChildren_Native
        isExternal: true
      VB:
      - id: Chroma.Entity.GetChildren_Native*
        name: GetChildren_Native
        nameWithType: Entity.GetChildren_Native
        qualifiedName: Chroma.Entity.GetChildren_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Entity.GetChildren_Native
  Chroma.Entity.GetChildByName_Native*:
    name:
      CSharp:
      - id: Chroma.Entity.GetChildByName_Native*
        name: GetChildByName_Native
        nameWithType: Entity.GetChildByName_Native
        qualifiedName: Chroma.Entity.GetChildByName_Native
        isExternal: true
      VB:
      - id: Chroma.Entity.GetChildByName_Native*
        name: GetChildByName_Native
        nameWithType: Entity.GetChildByName_Native
        qualifiedName: Chroma.Entity.GetChildByName_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Entity.GetChildByName_Native
  Chroma.Entity.GetFirstChild_Native*:
    name:
      CSharp:
      - id: Chroma.Entity.GetFirstChild_Native*
        name: GetFirstChild_Native
        nameWithType: Entity.GetFirstChild_Native
        qualifiedName: Chroma.Entity.GetFirstChild_Native
        isExternal: true
      VB:
      - id: Chroma.Entity.GetFirstChild_Native*
        name: GetFirstChild_Native
        nameWithType: Entity.GetFirstChild_Native
        qualifiedName: Chroma.Entity.GetFirstChild_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Entity.GetFirstChild_Native
  Chroma.Entity.HasChildren_Native*:
    name:
      CSharp:
      - id: Chroma.Entity.HasChildren_Native*
        name: HasChildren_Native
        nameWithType: Entity.HasChildren_Native
        qualifiedName: Chroma.Entity.HasChildren_Native
        isExternal: true
      VB:
      - id: Chroma.Entity.HasChildren_Native*
        name: HasChildren_Native
        nameWithType: Entity.HasChildren_Native
        qualifiedName: Chroma.Entity.HasChildren_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Entity.HasChildren_Native
  Chroma.Entity.NumChildren_Native*:
    name:
      CSharp:
      - id: Chroma.Entity.NumChildren_Native*
        name: NumChildren_Native
        nameWithType: Entity.NumChildren_Native
        qualifiedName: Chroma.Entity.NumChildren_Native
        isExternal: true
      VB:
      - id: Chroma.Entity.NumChildren_Native*
        name: NumChildren_Native
        nameWithType: Entity.NumChildren_Native
        qualifiedName: Chroma.Entity.NumChildren_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Entity.NumChildren_Native
  Chroma.Entity.GetAbsolutePosition_Native*:
    name:
      CSharp:
      - id: Chroma.Entity.GetAbsolutePosition_Native*
        name: GetAbsolutePosition_Native
        nameWithType: Entity.GetAbsolutePosition_Native
        qualifiedName: Chroma.Entity.GetAbsolutePosition_Native
        isExternal: true
      VB:
      - id: Chroma.Entity.GetAbsolutePosition_Native*
        name: GetAbsolutePosition_Native
        nameWithType: Entity.GetAbsolutePosition_Native
        qualifiedName: Chroma.Entity.GetAbsolutePosition_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Entity.GetAbsolutePosition_Native
  Chroma.Entity.SetAbsolutePosition_Native*:
    name:
      CSharp:
      - id: Chroma.Entity.SetAbsolutePosition_Native*
        name: SetAbsolutePosition_Native
        nameWithType: Entity.SetAbsolutePosition_Native
        qualifiedName: Chroma.Entity.SetAbsolutePosition_Native
        isExternal: true
      VB:
      - id: Chroma.Entity.SetAbsolutePosition_Native*
        name: SetAbsolutePosition_Native
        nameWithType: Entity.SetAbsolutePosition_Native
        qualifiedName: Chroma.Entity.SetAbsolutePosition_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Entity.SetAbsolutePosition_Native
  Joystick:
    name:
      CSharp:
      - id: Joystick
        name: Joystick
        nameWithType: Joystick
        qualifiedName: Joystick
        isExternal: true
      VB:
      - id: Joystick
        name: Joystick
        nameWithType: Joystick
        qualifiedName: Joystick
        isExternal: true
    isDefinition: true
  Chroma.Input.Key:
    name:
      CSharp:
      - id: Chroma.Input.Key
        name: Input.Key
        nameWithType: Input.Key
        qualifiedName: Chroma.Input.Key
      VB:
      - id: Chroma.Input.Key
        name: Input.Key
        nameWithType: Input.Key
        qualifiedName: Chroma.Input.Key
    isDefinition: true
    parent: Chroma
    commentId: T:Chroma.Input.Key
  Chroma.Input.IsPressed*:
    name:
      CSharp:
      - id: Chroma.Input.IsPressed*
        name: IsPressed
        nameWithType: Input.IsPressed
        qualifiedName: Chroma.Input.IsPressed
      VB:
      - id: Chroma.Input.IsPressed*
        name: IsPressed
        nameWithType: Input.IsPressed
        qualifiedName: Chroma.Input.IsPressed
    isDefinition: true
    commentId: Overload:Chroma.Input.IsPressed
  Chroma.Input.Mouse:
    name:
      CSharp:
      - id: Chroma.Input.Mouse
        name: Input.Mouse
        nameWithType: Input.Mouse
        qualifiedName: Chroma.Input.Mouse
      VB:
      - id: Chroma.Input.Mouse
        name: Input.Mouse
        nameWithType: Input.Mouse
        qualifiedName: Chroma.Input.Mouse
    isDefinition: true
    parent: Chroma
    commentId: T:Chroma.Input.Mouse
  Chroma.Input.GamepadButton:
    name:
      CSharp:
      - id: Chroma.Input.GamepadButton
        name: Input.GamepadButton
        nameWithType: Input.GamepadButton
        qualifiedName: Chroma.Input.GamepadButton
      VB:
      - id: Chroma.Input.GamepadButton
        name: Input.GamepadButton
        nameWithType: Input.GamepadButton
        qualifiedName: Chroma.Input.GamepadButton
    isDefinition: true
    parent: Chroma
    commentId: T:Chroma.Input.GamepadButton
  Chroma.Input.Gamepad:
    name:
      CSharp:
      - id: Chroma.Input.Gamepad
        name: Input.Gamepad
        nameWithType: Input.Gamepad
        qualifiedName: Chroma.Input.Gamepad
      VB:
      - id: Chroma.Input.Gamepad
        name: Input.Gamepad
        nameWithType: Input.Gamepad
        qualifiedName: Chroma.Input.Gamepad
    isDefinition: true
    parent: Chroma
    commentId: T:Chroma.Input.Gamepad
  Chroma.Input.GetMousePos*:
    name:
      CSharp:
      - id: Chroma.Input.GetMousePos*
        name: GetMousePos
        nameWithType: Input.GetMousePos
        qualifiedName: Chroma.Input.GetMousePos
      VB:
      - id: Chroma.Input.GetMousePos*
        name: GetMousePos
        nameWithType: Input.GetMousePos
        qualifiedName: Chroma.Input.GetMousePos
    isDefinition: true
    commentId: Overload:Chroma.Input.GetMousePos
  Chroma.Input.GetMouseX*:
    name:
      CSharp:
      - id: Chroma.Input.GetMouseX*
        name: GetMouseX
        nameWithType: Input.GetMouseX
        qualifiedName: Chroma.Input.GetMouseX
      VB:
      - id: Chroma.Input.GetMouseX*
        name: GetMouseX
        nameWithType: Input.GetMouseX
        qualifiedName: Chroma.Input.GetMouseX
    isDefinition: true
    commentId: Overload:Chroma.Input.GetMouseX
  Chroma.Input.GetMouseY*:
    name:
      CSharp:
      - id: Chroma.Input.GetMouseY*
        name: GetMouseY
        nameWithType: Input.GetMouseY
        qualifiedName: Chroma.Input.GetMouseY
      VB:
      - id: Chroma.Input.GetMouseY*
        name: GetMouseY
        nameWithType: Input.GetMouseY
        qualifiedName: Chroma.Input.GetMouseY
    isDefinition: true
    commentId: Overload:Chroma.Input.GetMouseY
  Chroma.Input.IsJoystickConnected*:
    name:
      CSharp:
      - id: Chroma.Input.IsJoystickConnected*
        name: IsJoystickConnected
        nameWithType: Input.IsJoystickConnected
        qualifiedName: Chroma.Input.IsJoystickConnected
      VB:
      - id: Chroma.Input.IsJoystickConnected*
        name: IsJoystickConnected
        nameWithType: Input.IsJoystickConnected
        qualifiedName: Chroma.Input.IsJoystickConnected
    isDefinition: true
    commentId: Overload:Chroma.Input.IsJoystickConnected
  Chroma.Input.GetFirstConnectedGamepad*:
    name:
      CSharp:
      - id: Chroma.Input.GetFirstConnectedGamepad*
        name: GetFirstConnectedGamepad
        nameWithType: Input.GetFirstConnectedGamepad
        qualifiedName: Chroma.Input.GetFirstConnectedGamepad
      VB:
      - id: Chroma.Input.GetFirstConnectedGamepad*
        name: GetFirstConnectedGamepad
        nameWithType: Input.GetFirstConnectedGamepad
        qualifiedName: Chroma.Input.GetFirstConnectedGamepad
    isDefinition: true
    commentId: Overload:Chroma.Input.GetFirstConnectedGamepad
  List{Chroma.Input.Gamepad}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Chroma.Input.Gamepad
        name: Input.Gamepad
        nameWithType: Input.Gamepad
        qualifiedName: Chroma.Input.Gamepad
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Chroma.Input.Gamepad
        name: Input.Gamepad
        nameWithType: Input.Gamepad
        qualifiedName: Chroma.Input.Gamepad
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{Chroma.Input.Gamepad}'
  Chroma.Input.GetAllConnectedControllers*:
    name:
      CSharp:
      - id: Chroma.Input.GetAllConnectedControllers*
        name: GetAllConnectedControllers
        nameWithType: Input.GetAllConnectedControllers
        qualifiedName: Chroma.Input.GetAllConnectedControllers
      VB:
      - id: Chroma.Input.GetAllConnectedControllers*
        name: GetAllConnectedControllers
        nameWithType: Input.GetAllConnectedControllers
        qualifiedName: Chroma.Input.GetAllConnectedControllers
    isDefinition: true
    commentId: Overload:Chroma.Input.GetAllConnectedControllers
  Chroma.Input.SetPrimaryGamepad*:
    name:
      CSharp:
      - id: Chroma.Input.SetPrimaryGamepad*
        name: SetPrimaryGamepad
        nameWithType: Input.SetPrimaryGamepad
        qualifiedName: Chroma.Input.SetPrimaryGamepad
      VB:
      - id: Chroma.Input.SetPrimaryGamepad*
        name: SetPrimaryGamepad
        nameWithType: Input.SetPrimaryGamepad
        qualifiedName: Chroma.Input.SetPrimaryGamepad
    isDefinition: true
    commentId: Overload:Chroma.Input.SetPrimaryGamepad
  List{System.Single}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{System.Single}'
  Chroma.Input.GetGamepadAxis*:
    name:
      CSharp:
      - id: Chroma.Input.GetGamepadAxis*
        name: GetGamepadAxis
        nameWithType: Input.GetGamepadAxis
        qualifiedName: Chroma.Input.GetGamepadAxis
      VB:
      - id: Chroma.Input.GetGamepadAxis*
        name: GetGamepadAxis
        nameWithType: Input.GetGamepadAxis
        qualifiedName: Chroma.Input.GetGamepadAxis
    isDefinition: true
    commentId: Overload:Chroma.Input.GetGamepadAxis
  Chroma.Input.ConnectionState:
    name:
      CSharp:
      - id: Chroma.Input.ConnectionState
        name: Input.ConnectionState
        nameWithType: Input.ConnectionState
        qualifiedName: Chroma.Input.ConnectionState
      VB:
      - id: Chroma.Input.ConnectionState
        name: Input.ConnectionState
        nameWithType: Input.ConnectionState
        qualifiedName: Chroma.Input.ConnectionState
    isDefinition: true
    parent: Chroma
    commentId: T:Chroma.Input.ConnectionState
  Chroma.Input.GetGamepadConnectionState*:
    name:
      CSharp:
      - id: Chroma.Input.GetGamepadConnectionState*
        name: GetGamepadConnectionState
        nameWithType: Input.GetGamepadConnectionState
        qualifiedName: Chroma.Input.GetGamepadConnectionState
      VB:
      - id: Chroma.Input.GetGamepadConnectionState*
        name: GetGamepadConnectionState
        nameWithType: Input.GetGamepadConnectionState
        qualifiedName: Chroma.Input.GetGamepadConnectionState
    isDefinition: true
    commentId: Overload:Chroma.Input.GetGamepadConnectionState
  Chroma.Input.GetGamepadName*:
    name:
      CSharp:
      - id: Chroma.Input.GetGamepadName*
        name: GetGamepadName
        nameWithType: Input.GetGamepadName
        qualifiedName: Chroma.Input.GetGamepadName
      VB:
      - id: Chroma.Input.GetGamepadName*
        name: GetGamepadName
        nameWithType: Input.GetGamepadName
        qualifiedName: Chroma.Input.GetGamepadName
    isDefinition: true
    commentId: Overload:Chroma.Input.GetGamepadName
  System.Action`1:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Action`1
  System.Action{Chroma.Input.Gamepad}:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Chroma.Input.Gamepad
        name: Input.Gamepad
        nameWithType: Input.Gamepad
        qualifiedName: Chroma.Input.Gamepad
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Chroma.Input.Gamepad
        name: Input.Gamepad
        nameWithType: Input.Gamepad
        qualifiedName: Chroma.Input.Gamepad
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Action`1
    parent: System
    commentId: T:System.Action{Chroma.Input.Gamepad}
  Chroma.Input.SetGamepadConnectionCallback*:
    name:
      CSharp:
      - id: Chroma.Input.SetGamepadConnectionCallback*
        name: SetGamepadConnectionCallback
        nameWithType: Input.SetGamepadConnectionCallback
        qualifiedName: Chroma.Input.SetGamepadConnectionCallback
      VB:
      - id: Chroma.Input.SetGamepadConnectionCallback*
        name: SetGamepadConnectionCallback
        nameWithType: Input.SetGamepadConnectionCallback
        qualifiedName: Chroma.Input.SetGamepadConnectionCallback
    isDefinition: true
    commentId: Overload:Chroma.Input.SetGamepadConnectionCallback
  Chroma.Input.SetGamepadDisconnectionCallback*:
    name:
      CSharp:
      - id: Chroma.Input.SetGamepadDisconnectionCallback*
        name: SetGamepadDisconnectionCallback
        nameWithType: Input.SetGamepadDisconnectionCallback
        qualifiedName: Chroma.Input.SetGamepadDisconnectionCallback
      VB:
      - id: Chroma.Input.SetGamepadDisconnectionCallback*
        name: SetGamepadDisconnectionCallback
        nameWithType: Input.SetGamepadDisconnectionCallback
        qualifiedName: Chroma.Input.SetGamepadDisconnectionCallback
    isDefinition: true
    commentId: Overload:Chroma.Input.SetGamepadDisconnectionCallback
  Chroma.Input.IsKeyPressed_Native*:
    name:
      CSharp:
      - id: Chroma.Input.IsKeyPressed_Native*
        name: IsKeyPressed_Native
        nameWithType: Input.IsKeyPressed_Native
        qualifiedName: Chroma.Input.IsKeyPressed_Native
        isExternal: true
      VB:
      - id: Chroma.Input.IsKeyPressed_Native*
        name: IsKeyPressed_Native
        nameWithType: Input.IsKeyPressed_Native
        qualifiedName: Chroma.Input.IsKeyPressed_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Input.IsKeyPressed_Native
  Chroma.Input.IsMouseButtonPressed_Native*:
    name:
      CSharp:
      - id: Chroma.Input.IsMouseButtonPressed_Native*
        name: IsMouseButtonPressed_Native
        nameWithType: Input.IsMouseButtonPressed_Native
        qualifiedName: Chroma.Input.IsMouseButtonPressed_Native
        isExternal: true
      VB:
      - id: Chroma.Input.IsMouseButtonPressed_Native*
        name: IsMouseButtonPressed_Native
        nameWithType: Input.IsMouseButtonPressed_Native
        qualifiedName: Chroma.Input.IsMouseButtonPressed_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Input.IsMouseButtonPressed_Native
  Chroma.Input.IsJoystickConnected_Native*:
    name:
      CSharp:
      - id: Chroma.Input.IsJoystickConnected_Native*
        name: IsJoystickConnected_Native
        nameWithType: Input.IsJoystickConnected_Native
        qualifiedName: Chroma.Input.IsJoystickConnected_Native
        isExternal: true
      VB:
      - id: Chroma.Input.IsJoystickConnected_Native*
        name: IsJoystickConnected_Native
        nameWithType: Input.IsJoystickConnected_Native
        qualifiedName: Chroma.Input.IsJoystickConnected_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Input.IsJoystickConnected_Native
  Chroma.Input.GetMousePosition_Native*:
    name:
      CSharp:
      - id: Chroma.Input.GetMousePosition_Native*
        name: GetMousePosition_Native
        nameWithType: Input.GetMousePosition_Native
        qualifiedName: Chroma.Input.GetMousePosition_Native
        isExternal: true
      VB:
      - id: Chroma.Input.GetMousePosition_Native*
        name: GetMousePosition_Native
        nameWithType: Input.GetMousePosition_Native
        qualifiedName: Chroma.Input.GetMousePosition_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Input.GetMousePosition_Native
  Chroma.Input.GetFirstConnectedGamepad_Native*:
    name:
      CSharp:
      - id: Chroma.Input.GetFirstConnectedGamepad_Native*
        name: GetFirstConnectedGamepad_Native
        nameWithType: Input.GetFirstConnectedGamepad_Native
        qualifiedName: Chroma.Input.GetFirstConnectedGamepad_Native
        isExternal: true
      VB:
      - id: Chroma.Input.GetFirstConnectedGamepad_Native*
        name: GetFirstConnectedGamepad_Native
        nameWithType: Input.GetFirstConnectedGamepad_Native
        qualifiedName: Chroma.Input.GetFirstConnectedGamepad_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Input.GetFirstConnectedGamepad_Native
  Chroma.Input.GetAllConnectedControllers_Native*:
    name:
      CSharp:
      - id: Chroma.Input.GetAllConnectedControllers_Native*
        name: GetAllConnectedControllers_Native
        nameWithType: Input.GetAllConnectedControllers_Native
        qualifiedName: Chroma.Input.GetAllConnectedControllers_Native
        isExternal: true
      VB:
      - id: Chroma.Input.GetAllConnectedControllers_Native*
        name: GetAllConnectedControllers_Native
        nameWithType: Input.GetAllConnectedControllers_Native
        qualifiedName: Chroma.Input.GetAllConnectedControllers_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Input.GetAllConnectedControllers_Native
  Chroma.Input.SetPrimaryGamepad_Native*:
    name:
      CSharp:
      - id: Chroma.Input.SetPrimaryGamepad_Native*
        name: SetPrimaryGamepad_Native
        nameWithType: Input.SetPrimaryGamepad_Native
        qualifiedName: Chroma.Input.SetPrimaryGamepad_Native
        isExternal: true
      VB:
      - id: Chroma.Input.SetPrimaryGamepad_Native*
        name: SetPrimaryGamepad_Native
        nameWithType: Input.SetPrimaryGamepad_Native
        qualifiedName: Chroma.Input.SetPrimaryGamepad_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Input.SetPrimaryGamepad_Native
  Chroma.Input.GetGamepadAxis_Native*:
    name:
      CSharp:
      - id: Chroma.Input.GetGamepadAxis_Native*
        name: GetGamepadAxis_Native
        nameWithType: Input.GetGamepadAxis_Native
        qualifiedName: Chroma.Input.GetGamepadAxis_Native
        isExternal: true
      VB:
      - id: Chroma.Input.GetGamepadAxis_Native*
        name: GetGamepadAxis_Native
        nameWithType: Input.GetGamepadAxis_Native
        qualifiedName: Chroma.Input.GetGamepadAxis_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Input.GetGamepadAxis_Native
  Chroma.Input.GetGamepadButtonPressed_Native*:
    name:
      CSharp:
      - id: Chroma.Input.GetGamepadButtonPressed_Native*
        name: GetGamepadButtonPressed_Native
        nameWithType: Input.GetGamepadButtonPressed_Native
        qualifiedName: Chroma.Input.GetGamepadButtonPressed_Native
        isExternal: true
      VB:
      - id: Chroma.Input.GetGamepadButtonPressed_Native*
        name: GetGamepadButtonPressed_Native
        nameWithType: Input.GetGamepadButtonPressed_Native
        qualifiedName: Chroma.Input.GetGamepadButtonPressed_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Input.GetGamepadButtonPressed_Native
  Chroma.Input.GetGamepadConnectionState_Native*:
    name:
      CSharp:
      - id: Chroma.Input.GetGamepadConnectionState_Native*
        name: GetGamepadConnectionState_Native
        nameWithType: Input.GetGamepadConnectionState_Native
        qualifiedName: Chroma.Input.GetGamepadConnectionState_Native
        isExternal: true
      VB:
      - id: Chroma.Input.GetGamepadConnectionState_Native*
        name: GetGamepadConnectionState_Native
        nameWithType: Input.GetGamepadConnectionState_Native
        qualifiedName: Chroma.Input.GetGamepadConnectionState_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Input.GetGamepadConnectionState_Native
  Chroma.Input:
    name:
      CSharp:
      - id: Chroma.Input
        name: Input
        nameWithType: Input
        qualifiedName: Chroma.Input
      VB:
      - id: Chroma.Input
        name: Input
        nameWithType: Input
        qualifiedName: Chroma.Input
    isDefinition: true
    commentId: T:Chroma.Input
  Chroma.Input.GamepadAxis:
    name:
      CSharp:
      - id: Chroma.Input.GamepadAxis
        name: Input.GamepadAxis
        nameWithType: Input.GamepadAxis
        qualifiedName: Chroma.Input.GamepadAxis
      VB:
      - id: Chroma.Input.GamepadAxis
        name: Input.GamepadAxis
        nameWithType: Input.GamepadAxis
        qualifiedName: Chroma.Input.GamepadAxis
    isDefinition: true
    parent: Chroma
    commentId: T:Chroma.Input.GamepadAxis
  Chroma.Input.JoystickHatState:
    name:
      CSharp:
      - id: Chroma.Input.JoystickHatState
        name: Input.JoystickHatState
        nameWithType: Input.JoystickHatState
        qualifiedName: Chroma.Input.JoystickHatState
      VB:
      - id: Chroma.Input.JoystickHatState
        name: Input.JoystickHatState
        nameWithType: Input.JoystickHatState
        qualifiedName: Chroma.Input.JoystickHatState
    isDefinition: true
    parent: Chroma
    commentId: T:Chroma.Input.JoystickHatState
  System.Object[]:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Chroma.Log.Trace*:
    name:
      CSharp:
      - id: Chroma.Log.Trace*
        name: Trace
        nameWithType: Log.Trace
        qualifiedName: Chroma.Log.Trace
      VB:
      - id: Chroma.Log.Trace*
        name: Trace
        nameWithType: Log.Trace
        qualifiedName: Chroma.Log.Trace
    isDefinition: true
    commentId: Overload:Chroma.Log.Trace
  Chroma.Log.WriteLine*:
    name:
      CSharp:
      - id: Chroma.Log.WriteLine*
        name: WriteLine
        nameWithType: Log.WriteLine
        qualifiedName: Chroma.Log.WriteLine
      VB:
      - id: Chroma.Log.WriteLine*
        name: WriteLine
        nameWithType: Log.WriteLine
        qualifiedName: Chroma.Log.WriteLine
    isDefinition: true
    commentId: Overload:Chroma.Log.WriteLine
  Chroma.Log.Debug*:
    name:
      CSharp:
      - id: Chroma.Log.Debug*
        name: Debug
        nameWithType: Log.Debug
        qualifiedName: Chroma.Log.Debug
      VB:
      - id: Chroma.Log.Debug*
        name: Debug
        nameWithType: Log.Debug
        qualifiedName: Chroma.Log.Debug
    isDefinition: true
    commentId: Overload:Chroma.Log.Debug
  Chroma.Log.Info*:
    name:
      CSharp:
      - id: Chroma.Log.Info*
        name: Info
        nameWithType: Log.Info
        qualifiedName: Chroma.Log.Info
      VB:
      - id: Chroma.Log.Info*
        name: Info
        nameWithType: Log.Info
        qualifiedName: Chroma.Log.Info
    isDefinition: true
    commentId: Overload:Chroma.Log.Info
  Chroma.Log.Warn*:
    name:
      CSharp:
      - id: Chroma.Log.Warn*
        name: Warn
        nameWithType: Log.Warn
        qualifiedName: Chroma.Log.Warn
      VB:
      - id: Chroma.Log.Warn*
        name: Warn
        nameWithType: Log.Warn
        qualifiedName: Chroma.Log.Warn
    isDefinition: true
    commentId: Overload:Chroma.Log.Warn
  Chroma.Log.Error*:
    name:
      CSharp:
      - id: Chroma.Log.Error*
        name: Error
        nameWithType: Log.Error
        qualifiedName: Chroma.Log.Error
      VB:
      - id: Chroma.Log.Error*
        name: Error
        nameWithType: Log.Error
        qualifiedName: Chroma.Log.Error
    isDefinition: true
    commentId: Overload:Chroma.Log.Error
  Chroma.Log.Critical*:
    name:
      CSharp:
      - id: Chroma.Log.Critical*
        name: Critical
        nameWithType: Log.Critical
        qualifiedName: Chroma.Log.Critical
      VB:
      - id: Chroma.Log.Critical*
        name: Critical
        nameWithType: Log.Critical
        qualifiedName: Chroma.Log.Critical
    isDefinition: true
    commentId: Overload:Chroma.Log.Critical
  Chroma.Log.LogLevel:
    name:
      CSharp:
      - id: Chroma.Log.LogLevel
        name: Log.LogLevel
        nameWithType: Log.LogLevel
        qualifiedName: Chroma.Log.LogLevel
      VB:
      - id: Chroma.Log.LogLevel
        name: Log.LogLevel
        nameWithType: Log.LogLevel
        qualifiedName: Chroma.Log.LogLevel
    isDefinition: true
    parent: Chroma
    commentId: T:Chroma.Log.LogLevel
  Chroma.Log.LogMessage_Native*:
    name:
      CSharp:
      - id: Chroma.Log.LogMessage_Native*
        name: LogMessage_Native
        nameWithType: Log.LogMessage_Native
        qualifiedName: Chroma.Log.LogMessage_Native
        isExternal: true
      VB:
      - id: Chroma.Log.LogMessage_Native*
        name: LogMessage_Native
        nameWithType: Log.LogMessage_Native
        qualifiedName: Chroma.Log.LogMessage_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Log.LogMessage_Native
  Chroma.Log:
    name:
      CSharp:
      - id: Chroma.Log
        name: Log
        nameWithType: Log
        qualifiedName: Chroma.Log
      VB:
      - id: Chroma.Log
        name: Log
        nameWithType: Log
        qualifiedName: Chroma.Log
    isDefinition: true
    commentId: T:Chroma.Log
  Chroma.RuntimeException.OnException*:
    name:
      CSharp:
      - id: Chroma.RuntimeException.OnException*
        name: OnException
        nameWithType: RuntimeException.OnException
        qualifiedName: Chroma.RuntimeException.OnException
      VB:
      - id: Chroma.RuntimeException.OnException*
        name: OnException
        nameWithType: RuntimeException.OnException
        qualifiedName: Chroma.RuntimeException.OnException
    isDefinition: true
    commentId: Overload:Chroma.RuntimeException.OnException
  Chroma.RuntimeException:
    name:
      CSharp:
      - id: Chroma.RuntimeException
        name: RuntimeException
        nameWithType: RuntimeException
        qualifiedName: Chroma.RuntimeException
      VB:
      - id: Chroma.RuntimeException
        name: RuntimeException
        nameWithType: RuntimeException
        qualifiedName: Chroma.RuntimeException
    isDefinition: true
    commentId: T:Chroma.RuntimeException
  Chroma.Scene:
    name:
      CSharp:
      - id: Chroma.Scene
        name: Scene
        nameWithType: Scene
        qualifiedName: Chroma.Scene
      VB:
      - id: Chroma.Scene
        name: Scene
        nameWithType: Scene
        qualifiedName: Chroma.Scene
    isDefinition: true
    commentId: T:Chroma.Scene
  Chroma.StateMachine`1.Current*:
    name:
      CSharp:
      - id: Chroma.StateMachine`1.Current*
        name: Current
        nameWithType: StateMachine<T>.Current
        qualifiedName: Chroma.StateMachine<T>.Current
      VB:
      - id: Chroma.StateMachine`1.Current*
        name: Current
        nameWithType: StateMachine(Of T).Current
        qualifiedName: Chroma.StateMachine(Of T).Current
    isDefinition: true
    commentId: Overload:Chroma.StateMachine`1.Current
  Dictionary`2:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Dictionary{{T},System.Action}:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Dictionary`2
    commentId: '!:Dictionary{`0,System.Action}'
  Dictionary{{T},Chroma.Coroutine}:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Chroma.Coroutine
        name: Coroutine
        nameWithType: Coroutine
        qualifiedName: Chroma.Coroutine
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Chroma.Coroutine
        name: Coroutine
        nameWithType: Coroutine
        qualifiedName: Chroma.Coroutine
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Dictionary`2
    commentId: '!:Dictionary{`0,Chroma.Coroutine}'
  Chroma.StateMachine`1.#ctor*:
    name:
      CSharp:
      - id: Chroma.StateMachine`1.#ctor*
        name: StateMachine
        nameWithType: StateMachine<T>.StateMachine
        qualifiedName: Chroma.StateMachine<T>.StateMachine
      VB:
      - id: Chroma.StateMachine`1.#ctor*
        name: StateMachine
        nameWithType: StateMachine(Of T).StateMachine
        qualifiedName: Chroma.StateMachine(Of T).StateMachine
    isDefinition: true
    commentId: Overload:Chroma.StateMachine`1.#ctor
  System.Action:
    name:
      CSharp:
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      VB:
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Action
  Chroma.StateMachine`1.Add*:
    name:
      CSharp:
      - id: Chroma.StateMachine`1.Add*
        name: Add
        nameWithType: StateMachine<T>.Add
        qualifiedName: Chroma.StateMachine<T>.Add
      VB:
      - id: Chroma.StateMachine`1.Add*
        name: Add
        nameWithType: StateMachine(Of T).Add
        qualifiedName: Chroma.StateMachine(Of T).Add
    isDefinition: true
    commentId: Overload:Chroma.StateMachine`1.Add
  Chroma.StateMachine`1.Set*:
    name:
      CSharp:
      - id: Chroma.StateMachine`1.Set*
        name: Set
        nameWithType: StateMachine<T>.Set
        qualifiedName: Chroma.StateMachine<T>.Set
      VB:
      - id: Chroma.StateMachine`1.Set*
        name: Set
        nameWithType: StateMachine(Of T).Set
        qualifiedName: Chroma.StateMachine(Of T).Set
    isDefinition: true
    commentId: Overload:Chroma.StateMachine`1.Set
  Chroma.StateMachine`1.Update*:
    name:
      CSharp:
      - id: Chroma.StateMachine`1.Update*
        name: Update
        nameWithType: StateMachine<T>.Update
        qualifiedName: Chroma.StateMachine<T>.Update
      VB:
      - id: Chroma.StateMachine`1.Update*
        name: Update
        nameWithType: StateMachine(Of T).Update
        qualifiedName: Chroma.StateMachine(Of T).Update
    isDefinition: true
    commentId: Overload:Chroma.StateMachine`1.Update
  Chroma.StateMachine`1:
    name:
      CSharp:
      - id: Chroma.StateMachine`1
        name: StateMachine
        nameWithType: StateMachine
        qualifiedName: Chroma.StateMachine
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Chroma.StateMachine`1
        name: StateMachine
        nameWithType: StateMachine
        qualifiedName: Chroma.StateMachine
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Chroma.StateMachine`1
  System.Double:
    name:
      CSharp:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      VB:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Double
  Chroma.Time.Delta*:
    name:
      CSharp:
      - id: Chroma.Time.Delta*
        name: Delta
        nameWithType: Time.Delta
        qualifiedName: Chroma.Time.Delta
      VB:
      - id: Chroma.Time.Delta*
        name: Delta
        nameWithType: Time.Delta
        qualifiedName: Chroma.Time.Delta
    isDefinition: true
    commentId: Overload:Chroma.Time.Delta
  Chroma.Time.DeltaF*:
    name:
      CSharp:
      - id: Chroma.Time.DeltaF*
        name: DeltaF
        nameWithType: Time.DeltaF
        qualifiedName: Chroma.Time.DeltaF
      VB:
      - id: Chroma.Time.DeltaF*
        name: DeltaF
        nameWithType: Time.DeltaF
        qualifiedName: Chroma.Time.DeltaF
    isDefinition: true
    commentId: Overload:Chroma.Time.DeltaF
  Chroma.Time:
    name:
      CSharp:
      - id: Chroma.Time
        name: Time
        nameWithType: Time
        qualifiedName: Chroma.Time
      VB:
      - id: Chroma.Time
        name: Time
        nameWithType: Time
        qualifiedName: Chroma.Time
    isDefinition: true
    commentId: T:Chroma.Time
  Chroma.Component.Entity:
    name:
      CSharp:
      - id: Chroma.Component.Entity
        name: Entity
        nameWithType: Component.Entity
        qualifiedName: Chroma.Component.Entity
      VB:
      - id: Chroma.Component.Entity
        name: Entity
        nameWithType: Component.Entity
        qualifiedName: Chroma.Component.Entity
    isDefinition: true
    parent: Chroma.Component
    commentId: P:Chroma.Component.Entity
  Chroma.Component.Enabled:
    name:
      CSharp:
      - id: Chroma.Component.Enabled
        name: Enabled
        nameWithType: Component.Enabled
        qualifiedName: Chroma.Component.Enabled
      VB:
      - id: Chroma.Component.Enabled
        name: Enabled
        nameWithType: Component.Enabled
        qualifiedName: Chroma.Component.Enabled
    isDefinition: true
    parent: Chroma.Component
    commentId: P:Chroma.Component.Enabled
  Chroma.Component.GetEnabled_Native(System.UInt64,System.Type):
    name:
      CSharp:
      - id: Chroma.Component.GetEnabled_Native(System.UInt64,System.Type)
        name: GetEnabled_Native
        nameWithType: Component.GetEnabled_Native
        qualifiedName: Chroma.Component.GetEnabled_Native
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Chroma.Component.GetEnabled_Native(System.UInt64,System.Type)
        name: GetEnabled_Native
        nameWithType: Component.GetEnabled_Native
        qualifiedName: Chroma.Component.GetEnabled_Native
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Chroma.Component
    commentId: M:Chroma.Component.GetEnabled_Native(System.UInt64,System.Type)
  Chroma.Component.SetEnabled_Native(System.UInt64,System.Type,System.Boolean):
    name:
      CSharp:
      - id: Chroma.Component.SetEnabled_Native(System.UInt64,System.Type,System.Boolean)
        name: SetEnabled_Native
        nameWithType: Component.SetEnabled_Native
        qualifiedName: Chroma.Component.SetEnabled_Native
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Chroma.Component.SetEnabled_Native(System.UInt64,System.Type,System.Boolean)
        name: SetEnabled_Native
        nameWithType: Component.SetEnabled_Native
        qualifiedName: Chroma.Component.SetEnabled_Native
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Chroma.Component
    commentId: M:Chroma.Component.SetEnabled_Native(System.UInt64,System.Type,System.Boolean)
  Chroma.AudioSource.#ctor*:
    name:
      CSharp:
      - id: Chroma.AudioSource.#ctor*
        name: AudioSource
        nameWithType: AudioSource.AudioSource
        qualifiedName: Chroma.AudioSource.AudioSource
      VB:
      - id: Chroma.AudioSource.#ctor*
        name: AudioSource
        nameWithType: AudioSource.AudioSource
        qualifiedName: Chroma.AudioSource.AudioSource
    isDefinition: true
    commentId: Overload:Chroma.AudioSource.#ctor
  Chroma.AudioSource:
    name:
      CSharp:
      - id: Chroma.AudioSource
        name: AudioSource
        nameWithType: AudioSource
        qualifiedName: Chroma.AudioSource
      VB:
      - id: Chroma.AudioSource
        name: AudioSource
        nameWithType: AudioSource
        qualifiedName: Chroma.AudioSource
    isDefinition: true
    commentId: T:Chroma.AudioSource
  Chroma.BoxCollider.#ctor*:
    name:
      CSharp:
      - id: Chroma.BoxCollider.#ctor*
        name: BoxCollider
        nameWithType: BoxCollider.BoxCollider
        qualifiedName: Chroma.BoxCollider.BoxCollider
      VB:
      - id: Chroma.BoxCollider.#ctor*
        name: BoxCollider
        nameWithType: BoxCollider.BoxCollider
        qualifiedName: Chroma.BoxCollider.BoxCollider
    isDefinition: true
    commentId: Overload:Chroma.BoxCollider.#ctor
  Chroma.BoxCollider:
    name:
      CSharp:
      - id: Chroma.BoxCollider
        name: BoxCollider
        nameWithType: BoxCollider
        qualifiedName: Chroma.BoxCollider
      VB:
      - id: Chroma.BoxCollider
        name: BoxCollider
        nameWithType: BoxCollider
        qualifiedName: Chroma.BoxCollider
    isDefinition: true
    commentId: T:Chroma.BoxCollider
  Chroma.Camera.#ctor*:
    name:
      CSharp:
      - id: Chroma.Camera.#ctor*
        name: Camera
        nameWithType: Camera.Camera
        qualifiedName: Chroma.Camera.Camera
      VB:
      - id: Chroma.Camera.#ctor*
        name: Camera
        nameWithType: Camera.Camera
        qualifiedName: Chroma.Camera.Camera
    isDefinition: true
    commentId: Overload:Chroma.Camera.#ctor
  Chroma.Camera:
    name:
      CSharp:
      - id: Chroma.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Chroma.Camera
      VB:
      - id: Chroma.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Chroma.Camera
    isDefinition: true
    commentId: T:Chroma.Camera
  Chroma.CircleCollider.#ctor*:
    name:
      CSharp:
      - id: Chroma.CircleCollider.#ctor*
        name: CircleCollider
        nameWithType: CircleCollider.CircleCollider
        qualifiedName: Chroma.CircleCollider.CircleCollider
      VB:
      - id: Chroma.CircleCollider.#ctor*
        name: CircleCollider
        nameWithType: CircleCollider.CircleCollider
        qualifiedName: Chroma.CircleCollider.CircleCollider
    isDefinition: true
    commentId: Overload:Chroma.CircleCollider.#ctor
  Chroma.CircleCollider:
    name:
      CSharp:
      - id: Chroma.CircleCollider
        name: CircleCollider
        nameWithType: CircleCollider
        qualifiedName: Chroma.CircleCollider
      VB:
      - id: Chroma.CircleCollider
        name: CircleCollider
        nameWithType: CircleCollider
        qualifiedName: Chroma.CircleCollider
    isDefinition: true
    commentId: T:Chroma.CircleCollider
  Chroma.ParticleEmitter.#ctor*:
    name:
      CSharp:
      - id: Chroma.ParticleEmitter.#ctor*
        name: ParticleEmitter
        nameWithType: ParticleEmitter.ParticleEmitter
        qualifiedName: Chroma.ParticleEmitter.ParticleEmitter
      VB:
      - id: Chroma.ParticleEmitter.#ctor*
        name: ParticleEmitter
        nameWithType: ParticleEmitter.ParticleEmitter
        qualifiedName: Chroma.ParticleEmitter.ParticleEmitter
    isDefinition: true
    commentId: Overload:Chroma.ParticleEmitter.#ctor
  Chroma.ParticleEmitter:
    name:
      CSharp:
      - id: Chroma.ParticleEmitter
        name: ParticleEmitter
        nameWithType: ParticleEmitter
        qualifiedName: Chroma.ParticleEmitter
      VB:
      - id: Chroma.ParticleEmitter
        name: ParticleEmitter
        nameWithType: ParticleEmitter
        qualifiedName: Chroma.ParticleEmitter
    isDefinition: true
    commentId: T:Chroma.ParticleEmitter
  Chroma.Vector4:
    name:
      CSharp:
      - id: Chroma.Vector4
        name: Vector4
        nameWithType: Vector4
        qualifiedName: Chroma.Vector4
      VB:
      - id: Chroma.Vector4
        name: Vector4
        nameWithType: Vector4
        qualifiedName: Chroma.Vector4
    isDefinition: true
    parent: Chroma
    commentId: T:Chroma.Vector4
  Chroma.SpriteRenderer.Color*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.Color*
        name: Color
        nameWithType: SpriteRenderer.Color
        qualifiedName: Chroma.SpriteRenderer.Color
      VB:
      - id: Chroma.SpriteRenderer.Color*
        name: Color
        nameWithType: SpriteRenderer.Color
        qualifiedName: Chroma.SpriteRenderer.Color
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.Color
  Chroma.SpriteRenderer.Offset*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.Offset*
        name: Offset
        nameWithType: SpriteRenderer.Offset
        qualifiedName: Chroma.SpriteRenderer.Offset
      VB:
      - id: Chroma.SpriteRenderer.Offset*
        name: Offset
        nameWithType: SpriteRenderer.Offset
        qualifiedName: Chroma.SpriteRenderer.Offset
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.Offset
  Chroma.SpriteRenderer.Layer*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.Layer*
        name: Layer
        nameWithType: SpriteRenderer.Layer
        qualifiedName: Chroma.SpriteRenderer.Layer
      VB:
      - id: Chroma.SpriteRenderer.Layer*
        name: Layer
        nameWithType: SpriteRenderer.Layer
        qualifiedName: Chroma.SpriteRenderer.Layer
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.Layer
  Chroma.SpriteRenderer.PlayOnStart*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.PlayOnStart*
        name: PlayOnStart
        nameWithType: SpriteRenderer.PlayOnStart
        qualifiedName: Chroma.SpriteRenderer.PlayOnStart
      VB:
      - id: Chroma.SpriteRenderer.PlayOnStart*
        name: PlayOnStart
        nameWithType: SpriteRenderer.PlayOnStart
        qualifiedName: Chroma.SpriteRenderer.PlayOnStart
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.PlayOnStart
  Chroma.SpriteRenderer.Playing*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.Playing*
        name: Playing
        nameWithType: SpriteRenderer.Playing
        qualifiedName: Chroma.SpriteRenderer.Playing
      VB:
      - id: Chroma.SpriteRenderer.Playing*
        name: Playing
        nameWithType: SpriteRenderer.Playing
        qualifiedName: Chroma.SpriteRenderer.Playing
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.Playing
  Chroma.SpriteRenderer.Loop*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.Loop*
        name: Loop
        nameWithType: SpriteRenderer.Loop
        qualifiedName: Chroma.SpriteRenderer.Loop
      VB:
      - id: Chroma.SpriteRenderer.Loop*
        name: Loop
        nameWithType: SpriteRenderer.Loop
        qualifiedName: Chroma.SpriteRenderer.Loop
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.Loop
  Chroma.SpriteRenderer.Speed*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.Speed*
        name: Speed
        nameWithType: SpriteRenderer.Speed
        qualifiedName: Chroma.SpriteRenderer.Speed
      VB:
      - id: Chroma.SpriteRenderer.Speed*
        name: Speed
        nameWithType: SpriteRenderer.Speed
        qualifiedName: Chroma.SpriteRenderer.Speed
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.Speed
  Chroma.SpriteRenderer.SpriteID*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.SpriteID*
        name: SpriteID
        nameWithType: SpriteRenderer.SpriteID
        qualifiedName: Chroma.SpriteRenderer.SpriteID
      VB:
      - id: Chroma.SpriteRenderer.SpriteID*
        name: SpriteID
        nameWithType: SpriteRenderer.SpriteID
        qualifiedName: Chroma.SpriteRenderer.SpriteID
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.SpriteID
  Chroma.SpriteRenderer.Animation*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.Animation*
        name: Animation
        nameWithType: SpriteRenderer.Animation
        qualifiedName: Chroma.SpriteRenderer.Animation
      VB:
      - id: Chroma.SpriteRenderer.Animation*
        name: Animation
        nameWithType: SpriteRenderer.Animation
        qualifiedName: Chroma.SpriteRenderer.Animation
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.Animation
  Chroma.SpriteRenderer.Frame*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.Frame*
        name: Frame
        nameWithType: SpriteRenderer.Frame
        qualifiedName: Chroma.SpriteRenderer.Frame
      VB:
      - id: Chroma.SpriteRenderer.Frame*
        name: Frame
        nameWithType: SpriteRenderer.Frame
        qualifiedName: Chroma.SpriteRenderer.Frame
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.Frame
  Chroma.SpriteRenderer.SetAnimationByTag*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.SetAnimationByTag*
        name: SetAnimationByTag
        nameWithType: SpriteRenderer.SetAnimationByTag
        qualifiedName: Chroma.SpriteRenderer.SetAnimationByTag
      VB:
      - id: Chroma.SpriteRenderer.SetAnimationByTag*
        name: SetAnimationByTag
        nameWithType: SpriteRenderer.SetAnimationByTag
        qualifiedName: Chroma.SpriteRenderer.SetAnimationByTag
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.SetAnimationByTag
  Chroma.SpriteRenderer.GetAnimationTag*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.GetAnimationTag*
        name: GetAnimationTag
        nameWithType: SpriteRenderer.GetAnimationTag
        qualifiedName: Chroma.SpriteRenderer.GetAnimationTag
      VB:
      - id: Chroma.SpriteRenderer.GetAnimationTag*
        name: GetAnimationTag
        nameWithType: SpriteRenderer.GetAnimationTag
        qualifiedName: Chroma.SpriteRenderer.GetAnimationTag
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.GetAnimationTag
  Chroma.SpriteRenderer.RestartAnimation*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.RestartAnimation*
        name: RestartAnimation
        nameWithType: SpriteRenderer.RestartAnimation
        qualifiedName: Chroma.SpriteRenderer.RestartAnimation
      VB:
      - id: Chroma.SpriteRenderer.RestartAnimation*
        name: RestartAnimation
        nameWithType: SpriteRenderer.RestartAnimation
        qualifiedName: Chroma.SpriteRenderer.RestartAnimation
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.RestartAnimation
  Chroma.SpriteRenderer.GetColor_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.GetColor_Native*
        name: GetColor_Native
        nameWithType: SpriteRenderer.GetColor_Native
        qualifiedName: Chroma.SpriteRenderer.GetColor_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.GetColor_Native*
        name: GetColor_Native
        nameWithType: SpriteRenderer.GetColor_Native
        qualifiedName: Chroma.SpriteRenderer.GetColor_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.GetColor_Native
  Chroma.SpriteRenderer.SetColor_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.SetColor_Native*
        name: SetColor_Native
        nameWithType: SpriteRenderer.SetColor_Native
        qualifiedName: Chroma.SpriteRenderer.SetColor_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.SetColor_Native*
        name: SetColor_Native
        nameWithType: SpriteRenderer.SetColor_Native
        qualifiedName: Chroma.SpriteRenderer.SetColor_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.SetColor_Native
  Chroma.SpriteRenderer.GetOffset_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.GetOffset_Native*
        name: GetOffset_Native
        nameWithType: SpriteRenderer.GetOffset_Native
        qualifiedName: Chroma.SpriteRenderer.GetOffset_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.GetOffset_Native*
        name: GetOffset_Native
        nameWithType: SpriteRenderer.GetOffset_Native
        qualifiedName: Chroma.SpriteRenderer.GetOffset_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.GetOffset_Native
  Chroma.SpriteRenderer.SetOffset_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.SetOffset_Native*
        name: SetOffset_Native
        nameWithType: SpriteRenderer.SetOffset_Native
        qualifiedName: Chroma.SpriteRenderer.SetOffset_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.SetOffset_Native*
        name: SetOffset_Native
        nameWithType: SpriteRenderer.SetOffset_Native
        qualifiedName: Chroma.SpriteRenderer.SetOffset_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.SetOffset_Native
  Chroma.SpriteRenderer.GetLayer_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.GetLayer_Native*
        name: GetLayer_Native
        nameWithType: SpriteRenderer.GetLayer_Native
        qualifiedName: Chroma.SpriteRenderer.GetLayer_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.GetLayer_Native*
        name: GetLayer_Native
        nameWithType: SpriteRenderer.GetLayer_Native
        qualifiedName: Chroma.SpriteRenderer.GetLayer_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.GetLayer_Native
  Chroma.SpriteRenderer.SetLayer_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.SetLayer_Native*
        name: SetLayer_Native
        nameWithType: SpriteRenderer.SetLayer_Native
        qualifiedName: Chroma.SpriteRenderer.SetLayer_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.SetLayer_Native*
        name: SetLayer_Native
        nameWithType: SpriteRenderer.SetLayer_Native
        qualifiedName: Chroma.SpriteRenderer.SetLayer_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.SetLayer_Native
  Chroma.SpriteRenderer.GetPlayOnStart_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.GetPlayOnStart_Native*
        name: GetPlayOnStart_Native
        nameWithType: SpriteRenderer.GetPlayOnStart_Native
        qualifiedName: Chroma.SpriteRenderer.GetPlayOnStart_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.GetPlayOnStart_Native*
        name: GetPlayOnStart_Native
        nameWithType: SpriteRenderer.GetPlayOnStart_Native
        qualifiedName: Chroma.SpriteRenderer.GetPlayOnStart_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.GetPlayOnStart_Native
  Chroma.SpriteRenderer.SetPlayOnStart_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.SetPlayOnStart_Native*
        name: SetPlayOnStart_Native
        nameWithType: SpriteRenderer.SetPlayOnStart_Native
        qualifiedName: Chroma.SpriteRenderer.SetPlayOnStart_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.SetPlayOnStart_Native*
        name: SetPlayOnStart_Native
        nameWithType: SpriteRenderer.SetPlayOnStart_Native
        qualifiedName: Chroma.SpriteRenderer.SetPlayOnStart_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.SetPlayOnStart_Native
  Chroma.SpriteRenderer.GetPlaying_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.GetPlaying_Native*
        name: GetPlaying_Native
        nameWithType: SpriteRenderer.GetPlaying_Native
        qualifiedName: Chroma.SpriteRenderer.GetPlaying_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.GetPlaying_Native*
        name: GetPlaying_Native
        nameWithType: SpriteRenderer.GetPlaying_Native
        qualifiedName: Chroma.SpriteRenderer.GetPlaying_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.GetPlaying_Native
  Chroma.SpriteRenderer.SetPlaying_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.SetPlaying_Native*
        name: SetPlaying_Native
        nameWithType: SpriteRenderer.SetPlaying_Native
        qualifiedName: Chroma.SpriteRenderer.SetPlaying_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.SetPlaying_Native*
        name: SetPlaying_Native
        nameWithType: SpriteRenderer.SetPlaying_Native
        qualifiedName: Chroma.SpriteRenderer.SetPlaying_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.SetPlaying_Native
  Chroma.SpriteRenderer.GetLoop_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.GetLoop_Native*
        name: GetLoop_Native
        nameWithType: SpriteRenderer.GetLoop_Native
        qualifiedName: Chroma.SpriteRenderer.GetLoop_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.GetLoop_Native*
        name: GetLoop_Native
        nameWithType: SpriteRenderer.GetLoop_Native
        qualifiedName: Chroma.SpriteRenderer.GetLoop_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.GetLoop_Native
  Chroma.SpriteRenderer.SetLoop_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.SetLoop_Native*
        name: SetLoop_Native
        nameWithType: SpriteRenderer.SetLoop_Native
        qualifiedName: Chroma.SpriteRenderer.SetLoop_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.SetLoop_Native*
        name: SetLoop_Native
        nameWithType: SpriteRenderer.SetLoop_Native
        qualifiedName: Chroma.SpriteRenderer.SetLoop_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.SetLoop_Native
  Chroma.SpriteRenderer.GetSpeedMultiplier_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.GetSpeedMultiplier_Native*
        name: GetSpeedMultiplier_Native
        nameWithType: SpriteRenderer.GetSpeedMultiplier_Native
        qualifiedName: Chroma.SpriteRenderer.GetSpeedMultiplier_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.GetSpeedMultiplier_Native*
        name: GetSpeedMultiplier_Native
        nameWithType: SpriteRenderer.GetSpeedMultiplier_Native
        qualifiedName: Chroma.SpriteRenderer.GetSpeedMultiplier_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.GetSpeedMultiplier_Native
  Chroma.SpriteRenderer.SetSpeedMultiplier_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.SetSpeedMultiplier_Native*
        name: SetSpeedMultiplier_Native
        nameWithType: SpriteRenderer.SetSpeedMultiplier_Native
        qualifiedName: Chroma.SpriteRenderer.SetSpeedMultiplier_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.SetSpeedMultiplier_Native*
        name: SetSpeedMultiplier_Native
        nameWithType: SpriteRenderer.SetSpeedMultiplier_Native
        qualifiedName: Chroma.SpriteRenderer.SetSpeedMultiplier_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.SetSpeedMultiplier_Native
  Chroma.SpriteRenderer.GetSprite_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.GetSprite_Native*
        name: GetSprite_Native
        nameWithType: SpriteRenderer.GetSprite_Native
        qualifiedName: Chroma.SpriteRenderer.GetSprite_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.GetSprite_Native*
        name: GetSprite_Native
        nameWithType: SpriteRenderer.GetSprite_Native
        qualifiedName: Chroma.SpriteRenderer.GetSprite_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.GetSprite_Native
  Chroma.SpriteRenderer.SetSprite_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.SetSprite_Native*
        name: SetSprite_Native
        nameWithType: SpriteRenderer.SetSprite_Native
        qualifiedName: Chroma.SpriteRenderer.SetSprite_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.SetSprite_Native*
        name: SetSprite_Native
        nameWithType: SpriteRenderer.SetSprite_Native
        qualifiedName: Chroma.SpriteRenderer.SetSprite_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.SetSprite_Native
  Chroma.SpriteRenderer.GetAnimation_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.GetAnimation_Native*
        name: GetAnimation_Native
        nameWithType: SpriteRenderer.GetAnimation_Native
        qualifiedName: Chroma.SpriteRenderer.GetAnimation_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.GetAnimation_Native*
        name: GetAnimation_Native
        nameWithType: SpriteRenderer.GetAnimation_Native
        qualifiedName: Chroma.SpriteRenderer.GetAnimation_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.GetAnimation_Native
  Chroma.SpriteRenderer.SetAnimation_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.SetAnimation_Native*
        name: SetAnimation_Native
        nameWithType: SpriteRenderer.SetAnimation_Native
        qualifiedName: Chroma.SpriteRenderer.SetAnimation_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.SetAnimation_Native*
        name: SetAnimation_Native
        nameWithType: SpriteRenderer.SetAnimation_Native
        qualifiedName: Chroma.SpriteRenderer.SetAnimation_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.SetAnimation_Native
  Chroma.SpriteRenderer.GetFrame_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.GetFrame_Native*
        name: GetFrame_Native
        nameWithType: SpriteRenderer.GetFrame_Native
        qualifiedName: Chroma.SpriteRenderer.GetFrame_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.GetFrame_Native*
        name: GetFrame_Native
        nameWithType: SpriteRenderer.GetFrame_Native
        qualifiedName: Chroma.SpriteRenderer.GetFrame_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.GetFrame_Native
  Chroma.SpriteRenderer.SetFrame_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.SetFrame_Native*
        name: SetFrame_Native
        nameWithType: SpriteRenderer.SetFrame_Native
        qualifiedName: Chroma.SpriteRenderer.SetFrame_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.SetFrame_Native*
        name: SetFrame_Native
        nameWithType: SpriteRenderer.SetFrame_Native
        qualifiedName: Chroma.SpriteRenderer.SetFrame_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.SetFrame_Native
  Chroma.SpriteRenderer.GetAnimationTag_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.GetAnimationTag_Native*
        name: GetAnimationTag_Native
        nameWithType: SpriteRenderer.GetAnimationTag_Native
        qualifiedName: Chroma.SpriteRenderer.GetAnimationTag_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.GetAnimationTag_Native*
        name: GetAnimationTag_Native
        nameWithType: SpriteRenderer.GetAnimationTag_Native
        qualifiedName: Chroma.SpriteRenderer.GetAnimationTag_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.GetAnimationTag_Native
  Chroma.SpriteRenderer.SetAnimationByTag_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.SetAnimationByTag_Native*
        name: SetAnimationByTag_Native
        nameWithType: SpriteRenderer.SetAnimationByTag_Native
        qualifiedName: Chroma.SpriteRenderer.SetAnimationByTag_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.SetAnimationByTag_Native*
        name: SetAnimationByTag_Native
        nameWithType: SpriteRenderer.SetAnimationByTag_Native
        qualifiedName: Chroma.SpriteRenderer.SetAnimationByTag_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.SetAnimationByTag_Native
  Chroma.SpriteRenderer.RestartAnimation_Native*:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer.RestartAnimation_Native*
        name: RestartAnimation_Native
        nameWithType: SpriteRenderer.RestartAnimation_Native
        qualifiedName: Chroma.SpriteRenderer.RestartAnimation_Native
        isExternal: true
      VB:
      - id: Chroma.SpriteRenderer.RestartAnimation_Native*
        name: RestartAnimation_Native
        nameWithType: SpriteRenderer.RestartAnimation_Native
        qualifiedName: Chroma.SpriteRenderer.RestartAnimation_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.SpriteRenderer.RestartAnimation_Native
  Chroma.SpriteRenderer:
    name:
      CSharp:
      - id: Chroma.SpriteRenderer
        name: SpriteRenderer
        nameWithType: SpriteRenderer
        qualifiedName: Chroma.SpriteRenderer
      VB:
      - id: Chroma.SpriteRenderer
        name: SpriteRenderer
        nameWithType: SpriteRenderer
        qualifiedName: Chroma.SpriteRenderer
    isDefinition: true
    commentId: T:Chroma.SpriteRenderer
  Chroma.Tag.Name*:
    name:
      CSharp:
      - id: Chroma.Tag.Name*
        name: Name
        nameWithType: Tag.Name
        qualifiedName: Chroma.Tag.Name
      VB:
      - id: Chroma.Tag.Name*
        name: Name
        nameWithType: Tag.Name
        qualifiedName: Chroma.Tag.Name
    isDefinition: true
    commentId: Overload:Chroma.Tag.Name
  Chroma.Tag.GetTag_Native*:
    name:
      CSharp:
      - id: Chroma.Tag.GetTag_Native*
        name: GetTag_Native
        nameWithType: Tag.GetTag_Native
        qualifiedName: Chroma.Tag.GetTag_Native
        isExternal: true
      VB:
      - id: Chroma.Tag.GetTag_Native*
        name: GetTag_Native
        nameWithType: Tag.GetTag_Native
        qualifiedName: Chroma.Tag.GetTag_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Tag.GetTag_Native
  Chroma.Tag.SetTag_Native*:
    name:
      CSharp:
      - id: Chroma.Tag.SetTag_Native*
        name: SetTag_Native
        nameWithType: Tag.SetTag_Native
        qualifiedName: Chroma.Tag.SetTag_Native
        isExternal: true
      VB:
      - id: Chroma.Tag.SetTag_Native*
        name: SetTag_Native
        nameWithType: Tag.SetTag_Native
        qualifiedName: Chroma.Tag.SetTag_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Tag.SetTag_Native
  Chroma.Tag:
    name:
      CSharp:
      - id: Chroma.Tag
        name: Tag
        nameWithType: Tag
        qualifiedName: Chroma.Tag
      VB:
      - id: Chroma.Tag
        name: Tag
        nameWithType: Tag
        qualifiedName: Chroma.Tag
    isDefinition: true
    commentId: T:Chroma.Tag
  Chroma.Transform.Position*:
    name:
      CSharp:
      - id: Chroma.Transform.Position*
        name: Position
        nameWithType: Transform.Position
        qualifiedName: Chroma.Transform.Position
      VB:
      - id: Chroma.Transform.Position*
        name: Position
        nameWithType: Transform.Position
        qualifiedName: Chroma.Transform.Position
    isDefinition: true
    commentId: Overload:Chroma.Transform.Position
  Chroma.Transform.Rotation*:
    name:
      CSharp:
      - id: Chroma.Transform.Rotation*
        name: Rotation
        nameWithType: Transform.Rotation
        qualifiedName: Chroma.Transform.Rotation
      VB:
      - id: Chroma.Transform.Rotation*
        name: Rotation
        nameWithType: Transform.Rotation
        qualifiedName: Chroma.Transform.Rotation
    isDefinition: true
    commentId: Overload:Chroma.Transform.Rotation
  Chroma.Transform.RadRotation*:
    name:
      CSharp:
      - id: Chroma.Transform.RadRotation*
        name: RadRotation
        nameWithType: Transform.RadRotation
        qualifiedName: Chroma.Transform.RadRotation
      VB:
      - id: Chroma.Transform.RadRotation*
        name: RadRotation
        nameWithType: Transform.RadRotation
        qualifiedName: Chroma.Transform.RadRotation
    isDefinition: true
    commentId: Overload:Chroma.Transform.RadRotation
  Chroma.Transform.Scale*:
    name:
      CSharp:
      - id: Chroma.Transform.Scale*
        name: Scale
        nameWithType: Transform.Scale
        qualifiedName: Chroma.Transform.Scale
      VB:
      - id: Chroma.Transform.Scale*
        name: Scale
        nameWithType: Transform.Scale
        qualifiedName: Chroma.Transform.Scale
    isDefinition: true
    commentId: Overload:Chroma.Transform.Scale
  Chroma.Transform.ToString*:
    name:
      CSharp:
      - id: Chroma.Transform.ToString*
        name: ToString
        nameWithType: Transform.ToString
        qualifiedName: Chroma.Transform.ToString
      VB:
      - id: Chroma.Transform.ToString*
        name: ToString
        nameWithType: Transform.ToString
        qualifiedName: Chroma.Transform.ToString
    isDefinition: true
    commentId: Overload:Chroma.Transform.ToString
  Chroma.Transform.GetTransformPosition_Native*:
    name:
      CSharp:
      - id: Chroma.Transform.GetTransformPosition_Native*
        name: GetTransformPosition_Native
        nameWithType: Transform.GetTransformPosition_Native
        qualifiedName: Chroma.Transform.GetTransformPosition_Native
        isExternal: true
      VB:
      - id: Chroma.Transform.GetTransformPosition_Native*
        name: GetTransformPosition_Native
        nameWithType: Transform.GetTransformPosition_Native
        qualifiedName: Chroma.Transform.GetTransformPosition_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Transform.GetTransformPosition_Native
  Chroma.Transform.GetTransformRotation_Native*:
    name:
      CSharp:
      - id: Chroma.Transform.GetTransformRotation_Native*
        name: GetTransformRotation_Native
        nameWithType: Transform.GetTransformRotation_Native
        qualifiedName: Chroma.Transform.GetTransformRotation_Native
        isExternal: true
      VB:
      - id: Chroma.Transform.GetTransformRotation_Native*
        name: GetTransformRotation_Native
        nameWithType: Transform.GetTransformRotation_Native
        qualifiedName: Chroma.Transform.GetTransformRotation_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Transform.GetTransformRotation_Native
  Chroma.Transform.GetTransformScale_Native*:
    name:
      CSharp:
      - id: Chroma.Transform.GetTransformScale_Native*
        name: GetTransformScale_Native
        nameWithType: Transform.GetTransformScale_Native
        qualifiedName: Chroma.Transform.GetTransformScale_Native
        isExternal: true
      VB:
      - id: Chroma.Transform.GetTransformScale_Native*
        name: GetTransformScale_Native
        nameWithType: Transform.GetTransformScale_Native
        qualifiedName: Chroma.Transform.GetTransformScale_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Transform.GetTransformScale_Native
  Chroma.Transform.SetTransformPosition_Native*:
    name:
      CSharp:
      - id: Chroma.Transform.SetTransformPosition_Native*
        name: SetTransformPosition_Native
        nameWithType: Transform.SetTransformPosition_Native
        qualifiedName: Chroma.Transform.SetTransformPosition_Native
        isExternal: true
      VB:
      - id: Chroma.Transform.SetTransformPosition_Native*
        name: SetTransformPosition_Native
        nameWithType: Transform.SetTransformPosition_Native
        qualifiedName: Chroma.Transform.SetTransformPosition_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Transform.SetTransformPosition_Native
  Chroma.Transform.SetTransformRotation_Native*:
    name:
      CSharp:
      - id: Chroma.Transform.SetTransformRotation_Native*
        name: SetTransformRotation_Native
        nameWithType: Transform.SetTransformRotation_Native
        qualifiedName: Chroma.Transform.SetTransformRotation_Native
        isExternal: true
      VB:
      - id: Chroma.Transform.SetTransformRotation_Native*
        name: SetTransformRotation_Native
        nameWithType: Transform.SetTransformRotation_Native
        qualifiedName: Chroma.Transform.SetTransformRotation_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Transform.SetTransformRotation_Native
  Chroma.Transform.SetTransformScale_Native*:
    name:
      CSharp:
      - id: Chroma.Transform.SetTransformScale_Native*
        name: SetTransformScale_Native
        nameWithType: Transform.SetTransformScale_Native
        qualifiedName: Chroma.Transform.SetTransformScale_Native
        isExternal: true
      VB:
      - id: Chroma.Transform.SetTransformScale_Native*
        name: SetTransformScale_Native
        nameWithType: Transform.SetTransformScale_Native
        qualifiedName: Chroma.Transform.SetTransformScale_Native
        isExternal: true
    isDefinition: true
    commentId: Overload:Chroma.Transform.SetTransformScale_Native
  Chroma.Transform:
    name:
      CSharp:
      - id: Chroma.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Chroma.Transform
      VB:
      - id: Chroma.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Chroma.Transform
    isDefinition: true
    commentId: T:Chroma.Transform
  System.Attribute:
    name:
      CSharp:
      - id: System.Attribute
        name: Attribute
        nameWithType: Attribute
        qualifiedName: System.Attribute
        isExternal: true
      VB:
      - id: System.Attribute
        name: Attribute
        nameWithType: Attribute
        qualifiedName: System.Attribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Attribute
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.Module):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module)
  System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.Module,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.Assembly,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  System.Attribute.Equals(System.Object):
    name:
      CSharp:
      - id: System.Attribute.Equals(System.Object)
        name: Equals
        nameWithType: Attribute.Equals
        qualifiedName: System.Attribute.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.Equals(System.Object)
        name: Equals
        nameWithType: Attribute.Equals
        qualifiedName: System.Attribute.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.Equals(System.Object)
  System.Attribute.GetHashCode:
    name:
      CSharp:
      - id: System.Attribute.GetHashCode
        name: GetHashCode
        nameWithType: Attribute.GetHashCode
        qualifiedName: System.Attribute.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetHashCode
        name: GetHashCode
        nameWithType: Attribute.GetHashCode
        qualifiedName: System.Attribute.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetHashCode
  System.Attribute.Match(System.Object):
    name:
      CSharp:
      - id: System.Attribute.Match(System.Object)
        name: Match
        nameWithType: Attribute.Match
        qualifiedName: System.Attribute.Match
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.Match(System.Object)
        name: Match
        nameWithType: Attribute.Match
        qualifiedName: System.Attribute.Match
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.Match(System.Object)
  System.Attribute.IsDefaultAttribute:
    name:
      CSharp:
      - id: System.Attribute.IsDefaultAttribute
        name: IsDefaultAttribute
        nameWithType: Attribute.IsDefaultAttribute
        qualifiedName: System.Attribute.IsDefaultAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefaultAttribute
        name: IsDefaultAttribute
        nameWithType: Attribute.IsDefaultAttribute
        qualifiedName: System.Attribute.IsDefaultAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefaultAttribute
  System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@):
    name:
      CSharp:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
        name: _Attribute.GetTypeInfoCount
        nameWithType: Attribute._Attribute.GetTypeInfoCount
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
        name: System.Runtime.InteropServices._Attribute.GetTypeInfoCount
        nameWithType: Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr):
    name:
      CSharp:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
        name: _Attribute.GetTypeInfo
        nameWithType: Attribute._Attribute.GetTypeInfo
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
        name: System.Runtime.InteropServices._Attribute.GetTypeInfo
        nameWithType: Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  ? System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  : name:
      CSharp:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
        name: _Attribute.GetIDsOfNames
        nameWithType: Attribute._Attribute.GetIDsOfNames
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
        name: System.Runtime.InteropServices._Attribute.GetIDsOfNames
        nameWithType: Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  ? System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  : name:
      CSharp:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
        name: _Attribute.Invoke
        nameWithType: Attribute._Attribute.Invoke
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.Invoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int16
        name: Int16
        nameWithType: Int16
        qualifiedName: System.Int16
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
        name: System.Runtime.InteropServices._Attribute.Invoke
        nameWithType: Attribute.System.Runtime.InteropServices._Attribute.Invoke
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.Invoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int16
        name: Int16
        nameWithType: Int16
        qualifiedName: System.Int16
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  System.Attribute.TypeId:
    name:
      CSharp:
      - id: System.Attribute.TypeId
        name: TypeId
        nameWithType: Attribute.TypeId
        qualifiedName: System.Attribute.TypeId
        isExternal: true
      VB:
      - id: System.Attribute.TypeId
        name: TypeId
        nameWithType: Attribute.TypeId
        qualifiedName: System.Attribute.TypeId
        isExternal: true
    isDefinition: true
    parent: System.Attribute
    commentId: P:System.Attribute.TypeId
  System.Runtime.InteropServices:
    name:
      CSharp:
      - name: System.Runtime.InteropServices
        nameWithType: System.Runtime.InteropServices
        qualifiedName: System.Runtime.InteropServices
        isExternal: true
      VB:
      - name: System.Runtime.InteropServices
        nameWithType: System.Runtime.InteropServices
        qualifiedName: System.Runtime.InteropServices
    isDefinition: true
    commentId: N:System.Runtime.InteropServices
  System.Runtime.InteropServices._Attribute:
    name:
      CSharp:
      - id: System.Runtime.InteropServices._Attribute
        name: _Attribute
        nameWithType: _Attribute
        qualifiedName: System.Runtime.InteropServices._Attribute
        isExternal: true
      VB:
      - id: System.Runtime.InteropServices._Attribute
        name: _Attribute
        nameWithType: _Attribute
        qualifiedName: System.Runtime.InteropServices._Attribute
        isExternal: true
    isDefinition: true
    parent: System.Runtime.InteropServices
    commentId: T:System.Runtime.InteropServices._Attribute
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  Chroma.ExecutionOrder.Order*:
    name:
      CSharp:
      - id: Chroma.ExecutionOrder.Order*
        name: Order
        nameWithType: ExecutionOrder.Order
        qualifiedName: Chroma.ExecutionOrder.Order
      VB:
      - id: Chroma.ExecutionOrder.Order*
        name: Order
        nameWithType: ExecutionOrder.Order
        qualifiedName: Chroma.ExecutionOrder.Order
    isDefinition: true
    commentId: Overload:Chroma.ExecutionOrder.Order
  Chroma.ExecutionOrder.#ctor*:
    name:
      CSharp:
      - id: Chroma.ExecutionOrder.#ctor*
        name: ExecutionOrder
        nameWithType: ExecutionOrder.ExecutionOrder
        qualifiedName: Chroma.ExecutionOrder.ExecutionOrder
      VB:
      - id: Chroma.ExecutionOrder.#ctor*
        name: ExecutionOrder
        nameWithType: ExecutionOrder.ExecutionOrder
        qualifiedName: Chroma.ExecutionOrder.ExecutionOrder
    isDefinition: true
    commentId: Overload:Chroma.ExecutionOrder.#ctor
  Chroma.ExecutionOrder:
    name:
      CSharp:
      - id: Chroma.ExecutionOrder
        name: ExecutionOrder
        nameWithType: ExecutionOrder
        qualifiedName: Chroma.ExecutionOrder
      VB:
      - id: Chroma.ExecutionOrder
        name: ExecutionOrder
        nameWithType: ExecutionOrder
        qualifiedName: Chroma.ExecutionOrder
    isDefinition: true
    commentId: T:Chroma.ExecutionOrder
  Chroma.ExecutionOrderHelper.GetOrderFromTypeName*:
    name:
      CSharp:
      - id: Chroma.ExecutionOrderHelper.GetOrderFromTypeName*
        name: GetOrderFromTypeName
        nameWithType: ExecutionOrderHelper.GetOrderFromTypeName
        qualifiedName: Chroma.ExecutionOrderHelper.GetOrderFromTypeName
      VB:
      - id: Chroma.ExecutionOrderHelper.GetOrderFromTypeName*
        name: GetOrderFromTypeName
        nameWithType: ExecutionOrderHelper.GetOrderFromTypeName
        qualifiedName: Chroma.ExecutionOrderHelper.GetOrderFromTypeName
    isDefinition: true
    commentId: Overload:Chroma.ExecutionOrderHelper.GetOrderFromTypeName
  Chroma.ExecutionOrderHelper.GetOrderFromType*:
    name:
      CSharp:
      - id: Chroma.ExecutionOrderHelper.GetOrderFromType*
        name: GetOrderFromType
        nameWithType: ExecutionOrderHelper.GetOrderFromType
        qualifiedName: Chroma.ExecutionOrderHelper.GetOrderFromType
      VB:
      - id: Chroma.ExecutionOrderHelper.GetOrderFromType*
        name: GetOrderFromType
        nameWithType: ExecutionOrderHelper.GetOrderFromType
        qualifiedName: Chroma.ExecutionOrderHelper.GetOrderFromType
    isDefinition: true
    commentId: Overload:Chroma.ExecutionOrderHelper.GetOrderFromType
  Chroma.ExecutionOrderHelper:
    name:
      CSharp:
      - id: Chroma.ExecutionOrderHelper
        name: ExecutionOrderHelper
        nameWithType: ExecutionOrderHelper
        qualifiedName: Chroma.ExecutionOrderHelper
      VB:
      - id: Chroma.ExecutionOrderHelper
        name: ExecutionOrderHelper
        nameWithType: ExecutionOrderHelper
        qualifiedName: Chroma.ExecutionOrderHelper
    isDefinition: true
    commentId: T:Chroma.ExecutionOrderHelper
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.ValueType.Equals(System.Object):
    name:
      CSharp:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.Equals(System.Object)
  System.ValueType.GetHashCode:
    name:
      CSharp:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.GetHashCode
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  Chroma.Color:
    name:
      CSharp:
      - id: Chroma.Color
        name: Color
        nameWithType: Color
        qualifiedName: Chroma.Color
      VB:
      - id: Chroma.Color
        name: Color
        nameWithType: Color
        qualifiedName: Chroma.Color
    isDefinition: true
    commentId: T:Chroma.Color
  Chroma.Mathf.Abs*:
    name:
      CSharp:
      - id: Chroma.Mathf.Abs*
        name: Abs
        nameWithType: Mathf.Abs
        qualifiedName: Chroma.Mathf.Abs
      VB:
      - id: Chroma.Mathf.Abs*
        name: Abs
        nameWithType: Mathf.Abs
        qualifiedName: Chroma.Mathf.Abs
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Abs
  Chroma.Mathf.Acos*:
    name:
      CSharp:
      - id: Chroma.Mathf.Acos*
        name: Acos
        nameWithType: Mathf.Acos
        qualifiedName: Chroma.Mathf.Acos
      VB:
      - id: Chroma.Mathf.Acos*
        name: Acos
        nameWithType: Mathf.Acos
        qualifiedName: Chroma.Mathf.Acos
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Acos
  Chroma.Mathf.Atan*:
    name:
      CSharp:
      - id: Chroma.Mathf.Atan*
        name: Atan
        nameWithType: Mathf.Atan
        qualifiedName: Chroma.Mathf.Atan
      VB:
      - id: Chroma.Mathf.Atan*
        name: Atan
        nameWithType: Mathf.Atan
        qualifiedName: Chroma.Mathf.Atan
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Atan
  Chroma.Mathf.Atan2*:
    name:
      CSharp:
      - id: Chroma.Mathf.Atan2*
        name: Atan2
        nameWithType: Mathf.Atan2
        qualifiedName: Chroma.Mathf.Atan2
      VB:
      - id: Chroma.Mathf.Atan2*
        name: Atan2
        nameWithType: Mathf.Atan2
        qualifiedName: Chroma.Mathf.Atan2
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Atan2
  Chroma.Mathf.Ceiling*:
    name:
      CSharp:
      - id: Chroma.Mathf.Ceiling*
        name: Ceiling
        nameWithType: Mathf.Ceiling
        qualifiedName: Chroma.Mathf.Ceiling
      VB:
      - id: Chroma.Mathf.Ceiling*
        name: Ceiling
        nameWithType: Mathf.Ceiling
        qualifiedName: Chroma.Mathf.Ceiling
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Ceiling
  Chroma.Mathf.Cos*:
    name:
      CSharp:
      - id: Chroma.Mathf.Cos*
        name: Cos
        nameWithType: Mathf.Cos
        qualifiedName: Chroma.Mathf.Cos
      VB:
      - id: Chroma.Mathf.Cos*
        name: Cos
        nameWithType: Mathf.Cos
        qualifiedName: Chroma.Mathf.Cos
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Cos
  Chroma.Mathf.Cosh*:
    name:
      CSharp:
      - id: Chroma.Mathf.Cosh*
        name: Cosh
        nameWithType: Mathf.Cosh
        qualifiedName: Chroma.Mathf.Cosh
      VB:
      - id: Chroma.Mathf.Cosh*
        name: Cosh
        nameWithType: Mathf.Cosh
        qualifiedName: Chroma.Mathf.Cosh
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Cosh
  Chroma.Mathf.Clamp*:
    name:
      CSharp:
      - id: Chroma.Mathf.Clamp*
        name: Clamp
        nameWithType: Mathf.Clamp
        qualifiedName: Chroma.Mathf.Clamp
      VB:
      - id: Chroma.Mathf.Clamp*
        name: Clamp
        nameWithType: Mathf.Clamp
        qualifiedName: Chroma.Mathf.Clamp
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Clamp
  Chroma.Mathf.Exp*:
    name:
      CSharp:
      - id: Chroma.Mathf.Exp*
        name: Exp
        nameWithType: Mathf.Exp
        qualifiedName: Chroma.Mathf.Exp
      VB:
      - id: Chroma.Mathf.Exp*
        name: Exp
        nameWithType: Mathf.Exp
        qualifiedName: Chroma.Mathf.Exp
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Exp
  Chroma.Mathf.Floor*:
    name:
      CSharp:
      - id: Chroma.Mathf.Floor*
        name: Floor
        nameWithType: Mathf.Floor
        qualifiedName: Chroma.Mathf.Floor
      VB:
      - id: Chroma.Mathf.Floor*
        name: Floor
        nameWithType: Mathf.Floor
        qualifiedName: Chroma.Mathf.Floor
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Floor
  Chroma.Mathf.IEEERemainder*:
    name:
      CSharp:
      - id: Chroma.Mathf.IEEERemainder*
        name: IEEERemainder
        nameWithType: Mathf.IEEERemainder
        qualifiedName: Chroma.Mathf.IEEERemainder
      VB:
      - id: Chroma.Mathf.IEEERemainder*
        name: IEEERemainder
        nameWithType: Mathf.IEEERemainder
        qualifiedName: Chroma.Mathf.IEEERemainder
    isDefinition: true
    commentId: Overload:Chroma.Mathf.IEEERemainder
  Chroma.Mathf.Log*:
    name:
      CSharp:
      - id: Chroma.Mathf.Log*
        name: Log
        nameWithType: Mathf.Log
        qualifiedName: Chroma.Mathf.Log
      VB:
      - id: Chroma.Mathf.Log*
        name: Log
        nameWithType: Mathf.Log
        qualifiedName: Chroma.Mathf.Log
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Log
  Chroma.Mathf.Log10*:
    name:
      CSharp:
      - id: Chroma.Mathf.Log10*
        name: Log10
        nameWithType: Mathf.Log10
        qualifiedName: Chroma.Mathf.Log10
      VB:
      - id: Chroma.Mathf.Log10*
        name: Log10
        nameWithType: Mathf.Log10
        qualifiedName: Chroma.Mathf.Log10
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Log10
  System.Byte:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Byte
  Chroma.Mathf.Min*:
    name:
      CSharp:
      - id: Chroma.Mathf.Min*
        name: Min
        nameWithType: Mathf.Min
        qualifiedName: Chroma.Mathf.Min
      VB:
      - id: Chroma.Mathf.Min*
        name: Min
        nameWithType: Mathf.Min
        qualifiedName: Chroma.Mathf.Min
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Min
  System.Decimal:
    name:
      CSharp:
      - id: System.Decimal
        name: Decimal
        nameWithType: Decimal
        qualifiedName: System.Decimal
        isExternal: true
      VB:
      - id: System.Decimal
        name: Decimal
        nameWithType: Decimal
        qualifiedName: System.Decimal
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Decimal
  System.Int16:
    name:
      CSharp:
      - id: System.Int16
        name: Int16
        nameWithType: Int16
        qualifiedName: System.Int16
        isExternal: true
      VB:
      - id: System.Int16
        name: Int16
        nameWithType: Int16
        qualifiedName: System.Int16
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int16
  System.Int64:
    name:
      CSharp:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
      VB:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int64
  System.SByte:
    name:
      CSharp:
      - id: System.SByte
        name: SByte
        nameWithType: SByte
        qualifiedName: System.SByte
        isExternal: true
      VB:
      - id: System.SByte
        name: SByte
        nameWithType: SByte
        qualifiedName: System.SByte
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.SByte
  System.UInt16:
    name:
      CSharp:
      - id: System.UInt16
        name: UInt16
        nameWithType: UInt16
        qualifiedName: System.UInt16
        isExternal: true
      VB:
      - id: System.UInt16
        name: UInt16
        nameWithType: UInt16
        qualifiedName: System.UInt16
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UInt16
  Chroma.Mathf.Max*:
    name:
      CSharp:
      - id: Chroma.Mathf.Max*
        name: Max
        nameWithType: Mathf.Max
        qualifiedName: Chroma.Mathf.Max
      VB:
      - id: Chroma.Mathf.Max*
        name: Max
        nameWithType: Mathf.Max
        qualifiedName: Chroma.Mathf.Max
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Max
  Chroma.Mathf.Pow*:
    name:
      CSharp:
      - id: Chroma.Mathf.Pow*
        name: Pow
        nameWithType: Mathf.Pow
        qualifiedName: Chroma.Mathf.Pow
      VB:
      - id: Chroma.Mathf.Pow*
        name: Pow
        nameWithType: Mathf.Pow
        qualifiedName: Chroma.Mathf.Pow
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Pow
  Chroma.Mathf.Round*:
    name:
      CSharp:
      - id: Chroma.Mathf.Round*
        name: Round
        nameWithType: Mathf.Round
        qualifiedName: Chroma.Mathf.Round
      VB:
      - id: Chroma.Mathf.Round*
        name: Round
        nameWithType: Mathf.Round
        qualifiedName: Chroma.Mathf.Round
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Round
  Chroma.Mathf.Sign*:
    name:
      CSharp:
      - id: Chroma.Mathf.Sign*
        name: Sign
        nameWithType: Mathf.Sign
        qualifiedName: Chroma.Mathf.Sign
      VB:
      - id: Chroma.Mathf.Sign*
        name: Sign
        nameWithType: Mathf.Sign
        qualifiedName: Chroma.Mathf.Sign
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Sign
  Chroma.Mathf.Sin*:
    name:
      CSharp:
      - id: Chroma.Mathf.Sin*
        name: Sin
        nameWithType: Mathf.Sin
        qualifiedName: Chroma.Mathf.Sin
      VB:
      - id: Chroma.Mathf.Sin*
        name: Sin
        nameWithType: Mathf.Sin
        qualifiedName: Chroma.Mathf.Sin
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Sin
  Chroma.Mathf.Sinh*:
    name:
      CSharp:
      - id: Chroma.Mathf.Sinh*
        name: Sinh
        nameWithType: Mathf.Sinh
        qualifiedName: Chroma.Mathf.Sinh
      VB:
      - id: Chroma.Mathf.Sinh*
        name: Sinh
        nameWithType: Mathf.Sinh
        qualifiedName: Chroma.Mathf.Sinh
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Sinh
  Chroma.Mathf.Sqrt*:
    name:
      CSharp:
      - id: Chroma.Mathf.Sqrt*
        name: Sqrt
        nameWithType: Mathf.Sqrt
        qualifiedName: Chroma.Mathf.Sqrt
      VB:
      - id: Chroma.Mathf.Sqrt*
        name: Sqrt
        nameWithType: Mathf.Sqrt
        qualifiedName: Chroma.Mathf.Sqrt
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Sqrt
  Chroma.Mathf.Square*:
    name:
      CSharp:
      - id: Chroma.Mathf.Square*
        name: Square
        nameWithType: Mathf.Square
        qualifiedName: Chroma.Mathf.Square
      VB:
      - id: Chroma.Mathf.Square*
        name: Square
        nameWithType: Mathf.Square
        qualifiedName: Chroma.Mathf.Square
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Square
  Chroma.Mathf.Tan*:
    name:
      CSharp:
      - id: Chroma.Mathf.Tan*
        name: Tan
        nameWithType: Mathf.Tan
        qualifiedName: Chroma.Mathf.Tan
      VB:
      - id: Chroma.Mathf.Tan*
        name: Tan
        nameWithType: Mathf.Tan
        qualifiedName: Chroma.Mathf.Tan
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Tan
  Chroma.Mathf.Tanh*:
    name:
      CSharp:
      - id: Chroma.Mathf.Tanh*
        name: Tanh
        nameWithType: Mathf.Tanh
        qualifiedName: Chroma.Mathf.Tanh
      VB:
      - id: Chroma.Mathf.Tanh*
        name: Tanh
        nameWithType: Mathf.Tanh
        qualifiedName: Chroma.Mathf.Tanh
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Tanh
  Chroma.Mathf.Truncate*:
    name:
      CSharp:
      - id: Chroma.Mathf.Truncate*
        name: Truncate
        nameWithType: Mathf.Truncate
        qualifiedName: Chroma.Mathf.Truncate
      VB:
      - id: Chroma.Mathf.Truncate*
        name: Truncate
        nameWithType: Mathf.Truncate
        qualifiedName: Chroma.Mathf.Truncate
    isDefinition: true
    commentId: Overload:Chroma.Mathf.Truncate
  Chroma.Mathf.RadiansToDegrees*:
    name:
      CSharp:
      - id: Chroma.Mathf.RadiansToDegrees*
        name: RadiansToDegrees
        nameWithType: Mathf.RadiansToDegrees
        qualifiedName: Chroma.Mathf.RadiansToDegrees
      VB:
      - id: Chroma.Mathf.RadiansToDegrees*
        name: RadiansToDegrees
        nameWithType: Mathf.RadiansToDegrees
        qualifiedName: Chroma.Mathf.RadiansToDegrees
    isDefinition: true
    commentId: Overload:Chroma.Mathf.RadiansToDegrees
  Chroma.Mathf.DegreesToRadians*:
    name:
      CSharp:
      - id: Chroma.Mathf.DegreesToRadians*
        name: DegreesToRadians
        nameWithType: Mathf.DegreesToRadians
        qualifiedName: Chroma.Mathf.DegreesToRadians
      VB:
      - id: Chroma.Mathf.DegreesToRadians*
        name: DegreesToRadians
        nameWithType: Mathf.DegreesToRadians
        qualifiedName: Chroma.Mathf.DegreesToRadians
    isDefinition: true
    commentId: Overload:Chroma.Mathf.DegreesToRadians
  Chroma.Mathf:
    name:
      CSharp:
      - id: Chroma.Mathf
        name: Mathf
        nameWithType: Mathf
        qualifiedName: Chroma.Mathf
      VB:
      - id: Chroma.Mathf
        name: Mathf
        nameWithType: Mathf
        qualifiedName: Chroma.Mathf
    isDefinition: true
    commentId: T:Chroma.Mathf
  System.IEquatable`1:
    name:
      CSharp:
      - id: System.IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: System.IEquatable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: System.IEquatable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.IEquatable`1
  System.IEquatable{Chroma.Vector2}:
    name:
      CSharp:
      - id: System.IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: System.IEquatable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Chroma.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Chroma.Vector2
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: System.IEquatable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Chroma.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Chroma.Vector2
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IEquatable`1
    parent: System
    commentId: T:System.IEquatable{Chroma.Vector2}
  Chroma.Vector2.#ctor*:
    name:
      CSharp:
      - id: Chroma.Vector2.#ctor*
        name: Vector2
        nameWithType: Vector2.Vector2
        qualifiedName: Chroma.Vector2.Vector2
      VB:
      - id: Chroma.Vector2.#ctor*
        name: Vector2
        nameWithType: Vector2.Vector2
        qualifiedName: Chroma.Vector2.Vector2
    isDefinition: true
    commentId: Overload:Chroma.Vector2.#ctor
  Chroma.Vector2.Clamp*:
    name:
      CSharp:
      - id: Chroma.Vector2.Clamp*
        name: Clamp
        nameWithType: Vector2.Clamp
        qualifiedName: Chroma.Vector2.Clamp
      VB:
      - id: Chroma.Vector2.Clamp*
        name: Clamp
        nameWithType: Vector2.Clamp
        qualifiedName: Chroma.Vector2.Clamp
    isDefinition: true
    commentId: Overload:Chroma.Vector2.Clamp
  Chroma.Vector2.Length*:
    name:
      CSharp:
      - id: Chroma.Vector2.Length*
        name: Length
        nameWithType: Vector2.Length
        qualifiedName: Chroma.Vector2.Length
      VB:
      - id: Chroma.Vector2.Length*
        name: Length
        nameWithType: Vector2.Length
        qualifiedName: Chroma.Vector2.Length
    isDefinition: true
    commentId: Overload:Chroma.Vector2.Length
  Chroma.Vector2.Normalized*:
    name:
      CSharp:
      - id: Chroma.Vector2.Normalized*
        name: Normalized
        nameWithType: Vector2.Normalized
        qualifiedName: Chroma.Vector2.Normalized
      VB:
      - id: Chroma.Vector2.Normalized*
        name: Normalized
        nameWithType: Vector2.Normalized
        qualifiedName: Chroma.Vector2.Normalized
    isDefinition: true
    commentId: Overload:Chroma.Vector2.Normalized
  Chroma.Vector2.Normalize*:
    name:
      CSharp:
      - id: Chroma.Vector2.Normalize*
        name: Normalize
        nameWithType: Vector2.Normalize
        qualifiedName: Chroma.Vector2.Normalize
      VB:
      - id: Chroma.Vector2.Normalize*
        name: Normalize
        nameWithType: Vector2.Normalize
        qualifiedName: Chroma.Vector2.Normalize
    isDefinition: true
    commentId: Overload:Chroma.Vector2.Normalize
  Chroma.Vector2.Distance*:
    name:
      CSharp:
      - id: Chroma.Vector2.Distance*
        name: Distance
        nameWithType: Vector2.Distance
        qualifiedName: Chroma.Vector2.Distance
      VB:
      - id: Chroma.Vector2.Distance*
        name: Distance
        nameWithType: Vector2.Distance
        qualifiedName: Chroma.Vector2.Distance
    isDefinition: true
    commentId: Overload:Chroma.Vector2.Distance
  Chroma.Vector2.Lerp*:
    name:
      CSharp:
      - id: Chroma.Vector2.Lerp*
        name: Lerp
        nameWithType: Vector2.Lerp
        qualifiedName: Chroma.Vector2.Lerp
      VB:
      - id: Chroma.Vector2.Lerp*
        name: Lerp
        nameWithType: Vector2.Lerp
        qualifiedName: Chroma.Vector2.Lerp
    isDefinition: true
    commentId: Overload:Chroma.Vector2.Lerp
  Chroma.Vector2.Angle*:
    name:
      CSharp:
      - id: Chroma.Vector2.Angle*
        name: Angle
        nameWithType: Vector2.Angle
        qualifiedName: Chroma.Vector2.Angle
      VB:
      - id: Chroma.Vector2.Angle*
        name: Angle
        nameWithType: Vector2.Angle
        qualifiedName: Chroma.Vector2.Angle
    isDefinition: true
    commentId: Overload:Chroma.Vector2.Angle
  Chroma.Vector2.Dot*:
    name:
      CSharp:
      - id: Chroma.Vector2.Dot*
        name: Dot
        nameWithType: Vector2.Dot
        qualifiedName: Chroma.Vector2.Dot
      VB:
      - id: Chroma.Vector2.Dot*
        name: Dot
        nameWithType: Vector2.Dot
        qualifiedName: Chroma.Vector2.Dot
    isDefinition: true
    commentId: Overload:Chroma.Vector2.Dot
  Chroma.Vector2.op_Multiply*:
    name:
      CSharp:
      - id: Chroma.Vector2.op_Multiply*
        name: Multiply
        nameWithType: Vector2.Multiply
        qualifiedName: Chroma.Vector2.Multiply
      VB:
      - id: Chroma.Vector2.op_Multiply*
        name: Multiply
        nameWithType: Vector2.Multiply
        qualifiedName: Chroma.Vector2.Multiply
    isDefinition: true
    commentId: Overload:Chroma.Vector2.op_Multiply
  Chroma.Vector2.op_Addition*:
    name:
      CSharp:
      - id: Chroma.Vector2.op_Addition*
        name: Addition
        nameWithType: Vector2.Addition
        qualifiedName: Chroma.Vector2.Addition
      VB:
      - id: Chroma.Vector2.op_Addition*
        name: Addition
        nameWithType: Vector2.Addition
        qualifiedName: Chroma.Vector2.Addition
    isDefinition: true
    commentId: Overload:Chroma.Vector2.op_Addition
  Chroma.Vector2.op_Subtraction*:
    name:
      CSharp:
      - id: Chroma.Vector2.op_Subtraction*
        name: Subtraction
        nameWithType: Vector2.Subtraction
        qualifiedName: Chroma.Vector2.Subtraction
      VB:
      - id: Chroma.Vector2.op_Subtraction*
        name: Subtraction
        nameWithType: Vector2.Subtraction
        qualifiedName: Chroma.Vector2.Subtraction
    isDefinition: true
    commentId: Overload:Chroma.Vector2.op_Subtraction
  Chroma.Vector2.op_Division*:
    name:
      CSharp:
      - id: Chroma.Vector2.op_Division*
        name: Division
        nameWithType: Vector2.Division
        qualifiedName: Chroma.Vector2.Division
      VB:
      - id: Chroma.Vector2.op_Division*
        name: Division
        nameWithType: Vector2.Division
        qualifiedName: Chroma.Vector2.Division
    isDefinition: true
    commentId: Overload:Chroma.Vector2.op_Division
  Chroma.Vector2.op_UnaryNegation*:
    name:
      CSharp:
      - id: Chroma.Vector2.op_UnaryNegation*
        name: UnaryNegation
        nameWithType: Vector2.UnaryNegation
        qualifiedName: Chroma.Vector2.UnaryNegation
      VB:
      - id: Chroma.Vector2.op_UnaryNegation*
        name: UnaryNegation
        nameWithType: Vector2.UnaryNegation
        qualifiedName: Chroma.Vector2.UnaryNegation
    isDefinition: true
    commentId: Overload:Chroma.Vector2.op_UnaryNegation
  Chroma.Vector2.Equals*:
    name:
      CSharp:
      - id: Chroma.Vector2.Equals*
        name: Equals
        nameWithType: Vector2.Equals
        qualifiedName: Chroma.Vector2.Equals
      VB:
      - id: Chroma.Vector2.Equals*
        name: Equals
        nameWithType: Vector2.Equals
        qualifiedName: Chroma.Vector2.Equals
    isDefinition: true
    commentId: Overload:Chroma.Vector2.Equals
  System.IEquatable`1.Equals(`0):
    name:
      CSharp:
      - id: System.IEquatable`1.Equals(`0)
        name: Equals
        nameWithType: IEquatable<T>.Equals
        qualifiedName: System.IEquatable<T>.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.IEquatable`1.Equals(`0)
        name: Equals
        nameWithType: IEquatable(Of T).Equals
        qualifiedName: System.IEquatable(Of T).Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.IEquatable`1.Equals(`0)
  System.IEquatable{Chroma.Vector2}.Equals(Chroma.Vector2):
    name:
      CSharp:
      - id: System.IEquatable`1.Equals(`0)
        name: Equals
        nameWithType: IEquatable<Vector2>.Equals
        qualifiedName: System.IEquatable<Chroma.Vector2>.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Chroma.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Chroma.Vector2
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.IEquatable`1.Equals(`0)
        name: Equals
        nameWithType: IEquatable(Of Vector2).Equals
        qualifiedName: System.IEquatable(Of Chroma.Vector2).Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Chroma.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Chroma.Vector2
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IEquatable`1.Equals(`0)
    parent: System.IEquatable{Chroma.Vector2}
    commentId: M:System.IEquatable{Chroma.Vector2}.Equals(Chroma.Vector2)
  Chroma.Vector2.op_Equality*:
    name:
      CSharp:
      - id: Chroma.Vector2.op_Equality*
        name: Equality
        nameWithType: Vector2.Equality
        qualifiedName: Chroma.Vector2.Equality
      VB:
      - id: Chroma.Vector2.op_Equality*
        name: Equality
        nameWithType: Vector2.Equality
        qualifiedName: Chroma.Vector2.Equality
    isDefinition: true
    commentId: Overload:Chroma.Vector2.op_Equality
  Chroma.Vector2.op_Inequality*:
    name:
      CSharp:
      - id: Chroma.Vector2.op_Inequality*
        name: Inequality
        nameWithType: Vector2.Inequality
        qualifiedName: Chroma.Vector2.Inequality
      VB:
      - id: Chroma.Vector2.op_Inequality*
        name: Inequality
        nameWithType: Vector2.Inequality
        qualifiedName: Chroma.Vector2.Inequality
    isDefinition: true
    commentId: Overload:Chroma.Vector2.op_Inequality
  Chroma.Vector2.Cos*:
    name:
      CSharp:
      - id: Chroma.Vector2.Cos*
        name: Cos
        nameWithType: Vector2.Cos
        qualifiedName: Chroma.Vector2.Cos
      VB:
      - id: Chroma.Vector2.Cos*
        name: Cos
        nameWithType: Vector2.Cos
        qualifiedName: Chroma.Vector2.Cos
    isDefinition: true
    commentId: Overload:Chroma.Vector2.Cos
  Chroma.Vector2.Sin*:
    name:
      CSharp:
      - id: Chroma.Vector2.Sin*
        name: Sin
        nameWithType: Vector2.Sin
        qualifiedName: Chroma.Vector2.Sin
      VB:
      - id: Chroma.Vector2.Sin*
        name: Sin
        nameWithType: Vector2.Sin
        qualifiedName: Chroma.Vector2.Sin
    isDefinition: true
    commentId: Overload:Chroma.Vector2.Sin
  Chroma.Vector2.ToString*:
    name:
      CSharp:
      - id: Chroma.Vector2.ToString*
        name: ToString
        nameWithType: Vector2.ToString
        qualifiedName: Chroma.Vector2.ToString
      VB:
      - id: Chroma.Vector2.ToString*
        name: ToString
        nameWithType: Vector2.ToString
        qualifiedName: Chroma.Vector2.ToString
    isDefinition: true
    commentId: Overload:Chroma.Vector2.ToString
  Chroma.Vector2.GetHashCode*:
    name:
      CSharp:
      - id: Chroma.Vector2.GetHashCode*
        name: GetHashCode
        nameWithType: Vector2.GetHashCode
        qualifiedName: Chroma.Vector2.GetHashCode
      VB:
      - id: Chroma.Vector2.GetHashCode*
        name: GetHashCode
        nameWithType: Vector2.GetHashCode
        qualifiedName: Chroma.Vector2.GetHashCode
    isDefinition: true
    commentId: Overload:Chroma.Vector2.GetHashCode
  System.IEquatable{Chroma.Vector3}:
    name:
      CSharp:
      - id: System.IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: System.IEquatable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Chroma.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Chroma.Vector3
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: System.IEquatable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Chroma.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Chroma.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IEquatable`1
    parent: System
    commentId: T:System.IEquatable{Chroma.Vector3}
  Chroma.Vector3:
    name:
      CSharp:
      - id: Chroma.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Chroma.Vector3
      VB:
      - id: Chroma.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Chroma.Vector3
    isDefinition: true
    parent: Chroma
    commentId: T:Chroma.Vector3
  Chroma.Vector3.#ctor*:
    name:
      CSharp:
      - id: Chroma.Vector3.#ctor*
        name: Vector3
        nameWithType: Vector3.Vector3
        qualifiedName: Chroma.Vector3.Vector3
      VB:
      - id: Chroma.Vector3.#ctor*
        name: Vector3
        nameWithType: Vector3.Vector3
        qualifiedName: Chroma.Vector3.Vector3
    isDefinition: true
    commentId: Overload:Chroma.Vector3.#ctor
  Chroma.Vector3.Clamp*:
    name:
      CSharp:
      - id: Chroma.Vector3.Clamp*
        name: Clamp
        nameWithType: Vector3.Clamp
        qualifiedName: Chroma.Vector3.Clamp
      VB:
      - id: Chroma.Vector3.Clamp*
        name: Clamp
        nameWithType: Vector3.Clamp
        qualifiedName: Chroma.Vector3.Clamp
    isDefinition: true
    commentId: Overload:Chroma.Vector3.Clamp
  Chroma.Vector3.Length*:
    name:
      CSharp:
      - id: Chroma.Vector3.Length*
        name: Length
        nameWithType: Vector3.Length
        qualifiedName: Chroma.Vector3.Length
      VB:
      - id: Chroma.Vector3.Length*
        name: Length
        nameWithType: Vector3.Length
        qualifiedName: Chroma.Vector3.Length
    isDefinition: true
    commentId: Overload:Chroma.Vector3.Length
  Chroma.Vector3.Normalized*:
    name:
      CSharp:
      - id: Chroma.Vector3.Normalized*
        name: Normalized
        nameWithType: Vector3.Normalized
        qualifiedName: Chroma.Vector3.Normalized
      VB:
      - id: Chroma.Vector3.Normalized*
        name: Normalized
        nameWithType: Vector3.Normalized
        qualifiedName: Chroma.Vector3.Normalized
    isDefinition: true
    commentId: Overload:Chroma.Vector3.Normalized
  Chroma.Vector3.Normalize*:
    name:
      CSharp:
      - id: Chroma.Vector3.Normalize*
        name: Normalize
        nameWithType: Vector3.Normalize
        qualifiedName: Chroma.Vector3.Normalize
      VB:
      - id: Chroma.Vector3.Normalize*
        name: Normalize
        nameWithType: Vector3.Normalize
        qualifiedName: Chroma.Vector3.Normalize
    isDefinition: true
    commentId: Overload:Chroma.Vector3.Normalize
  Chroma.Vector3.Distance*:
    name:
      CSharp:
      - id: Chroma.Vector3.Distance*
        name: Distance
        nameWithType: Vector3.Distance
        qualifiedName: Chroma.Vector3.Distance
      VB:
      - id: Chroma.Vector3.Distance*
        name: Distance
        nameWithType: Vector3.Distance
        qualifiedName: Chroma.Vector3.Distance
    isDefinition: true
    commentId: Overload:Chroma.Vector3.Distance
  Chroma.Vector3.Lerp*:
    name:
      CSharp:
      - id: Chroma.Vector3.Lerp*
        name: Lerp
        nameWithType: Vector3.Lerp
        qualifiedName: Chroma.Vector3.Lerp
      VB:
      - id: Chroma.Vector3.Lerp*
        name: Lerp
        nameWithType: Vector3.Lerp
        qualifiedName: Chroma.Vector3.Lerp
    isDefinition: true
    commentId: Overload:Chroma.Vector3.Lerp
  Chroma.Vector3.op_Multiply*:
    name:
      CSharp:
      - id: Chroma.Vector3.op_Multiply*
        name: Multiply
        nameWithType: Vector3.Multiply
        qualifiedName: Chroma.Vector3.Multiply
      VB:
      - id: Chroma.Vector3.op_Multiply*
        name: Multiply
        nameWithType: Vector3.Multiply
        qualifiedName: Chroma.Vector3.Multiply
    isDefinition: true
    commentId: Overload:Chroma.Vector3.op_Multiply
  Chroma.Vector3.op_Addition*:
    name:
      CSharp:
      - id: Chroma.Vector3.op_Addition*
        name: Addition
        nameWithType: Vector3.Addition
        qualifiedName: Chroma.Vector3.Addition
      VB:
      - id: Chroma.Vector3.op_Addition*
        name: Addition
        nameWithType: Vector3.Addition
        qualifiedName: Chroma.Vector3.Addition
    isDefinition: true
    commentId: Overload:Chroma.Vector3.op_Addition
  Chroma.Vector3.op_Subtraction*:
    name:
      CSharp:
      - id: Chroma.Vector3.op_Subtraction*
        name: Subtraction
        nameWithType: Vector3.Subtraction
        qualifiedName: Chroma.Vector3.Subtraction
      VB:
      - id: Chroma.Vector3.op_Subtraction*
        name: Subtraction
        nameWithType: Vector3.Subtraction
        qualifiedName: Chroma.Vector3.Subtraction
    isDefinition: true
    commentId: Overload:Chroma.Vector3.op_Subtraction
  Chroma.Vector3.op_Division*:
    name:
      CSharp:
      - id: Chroma.Vector3.op_Division*
        name: Division
        nameWithType: Vector3.Division
        qualifiedName: Chroma.Vector3.Division
      VB:
      - id: Chroma.Vector3.op_Division*
        name: Division
        nameWithType: Vector3.Division
        qualifiedName: Chroma.Vector3.Division
    isDefinition: true
    commentId: Overload:Chroma.Vector3.op_Division
  Chroma.Vector3.op_UnaryNegation*:
    name:
      CSharp:
      - id: Chroma.Vector3.op_UnaryNegation*
        name: UnaryNegation
        nameWithType: Vector3.UnaryNegation
        qualifiedName: Chroma.Vector3.UnaryNegation
      VB:
      - id: Chroma.Vector3.op_UnaryNegation*
        name: UnaryNegation
        nameWithType: Vector3.UnaryNegation
        qualifiedName: Chroma.Vector3.UnaryNegation
    isDefinition: true
    commentId: Overload:Chroma.Vector3.op_UnaryNegation
  Chroma.Vector3.Equals*:
    name:
      CSharp:
      - id: Chroma.Vector3.Equals*
        name: Equals
        nameWithType: Vector3.Equals
        qualifiedName: Chroma.Vector3.Equals
      VB:
      - id: Chroma.Vector3.Equals*
        name: Equals
        nameWithType: Vector3.Equals
        qualifiedName: Chroma.Vector3.Equals
    isDefinition: true
    commentId: Overload:Chroma.Vector3.Equals
  System.IEquatable{Chroma.Vector3}.Equals(Chroma.Vector3):
    name:
      CSharp:
      - id: System.IEquatable`1.Equals(`0)
        name: Equals
        nameWithType: IEquatable<Vector3>.Equals
        qualifiedName: System.IEquatable<Chroma.Vector3>.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Chroma.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Chroma.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.IEquatable`1.Equals(`0)
        name: Equals
        nameWithType: IEquatable(Of Vector3).Equals
        qualifiedName: System.IEquatable(Of Chroma.Vector3).Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Chroma.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Chroma.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IEquatable`1.Equals(`0)
    parent: System.IEquatable{Chroma.Vector3}
    commentId: M:System.IEquatable{Chroma.Vector3}.Equals(Chroma.Vector3)
  Chroma.Vector3.op_Equality*:
    name:
      CSharp:
      - id: Chroma.Vector3.op_Equality*
        name: Equality
        nameWithType: Vector3.Equality
        qualifiedName: Chroma.Vector3.Equality
      VB:
      - id: Chroma.Vector3.op_Equality*
        name: Equality
        nameWithType: Vector3.Equality
        qualifiedName: Chroma.Vector3.Equality
    isDefinition: true
    commentId: Overload:Chroma.Vector3.op_Equality
  Chroma.Vector3.op_Inequality*:
    name:
      CSharp:
      - id: Chroma.Vector3.op_Inequality*
        name: Inequality
        nameWithType: Vector3.Inequality
        qualifiedName: Chroma.Vector3.Inequality
      VB:
      - id: Chroma.Vector3.op_Inequality*
        name: Inequality
        nameWithType: Vector3.Inequality
        qualifiedName: Chroma.Vector3.Inequality
    isDefinition: true
    commentId: Overload:Chroma.Vector3.op_Inequality
  Chroma.Vector3.Cos*:
    name:
      CSharp:
      - id: Chroma.Vector3.Cos*
        name: Cos
        nameWithType: Vector3.Cos
        qualifiedName: Chroma.Vector3.Cos
      VB:
      - id: Chroma.Vector3.Cos*
        name: Cos
        nameWithType: Vector3.Cos
        qualifiedName: Chroma.Vector3.Cos
    isDefinition: true
    commentId: Overload:Chroma.Vector3.Cos
  Chroma.Vector3.Sin*:
    name:
      CSharp:
      - id: Chroma.Vector3.Sin*
        name: Sin
        nameWithType: Vector3.Sin
        qualifiedName: Chroma.Vector3.Sin
      VB:
      - id: Chroma.Vector3.Sin*
        name: Sin
        nameWithType: Vector3.Sin
        qualifiedName: Chroma.Vector3.Sin
    isDefinition: true
    commentId: Overload:Chroma.Vector3.Sin
  Chroma.Vector3.ToString*:
    name:
      CSharp:
      - id: Chroma.Vector3.ToString*
        name: ToString
        nameWithType: Vector3.ToString
        qualifiedName: Chroma.Vector3.ToString
      VB:
      - id: Chroma.Vector3.ToString*
        name: ToString
        nameWithType: Vector3.ToString
        qualifiedName: Chroma.Vector3.ToString
    isDefinition: true
    commentId: Overload:Chroma.Vector3.ToString
  Chroma.Vector3.GetHashCode*:
    name:
      CSharp:
      - id: Chroma.Vector3.GetHashCode*
        name: GetHashCode
        nameWithType: Vector3.GetHashCode
        qualifiedName: Chroma.Vector3.GetHashCode
      VB:
      - id: Chroma.Vector3.GetHashCode*
        name: GetHashCode
        nameWithType: Vector3.GetHashCode
        qualifiedName: Chroma.Vector3.GetHashCode
    isDefinition: true
    commentId: Overload:Chroma.Vector3.GetHashCode
  Chroma.Vector3.XY*:
    name:
      CSharp:
      - id: Chroma.Vector3.XY*
        name: XY
        nameWithType: Vector3.XY
        qualifiedName: Chroma.Vector3.XY
      VB:
      - id: Chroma.Vector3.XY*
        name: XY
        nameWithType: Vector3.XY
        qualifiedName: Chroma.Vector3.XY
    isDefinition: true
    commentId: Overload:Chroma.Vector3.XY
  Chroma.Vector3.XZ*:
    name:
      CSharp:
      - id: Chroma.Vector3.XZ*
        name: XZ
        nameWithType: Vector3.XZ
        qualifiedName: Chroma.Vector3.XZ
      VB:
      - id: Chroma.Vector3.XZ*
        name: XZ
        nameWithType: Vector3.XZ
        qualifiedName: Chroma.Vector3.XZ
    isDefinition: true
    commentId: Overload:Chroma.Vector3.XZ
  Chroma.Vector3.YZ*:
    name:
      CSharp:
      - id: Chroma.Vector3.YZ*
        name: YZ
        nameWithType: Vector3.YZ
        qualifiedName: Chroma.Vector3.YZ
      VB:
      - id: Chroma.Vector3.YZ*
        name: YZ
        nameWithType: Vector3.YZ
        qualifiedName: Chroma.Vector3.YZ
    isDefinition: true
    commentId: Overload:Chroma.Vector3.YZ
  System.IEquatable{Chroma.Vector4}:
    name:
      CSharp:
      - id: System.IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: System.IEquatable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Chroma.Vector4
        name: Vector4
        nameWithType: Vector4
        qualifiedName: Chroma.Vector4
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: System.IEquatable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Chroma.Vector4
        name: Vector4
        nameWithType: Vector4
        qualifiedName: Chroma.Vector4
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IEquatable`1
    parent: System
    commentId: T:System.IEquatable{Chroma.Vector4}
  Chroma.Vector4.#ctor*:
    name:
      CSharp:
      - id: Chroma.Vector4.#ctor*
        name: Vector4
        nameWithType: Vector4.Vector4
        qualifiedName: Chroma.Vector4.Vector4
      VB:
      - id: Chroma.Vector4.#ctor*
        name: Vector4
        nameWithType: Vector4.Vector4
        qualifiedName: Chroma.Vector4.Vector4
    isDefinition: true
    commentId: Overload:Chroma.Vector4.#ctor
  Chroma.Vector4.Clamp*:
    name:
      CSharp:
      - id: Chroma.Vector4.Clamp*
        name: Clamp
        nameWithType: Vector4.Clamp
        qualifiedName: Chroma.Vector4.Clamp
      VB:
      - id: Chroma.Vector4.Clamp*
        name: Clamp
        nameWithType: Vector4.Clamp
        qualifiedName: Chroma.Vector4.Clamp
    isDefinition: true
    commentId: Overload:Chroma.Vector4.Clamp
  Chroma.Vector4.Length*:
    name:
      CSharp:
      - id: Chroma.Vector4.Length*
        name: Length
        nameWithType: Vector4.Length
        qualifiedName: Chroma.Vector4.Length
      VB:
      - id: Chroma.Vector4.Length*
        name: Length
        nameWithType: Vector4.Length
        qualifiedName: Chroma.Vector4.Length
    isDefinition: true
    commentId: Overload:Chroma.Vector4.Length
  Chroma.Vector4.Normalized*:
    name:
      CSharp:
      - id: Chroma.Vector4.Normalized*
        name: Normalized
        nameWithType: Vector4.Normalized
        qualifiedName: Chroma.Vector4.Normalized
      VB:
      - id: Chroma.Vector4.Normalized*
        name: Normalized
        nameWithType: Vector4.Normalized
        qualifiedName: Chroma.Vector4.Normalized
    isDefinition: true
    commentId: Overload:Chroma.Vector4.Normalized
  Chroma.Vector4.Normalize*:
    name:
      CSharp:
      - id: Chroma.Vector4.Normalize*
        name: Normalize
        nameWithType: Vector4.Normalize
        qualifiedName: Chroma.Vector4.Normalize
      VB:
      - id: Chroma.Vector4.Normalize*
        name: Normalize
        nameWithType: Vector4.Normalize
        qualifiedName: Chroma.Vector4.Normalize
    isDefinition: true
    commentId: Overload:Chroma.Vector4.Normalize
  Chroma.Vector4.Distance*:
    name:
      CSharp:
      - id: Chroma.Vector4.Distance*
        name: Distance
        nameWithType: Vector4.Distance
        qualifiedName: Chroma.Vector4.Distance
      VB:
      - id: Chroma.Vector4.Distance*
        name: Distance
        nameWithType: Vector4.Distance
        qualifiedName: Chroma.Vector4.Distance
    isDefinition: true
    commentId: Overload:Chroma.Vector4.Distance
  Chroma.Vector4.Lerp*:
    name:
      CSharp:
      - id: Chroma.Vector4.Lerp*
        name: Lerp
        nameWithType: Vector4.Lerp
        qualifiedName: Chroma.Vector4.Lerp
      VB:
      - id: Chroma.Vector4.Lerp*
        name: Lerp
        nameWithType: Vector4.Lerp
        qualifiedName: Chroma.Vector4.Lerp
    isDefinition: true
    commentId: Overload:Chroma.Vector4.Lerp
  Chroma.Vector4.op_Multiply*:
    name:
      CSharp:
      - id: Chroma.Vector4.op_Multiply*
        name: Multiply
        nameWithType: Vector4.Multiply
        qualifiedName: Chroma.Vector4.Multiply
      VB:
      - id: Chroma.Vector4.op_Multiply*
        name: Multiply
        nameWithType: Vector4.Multiply
        qualifiedName: Chroma.Vector4.Multiply
    isDefinition: true
    commentId: Overload:Chroma.Vector4.op_Multiply
  Chroma.Vector4.op_Addition*:
    name:
      CSharp:
      - id: Chroma.Vector4.op_Addition*
        name: Addition
        nameWithType: Vector4.Addition
        qualifiedName: Chroma.Vector4.Addition
      VB:
      - id: Chroma.Vector4.op_Addition*
        name: Addition
        nameWithType: Vector4.Addition
        qualifiedName: Chroma.Vector4.Addition
    isDefinition: true
    commentId: Overload:Chroma.Vector4.op_Addition
  Chroma.Vector4.op_Subtraction*:
    name:
      CSharp:
      - id: Chroma.Vector4.op_Subtraction*
        name: Subtraction
        nameWithType: Vector4.Subtraction
        qualifiedName: Chroma.Vector4.Subtraction
      VB:
      - id: Chroma.Vector4.op_Subtraction*
        name: Subtraction
        nameWithType: Vector4.Subtraction
        qualifiedName: Chroma.Vector4.Subtraction
    isDefinition: true
    commentId: Overload:Chroma.Vector4.op_Subtraction
  Chroma.Vector4.op_Division*:
    name:
      CSharp:
      - id: Chroma.Vector4.op_Division*
        name: Division
        nameWithType: Vector4.Division
        qualifiedName: Chroma.Vector4.Division
      VB:
      - id: Chroma.Vector4.op_Division*
        name: Division
        nameWithType: Vector4.Division
        qualifiedName: Chroma.Vector4.Division
    isDefinition: true
    commentId: Overload:Chroma.Vector4.op_Division
  Chroma.Vector4.op_UnaryNegation*:
    name:
      CSharp:
      - id: Chroma.Vector4.op_UnaryNegation*
        name: UnaryNegation
        nameWithType: Vector4.UnaryNegation
        qualifiedName: Chroma.Vector4.UnaryNegation
      VB:
      - id: Chroma.Vector4.op_UnaryNegation*
        name: UnaryNegation
        nameWithType: Vector4.UnaryNegation
        qualifiedName: Chroma.Vector4.UnaryNegation
    isDefinition: true
    commentId: Overload:Chroma.Vector4.op_UnaryNegation
  Chroma.Vector4.Equals*:
    name:
      CSharp:
      - id: Chroma.Vector4.Equals*
        name: Equals
        nameWithType: Vector4.Equals
        qualifiedName: Chroma.Vector4.Equals
      VB:
      - id: Chroma.Vector4.Equals*
        name: Equals
        nameWithType: Vector4.Equals
        qualifiedName: Chroma.Vector4.Equals
    isDefinition: true
    commentId: Overload:Chroma.Vector4.Equals
  System.IEquatable{Chroma.Vector4}.Equals(Chroma.Vector4):
    name:
      CSharp:
      - id: System.IEquatable`1.Equals(`0)
        name: Equals
        nameWithType: IEquatable<Vector4>.Equals
        qualifiedName: System.IEquatable<Chroma.Vector4>.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Chroma.Vector4
        name: Vector4
        nameWithType: Vector4
        qualifiedName: Chroma.Vector4
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.IEquatable`1.Equals(`0)
        name: Equals
        nameWithType: IEquatable(Of Vector4).Equals
        qualifiedName: System.IEquatable(Of Chroma.Vector4).Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Chroma.Vector4
        name: Vector4
        nameWithType: Vector4
        qualifiedName: Chroma.Vector4
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IEquatable`1.Equals(`0)
    parent: System.IEquatable{Chroma.Vector4}
    commentId: M:System.IEquatable{Chroma.Vector4}.Equals(Chroma.Vector4)
  Chroma.Vector4.op_Equality*:
    name:
      CSharp:
      - id: Chroma.Vector4.op_Equality*
        name: Equality
        nameWithType: Vector4.Equality
        qualifiedName: Chroma.Vector4.Equality
      VB:
      - id: Chroma.Vector4.op_Equality*
        name: Equality
        nameWithType: Vector4.Equality
        qualifiedName: Chroma.Vector4.Equality
    isDefinition: true
    commentId: Overload:Chroma.Vector4.op_Equality
  Chroma.Vector4.op_Inequality*:
    name:
      CSharp:
      - id: Chroma.Vector4.op_Inequality*
        name: Inequality
        nameWithType: Vector4.Inequality
        qualifiedName: Chroma.Vector4.Inequality
      VB:
      - id: Chroma.Vector4.op_Inequality*
        name: Inequality
        nameWithType: Vector4.Inequality
        qualifiedName: Chroma.Vector4.Inequality
    isDefinition: true
    commentId: Overload:Chroma.Vector4.op_Inequality
  Chroma.Vector4.Cos*:
    name:
      CSharp:
      - id: Chroma.Vector4.Cos*
        name: Cos
        nameWithType: Vector4.Cos
        qualifiedName: Chroma.Vector4.Cos
      VB:
      - id: Chroma.Vector4.Cos*
        name: Cos
        nameWithType: Vector4.Cos
        qualifiedName: Chroma.Vector4.Cos
    isDefinition: true
    commentId: Overload:Chroma.Vector4.Cos
  Chroma.Vector4.Sin*:
    name:
      CSharp:
      - id: Chroma.Vector4.Sin*
        name: Sin
        nameWithType: Vector4.Sin
        qualifiedName: Chroma.Vector4.Sin
      VB:
      - id: Chroma.Vector4.Sin*
        name: Sin
        nameWithType: Vector4.Sin
        qualifiedName: Chroma.Vector4.Sin
    isDefinition: true
    commentId: Overload:Chroma.Vector4.Sin
  Chroma.Vector4.ToString*:
    name:
      CSharp:
      - id: Chroma.Vector4.ToString*
        name: ToString
        nameWithType: Vector4.ToString
        qualifiedName: Chroma.Vector4.ToString
      VB:
      - id: Chroma.Vector4.ToString*
        name: ToString
        nameWithType: Vector4.ToString
        qualifiedName: Chroma.Vector4.ToString
    isDefinition: true
    commentId: Overload:Chroma.Vector4.ToString
  Chroma.Vector4.GetHashCode*:
    name:
      CSharp:
      - id: Chroma.Vector4.GetHashCode*
        name: GetHashCode
        nameWithType: Vector4.GetHashCode
        qualifiedName: Chroma.Vector4.GetHashCode
      VB:
      - id: Chroma.Vector4.GetHashCode*
        name: GetHashCode
        nameWithType: Vector4.GetHashCode
        qualifiedName: Chroma.Vector4.GetHashCode
    isDefinition: true
    commentId: Overload:Chroma.Vector4.GetHashCode
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Chroma.Engine.ReflectionHelper.GetEntityTypes*:
    name:
      CSharp:
      - id: Chroma.Engine.ReflectionHelper.GetEntityTypes*
        name: GetEntityTypes
        nameWithType: ReflectionHelper.GetEntityTypes
        qualifiedName: Chroma.Engine.ReflectionHelper.GetEntityTypes
      VB:
      - id: Chroma.Engine.ReflectionHelper.GetEntityTypes*
        name: GetEntityTypes
        nameWithType: ReflectionHelper.GetEntityTypes
        qualifiedName: Chroma.Engine.ReflectionHelper.GetEntityTypes
    isDefinition: true
    commentId: Overload:Chroma.Engine.ReflectionHelper.GetEntityTypes
  IEnumerable`1:
    name:
      CSharp:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:IEnumerable`1'
  IEnumerable{System.Type}:
    name:
      CSharp:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IEnumerable`1
    commentId: '!:IEnumerable{System.Type}'
  Chroma.Engine.ReflectionHelper.GetInheritanceHierarchy*:
    name:
      CSharp:
      - id: Chroma.Engine.ReflectionHelper.GetInheritanceHierarchy*
        name: GetInheritanceHierarchy
        nameWithType: ReflectionHelper.GetInheritanceHierarchy
        qualifiedName: Chroma.Engine.ReflectionHelper.GetInheritanceHierarchy
      VB:
      - id: Chroma.Engine.ReflectionHelper.GetInheritanceHierarchy*
        name: GetInheritanceHierarchy
        nameWithType: ReflectionHelper.GetInheritanceHierarchy
        qualifiedName: Chroma.Engine.ReflectionHelper.GetInheritanceHierarchy
    isDefinition: true
    commentId: Overload:Chroma.Engine.ReflectionHelper.GetInheritanceHierarchy
  Chroma.Engine.ReflectionHelper.GetEntityTypeHierarchy*:
    name:
      CSharp:
      - id: Chroma.Engine.ReflectionHelper.GetEntityTypeHierarchy*
        name: GetEntityTypeHierarchy
        nameWithType: ReflectionHelper.GetEntityTypeHierarchy
        qualifiedName: Chroma.Engine.ReflectionHelper.GetEntityTypeHierarchy
      VB:
      - id: Chroma.Engine.ReflectionHelper.GetEntityTypeHierarchy*
        name: GetEntityTypeHierarchy
        nameWithType: ReflectionHelper.GetEntityTypeHierarchy
        qualifiedName: Chroma.Engine.ReflectionHelper.GetEntityTypeHierarchy
    isDefinition: true
    commentId: Overload:Chroma.Engine.ReflectionHelper.GetEntityTypeHierarchy
  Chroma.Engine.ReflectionHelper:
    name:
      CSharp:
      - id: Chroma.Engine.ReflectionHelper
        name: ReflectionHelper
        nameWithType: ReflectionHelper
        qualifiedName: Chroma.Engine.ReflectionHelper
      VB:
      - id: Chroma.Engine.ReflectionHelper
        name: ReflectionHelper
        nameWithType: ReflectionHelper
        qualifiedName: Chroma.Engine.ReflectionHelper
    isDefinition: true
    commentId: T:Chroma.Engine.ReflectionHelper
  Chroma.Engine.ScriptCreationHelper.ValidateIdentifier*:
    name:
      CSharp:
      - id: Chroma.Engine.ScriptCreationHelper.ValidateIdentifier*
        name: ValidateIdentifier
        nameWithType: ScriptCreationHelper.ValidateIdentifier
        qualifiedName: Chroma.Engine.ScriptCreationHelper.ValidateIdentifier
      VB:
      - id: Chroma.Engine.ScriptCreationHelper.ValidateIdentifier*
        name: ValidateIdentifier
        nameWithType: ScriptCreationHelper.ValidateIdentifier
        qualifiedName: Chroma.Engine.ScriptCreationHelper.ValidateIdentifier
    isDefinition: true
    commentId: Overload:Chroma.Engine.ScriptCreationHelper.ValidateIdentifier
  Chroma.Engine.ScriptCreationHelper.ValidateClassName*:
    name:
      CSharp:
      - id: Chroma.Engine.ScriptCreationHelper.ValidateClassName*
        name: ValidateClassName
        nameWithType: ScriptCreationHelper.ValidateClassName
        qualifiedName: Chroma.Engine.ScriptCreationHelper.ValidateClassName
      VB:
      - id: Chroma.Engine.ScriptCreationHelper.ValidateClassName*
        name: ValidateClassName
        nameWithType: ScriptCreationHelper.ValidateClassName
        qualifiedName: Chroma.Engine.ScriptCreationHelper.ValidateClassName
    isDefinition: true
    commentId: Overload:Chroma.Engine.ScriptCreationHelper.ValidateClassName
  Chroma.Engine.ScriptCreationHelper:
    name:
      CSharp:
      - id: Chroma.Engine.ScriptCreationHelper
        name: ScriptCreationHelper
        nameWithType: ScriptCreationHelper
        qualifiedName: Chroma.Engine.ScriptCreationHelper
      VB:
      - id: Chroma.Engine.ScriptCreationHelper
        name: ScriptCreationHelper
        nameWithType: ScriptCreationHelper
        qualifiedName: Chroma.Engine.ScriptCreationHelper
    isDefinition: true
    commentId: T:Chroma.Engine.ScriptCreationHelper
  Chroma.Engine:
    name:
      CSharp:
      - name: Chroma.Engine
        nameWithType: Chroma.Engine
        qualifiedName: Chroma.Engine
      VB:
      - name: Chroma.Engine
        nameWithType: Chroma.Engine
        qualifiedName: Chroma.Engine
    isDefinition: true
    commentId: N:Chroma.Engine
