<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Dist|x64">
      <Configuration>Dist</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{A6972A73-124D-A368-9B41-9D3F07F6996C}</ProjectGuid>
    <IgnoreWarnCompileDuplicatedFilename>true</IgnoreWarnCompileDuplicatedFilename>
    <Keyword>MakeFileProj</Keyword>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <OutDir>..\bin\Debug-windows-x86_64\Chroma.Mono\</OutDir>
    <IntDir>..\obj\Debug-windows-x86_64\Chroma.Mono\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <OutDir>..\bin\Release-windows-x86_64\Chroma.Mono\</OutDir>
    <IntDir>..\obj\Release-windows-x86_64\Chroma.Mono\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Dist|x64'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <OutDir>..\bin\Dist-windows-x86_64\Chroma.Mono\</OutDir>
    <IntDir>..\obj\Dist-windows-x86_64\Chroma.Mono\</IntDir>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Dist|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <NMakeOutput>$(OutDir)Chroma.Mono</NMakeOutput>
    <NMakeBuildCommandLine>echo Building Chroma.Mono.dll with mcs...
$(SolutionDir)Polychrome\mono\bin\mono.exe $(SolutionDir)Polychrome\mono\lib\mono\4.5\mcs.exe -debug -target:library -nostdlib -out:$(SolutionDir)bin\Debug-windows-x86_64\$(ProjectName)\Chroma.Mono.dll -r:$(SolutionDir)Polychrome\mono\lib\mono\4.5\mscorlib.dll,$(SolutionDir)Polychrome\mono\lib\mono\4.5\System.dll,$(SolutionDir)Polychrome\mono\lib\mono\4.5\System.Core.dll -recurse:Source\**.cs
echo Copying $(SolutionDir)bin\Debug-windows-x86_64\$(ProjectName)\Chroma.Mono.dll
IF EXIST $(SolutionDir)bin\Debug-windows-x86_64\$(ProjectName)\Chroma.Mono.dll\ (xcopy /Q /E /Y /I $(SolutionDir)bin\Debug-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)Polychrome &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)bin\Debug-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)Polychrome &gt; nul)
IF EXIST $(SolutionDir)bin\Debug-windows-x86_64\$(ProjectName)\Chroma.Mono.dll\ (xcopy /Q /E /Y /I $(SolutionDir)bin\Debug-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)bin\Debug-windows-x86_64\Polychrome &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)bin\Debug-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)bin\Debug-windows-x86_64\Polychrome &gt; nul)
IF EXIST $(SolutionDir)bin\Debug-windows-x86_64\$(ProjectName)\Chroma.Mono.dll\ (xcopy /Q /E /Y /I $(SolutionDir)bin\Debug-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)Runtime &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)bin\Debug-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)Runtime &gt; nul)
IF EXIST $(SolutionDir)bin\Debug-windows-x86_64\$(ProjectName)\Chroma.Mono.dll\ (xcopy /Q /E /Y /I $(SolutionDir)bin\Debug-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)bin\Debug-windows-x86_64\Runtime &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)bin\Debug-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)bin\Debug-windows-x86_64\Runtime &gt; nul)</NMakeBuildCommandLine>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <NMakeOutput>$(OutDir)Chroma.Mono</NMakeOutput>
    <NMakeBuildCommandLine>echo Building Chroma.Mono.dll with mcs...
$(SolutionDir)Polychrome\mono\bin\mono.exe $(SolutionDir)Polychrome\mono\lib\mono\4.5\mcs.exe -target:library -nostdlib -optimize -out:$(SolutionDir)bin\Release-windows-x86_64\$(ProjectName)\Chroma.Mono.dll -r:$(SolutionDir)Polychrome\mono\lib\mono\4.5\mscorlib.dll,$(SolutionDir)Polychrome\mono\lib\mono\4.5\System.dll,$(SolutionDir)Polychrome\mono\lib\mono\4.5\System.Core.dll -recurse:**.cs
echo Copying $(SolutionDir)bin\Release-windows-x86_64\$(ProjectName)\Chroma.Mono.dll
IF EXIST $(SolutionDir)bin\Release-windows-x86_64\$(ProjectName)\Chroma.Mono.dll\ (xcopy /Q /E /Y /I $(SolutionDir)bin\Release-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)Polychrome &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)bin\Release-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)Polychrome &gt; nul)
IF EXIST $(SolutionDir)bin\Release-windows-x86_64\$(ProjectName)\Chroma.Mono.dll\ (xcopy /Q /E /Y /I $(SolutionDir)bin\Release-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)bin\Release-windows-x86_64\Polychrome &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)bin\Release-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)bin\Release-windows-x86_64\Polychrome &gt; nul)
IF EXIST $(SolutionDir)bin\Release-windows-x86_64\$(ProjectName)\Chroma.Mono.dll\ (xcopy /Q /E /Y /I $(SolutionDir)bin\Release-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)Runtime &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)bin\Release-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)Runtime &gt; nul)
IF EXIST $(SolutionDir)bin\Release-windows-x86_64\$(ProjectName)\Chroma.Mono.dll\ (xcopy /Q /E /Y /I $(SolutionDir)bin\Release-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)bin\Release-windows-x86_64\Runtime &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)bin\Release-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)bin\Release-windows-x86_64\Runtime &gt; nul)</NMakeBuildCommandLine>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Dist|x64'">
    <NMakeOutput>$(OutDir)Chroma.Mono</NMakeOutput>
    <NMakeBuildCommandLine>echo Building Chroma.Mono.dll with mcs...
$(SolutionDir)Polychrome\mono\bin\mono.exe $(SolutionDir)Polychrome\mono\lib\mono\4.5\mcs.exe -target:library -nostdlib -optimize -out:$(SolutionDir)bin\Dist-windows-x86_64\$(ProjectName)\Chroma.Mono.dll -r:$(SolutionDir)Polychrome\mono\lib\mono\4.5\mscorlib.dll,$(SolutionDir)Polychrome\mono\lib\mono\4.5\System.dll,$(SolutionDir)Polychrome\mono\lib\mono\4.5\System.Core.dll -recurse:**.cs
echo opying  $(SolutionDir)bin\Dist-windows-x86_64\$(ProjectName)\Chroma.Mono.dll
IF EXIST $(SolutionDir)bin\Dist-windows-x86_64\$(ProjectName)\Chroma.Mono.dll\ (xcopy /Q /E /Y /I $(SolutionDir)bin\Dist-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)Polychrome &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)bin\Dist-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)Polychrome &gt; nul)
IF EXIST $(SolutionDir)bin\Dist-windows-x86_64\$(ProjectName)\Chroma.Mono.dll\ (xcopy /Q /E /Y /I $(SolutionDir)bin\Dist-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)bin\Dist-windows-x86_64\Polychrome &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)bin\Dist-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)bin\Dist-windows-x86_64\Polychrome &gt; nul)
IF EXIST $(SolutionDir)bin\Dist-windows-x86_64\$(ProjectName)\Chroma.Mono.dll\ (xcopy /Q /E /Y /I $(SolutionDir)bin\Dist-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)Runtime &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)bin\Dist-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)Runtime &gt; nul)
IF EXIST $(SolutionDir)bin\Dist-windows-x86_64\$(ProjectName)\Chroma.Mono.dll\ (xcopy /Q /E /Y /I $(SolutionDir)bin\Dist-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)bin\Dist-windows-x86_64\Runtime &gt; nul) ELSE (xcopy /Q /Y /I $(SolutionDir)bin\Dist-windows-x86_64\$(ProjectName)\Chroma.Mono.dll $(SolutionDir)bin\Dist-windows-x86_64\Runtime &gt; nul)</NMakeBuildCommandLine>
  </PropertyGroup>
  <ItemDefinitionGroup>
  </ItemDefinitionGroup>
  <ItemGroup>
    <None Include="Source\Component.cs" />
    <None Include="Source\Components\AudioSource.cs" />
    <None Include="Source\Components\BoxCollider.cs" />
    <None Include="Source\Components\Camera.cs" />
    <None Include="Source\Components\CircleCollider.cs" />
    <None Include="Source\Components\SpriteRenderer.cs" />
    <None Include="Source\Components\Tag.cs" />
    <None Include="Source\Components\Transform.cs" />
    <None Include="Source\Coroutine.cs" />
    <None Include="Source\Entity.cs" />
    <None Include="Source\Input.cs" />
    <None Include="Source\Log.cs" />
    <None Include="Source\Math\Color.cs" />
    <None Include="Source\Math\Mathf.cs" />
    <None Include="Source\Math\Vector2.cs" />
    <None Include="Source\Math\Vector3.cs" />
    <None Include="Source\Math\Vector4.cs" />
    <None Include="Source\ReflectionHelper.cs" />
    <None Include="Source\RuntimeException.cs" />
    <None Include="Source\Time.cs" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>