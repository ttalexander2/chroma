<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Dist|x64">
      <Configuration>Dist</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{A7D385F7-938B-C744-FC92-A0A0E8696235}</ProjectGuid>
    <IgnoreWarnCompileDuplicatedFilename>true</IgnoreWarnCompileDuplicatedFilename>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>Polychrome</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Dist|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Dist|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>..\bin\Debug-windows-x86_64\Polychrome\</OutDir>
    <IntDir>..\obj\Debug-windows-x86_64\Polychrome\</IntDir>
    <TargetName>Polychrome</TargetName>
    <TargetExt>.exe</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\bin\Release-windows-x86_64\Polychrome\</OutDir>
    <IntDir>..\obj\Release-windows-x86_64\Polychrome\</IntDir>
    <TargetName>Polychrome</TargetName>
    <TargetExt>.exe</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Dist|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\bin\Dist-windows-x86_64\Polychrome\</OutDir>
    <IntDir>..\obj\Dist-windows-x86_64\Polychrome\</IntDir>
    <TargetName>Polychrome</TargetName>
    <TargetExt>.exe</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>CHROMA_PLATFORM_WINDOWS;CHROMA_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\Chroma\src;..\Chroma\third_party\spdlog\include;..\Chroma\third_party\glm;..\Chroma\third_party\imgui;..\Chroma\third_party\imgui\misc\cpp;..\Chroma\third_party\entt;..\Chroma\third_party\fmod;..\Chroma\third_party\yaml-cpp\include;..\Chroma\third_party\concurrentqueue;..\Chroma\third_party\readerwriterqueue;..\Chroma\third_party\ImGuizmo;..\Chroma\third_party\sol2\include;..\Chroma\third_party\lua;..\Chroma\third_party\mono\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <MinimalRebuild>false</MinimalRebuild>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <LanguageStandard>stdcpplatest</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>echo Copying ../Chroma/lib/Windows/x64/fmodstudioL.dll to ../bin/Debug-windows-x86_64/Polychrome
IF EXIST ..\Chroma\lib\Windows\x64\fmodstudioL.dll\ (xcopy /Q /E /Y /I ..\Chroma\lib\Windows\x64\fmodstudioL.dll ..\bin\Debug-windows-x86_64\Polychrome &gt; nul) ELSE (xcopy /Q /Y /I ..\Chroma\lib\Windows\x64\fmodstudioL.dll ..\bin\Debug-windows-x86_64\Polychrome &gt; nul)
echo Copying ../Chroma/lib/Windows/x64/fmodL.dll to ../bin/Debug-windows-x86_64/Polychrome
IF EXIST ..\Chroma\lib\Windows\x64\fmodL.dll\ (xcopy /Q /E /Y /I ..\Chroma\lib\Windows\x64\fmodL.dll ..\bin\Debug-windows-x86_64\Polychrome &gt; nul) ELSE (xcopy /Q /Y /I ..\Chroma\lib\Windows\x64\fmodL.dll ..\bin\Debug-windows-x86_64\Polychrome &gt; nul)
echo Copying assets to ../bin/Debug-windows-x86_64/Polychrome/assets
IF EXIST assets\ (xcopy /Q /E /Y /I assets ..\bin\Debug-windows-x86_64\Polychrome\assets &gt; nul) ELSE (xcopy /Q /Y /I assets ..\bin\Debug-windows-x86_64\Polychrome\assets &gt; nul)
echo Copying mono dependencies to ../bin/Debug-windows-x86_64/Polychrome
IF EXIST mono\ (xcopy /Q /E /Y /I mono ..\bin\Debug-windows-x86_64\Polychrome\mono &gt; nul) ELSE (xcopy /Q /Y /I mono ..\bin\Debug-windows-x86_64\Polychrome\mono &gt; nul)
echo Copying ../Chroma/third_party/mono/bin/Debug/mono-2.0-sgen.dll to ../bin/Debug-windows-x86_64/Polychrome
IF EXIST "..\Chroma\third_party\mono\bin\Debug\mono-2.0-sgen.dll"\ (xcopy /Q /E /Y /I "..\Chroma\third_party\mono\bin\Debug\mono-2.0-sgen.dll" "..\bin\Debug-windows-x86_64\Polychrome" &gt; nul) ELSE (xcopy /Q /Y /I "..\Chroma\third_party\mono\bin\Debug\mono-2.0-sgen.dll" "..\bin\Debug-windows-x86_64\Polychrome" &gt; nul)
echo Copying imgui.ini to ../bin/Debug-windows-x86_64/Polychrome
IF EXIST imgui.ini\ (xcopy /Q /E /Y /I imgui.ini ..\bin\Debug-windows-x86_64\Polychrome &gt; nul) ELSE (xcopy /Q /Y /I imgui.ini ..\bin\Debug-windows-x86_64\Polychrome &gt; nul)
echo Build Chroma.Mono...
dotnet build ../Script-Core/Chroma.Mono.csproj --output .
IF EXIST Chroma.Mono.dll\ (xcopy /Q /E /Y /I Chroma.Mono.dll ..\bin\Debug-windows-x86_64\Polychrome &gt; nul) ELSE (xcopy /Q /Y /I Chroma.Mono.dll ..\bin\Debug-windows-x86_64\Polychrome &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>CHROMA_PLATFORM_WINDOWS;CHROMA_RELEASE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\Chroma\src;..\Chroma\third_party\spdlog\include;..\Chroma\third_party\glm;..\Chroma\third_party\imgui;..\Chroma\third_party\imgui\misc\cpp;..\Chroma\third_party\entt;..\Chroma\third_party\fmod;..\Chroma\third_party\yaml-cpp\include;..\Chroma\third_party\concurrentqueue;..\Chroma\third_party\readerwriterqueue;..\Chroma\third_party\ImGuizmo;..\Chroma\third_party\sol2\include;..\Chroma\third_party\lua;..\Chroma\third_party\mono\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <LanguageStandard>stdcpplatest</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PostBuildEvent>
      <Command>echo Copying ../Chroma/lib/Windows/x64/fmodstudioL.dll to ../bin/Release-windows-x86_64/Polychrome
IF EXIST ..\Chroma\lib\Windows\x64\fmodstudioL.dll\ (xcopy /Q /E /Y /I ..\Chroma\lib\Windows\x64\fmodstudioL.dll ..\bin\Release-windows-x86_64\Polychrome &gt; nul) ELSE (xcopy /Q /Y /I ..\Chroma\lib\Windows\x64\fmodstudioL.dll ..\bin\Release-windows-x86_64\Polychrome &gt; nul)
echo Copying ../Chroma/lib/Windows/x64/fmodL.dll to ../bin/Release-windows-x86_64/Polychrome
IF EXIST ..\Chroma\lib\Windows\x64\fmodL.dll\ (xcopy /Q /E /Y /I ..\Chroma\lib\Windows\x64\fmodL.dll ..\bin\Release-windows-x86_64\Polychrome &gt; nul) ELSE (xcopy /Q /Y /I ..\Chroma\lib\Windows\x64\fmodL.dll ..\bin\Release-windows-x86_64\Polychrome &gt; nul)
echo Copying assets to ../bin/Release-windows-x86_64/Polychrome/assets
IF EXIST assets\ (xcopy /Q /E /Y /I assets ..\bin\Release-windows-x86_64\Polychrome\assets &gt; nul) ELSE (xcopy /Q /Y /I assets ..\bin\Release-windows-x86_64\Polychrome\assets &gt; nul)
echo Copying mono dependencies to ../bin/Release-windows-x86_64/Polychrome
IF EXIST mono\ (xcopy /Q /E /Y /I mono ..\bin\Release-windows-x86_64\Polychrome\mono &gt; nul) ELSE (xcopy /Q /Y /I mono ..\bin\Release-windows-x86_64\Polychrome\mono &gt; nul)
echo Copying ../Chroma/third_party/mono/bin/Debug/mono-2.0-sgen.dll to ../bin/Release-windows-x86_64/Polychrome
IF EXIST "..\Chroma\third_party\mono\bin\Debug\mono-2.0-sgen.dll"\ (xcopy /Q /E /Y /I "..\Chroma\third_party\mono\bin\Debug\mono-2.0-sgen.dll" "..\bin\Release-windows-x86_64\Polychrome" &gt; nul) ELSE (xcopy /Q /Y /I "..\Chroma\third_party\mono\bin\Debug\mono-2.0-sgen.dll" "..\bin\Release-windows-x86_64\Polychrome" &gt; nul)
echo Copying imgui.ini to ../bin/Release-windows-x86_64/Polychrome
IF EXIST imgui.ini\ (xcopy /Q /E /Y /I imgui.ini ..\bin\Release-windows-x86_64\Polychrome &gt; nul) ELSE (xcopy /Q /Y /I imgui.ini ..\bin\Release-windows-x86_64\Polychrome &gt; nul)
echo Build Chroma.Mono...
dotnet build ../Script-Core/Chroma.Mono.csproj --output .
IF EXIST Chroma.Mono.dll\ (xcopy /Q /E /Y /I Chroma.Mono.dll ..\bin\Release-windows-x86_64\Polychrome &gt; nul) ELSE (xcopy /Q /Y /I Chroma.Mono.dll ..\bin\Release-windows-x86_64\Polychrome &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Dist|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>CHROMA_PLATFORM_WINDOWS;CHROMA_DIST;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\Chroma\src;..\Chroma\third_party\spdlog\include;..\Chroma\third_party\glm;..\Chroma\third_party\imgui;..\Chroma\third_party\imgui\misc\cpp;..\Chroma\third_party\entt;..\Chroma\third_party\fmod;..\Chroma\third_party\yaml-cpp\include;..\Chroma\third_party\concurrentqueue;..\Chroma\third_party\readerwriterqueue;..\Chroma\third_party\ImGuizmo;..\Chroma\third_party\sol2\include;..\Chroma\third_party\lua;..\Chroma\third_party\mono\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <LanguageStandard>stdcpplatest</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PostBuildEvent>
      <Command>echo Copying ../Chroma/lib/Windows/x64/fmodstudioL.dll to ../bin/Dist-windows-x86_64/Polychrome
IF EXIST ..\Chroma\lib\Windows\x64\fmodstudioL.dll\ (xcopy /Q /E /Y /I ..\Chroma\lib\Windows\x64\fmodstudioL.dll ..\bin\Dist-windows-x86_64\Polychrome &gt; nul) ELSE (xcopy /Q /Y /I ..\Chroma\lib\Windows\x64\fmodstudioL.dll ..\bin\Dist-windows-x86_64\Polychrome &gt; nul)
echo Copying ../Chroma/lib/Windows/x64/fmodL.dll to ../bin/Dist-windows-x86_64/Polychrome
IF EXIST ..\Chroma\lib\Windows\x64\fmodL.dll\ (xcopy /Q /E /Y /I ..\Chroma\lib\Windows\x64\fmodL.dll ..\bin\Dist-windows-x86_64\Polychrome &gt; nul) ELSE (xcopy /Q /Y /I ..\Chroma\lib\Windows\x64\fmodL.dll ..\bin\Dist-windows-x86_64\Polychrome &gt; nul)
echo Copying assets to ../bin/Dist-windows-x86_64/Polychrome/assets
IF EXIST assets\ (xcopy /Q /E /Y /I assets ..\bin\Dist-windows-x86_64\Polychrome\assets &gt; nul) ELSE (xcopy /Q /Y /I assets ..\bin\Dist-windows-x86_64\Polychrome\assets &gt; nul)
echo Copying mono dependencies to ../bin/Dist-windows-x86_64/Polychrome
IF EXIST mono\ (xcopy /Q /E /Y /I mono ..\bin\Dist-windows-x86_64\Polychrome\mono &gt; nul) ELSE (xcopy /Q /Y /I mono ..\bin\Dist-windows-x86_64\Polychrome\mono &gt; nul)
echo Copying ../Chroma/third_party/mono/bin/Debug/mono-2.0-sgen.dll to ../bin/Dist-windows-x86_64/Polychrome
IF EXIST "..\Chroma\third_party\mono\bin\Debug\mono-2.0-sgen.dll"\ (xcopy /Q /E /Y /I "..\Chroma\third_party\mono\bin\Debug\mono-2.0-sgen.dll" "..\bin\Dist-windows-x86_64\Polychrome" &gt; nul) ELSE (xcopy /Q /Y /I "..\Chroma\third_party\mono\bin\Debug\mono-2.0-sgen.dll" "..\bin\Dist-windows-x86_64\Polychrome" &gt; nul)
echo Copying imgui.ini to ../bin/Dist-windows-x86_64/Polychrome
IF EXIST imgui.ini\ (xcopy /Q /E /Y /I imgui.ini ..\bin\Dist-windows-x86_64\Polychrome &gt; nul) ELSE (xcopy /Q /Y /I imgui.ini ..\bin\Dist-windows-x86_64\Polychrome &gt; nul)
echo Build Chroma.Mono...
dotnet build ../Script-Core/Chroma.Mono.csproj --output .
IF EXIST Chroma.Mono.dll\ (xcopy /Q /E /Y /I Chroma.Mono.dll ..\bin\Dist-windows-x86_64\Polychrome &gt; nul) ELSE (xcopy /Q /Y /I Chroma.Mono.dll ..\bin\Dist-windows-x86_64\Polychrome &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="src\AssetBrowser.h" />
    <ClInclude Include="src\Assets.h" />
    <ClInclude Include="src\CodeEditor.h" />
    <ClInclude Include="src\EditorApp.h" />
    <ClInclude Include="src\EditorConfig.h" />
    <ClInclude Include="src\FileDrop.h" />
    <ClInclude Include="src\FileWatcherThread.h" />
    <ClInclude Include="src\Fonts\Font.h" />
    <ClInclude Include="src\Fonts\IconsForkAwesome.h" />
    <ClInclude Include="src\FuzzyFileSearch.h" />
    <ClInclude Include="src\Hierarchy.h" />
    <ClInclude Include="src\Inspector.h" />
    <ClInclude Include="src\LogSink.h" />
    <ClInclude Include="src\LogWindow.h" />
    <ClInclude Include="src\Project.h" />
    <ClInclude Include="src\Style.h" />
    <ClInclude Include="src\Utilities\GLFWHelpers.h" />
    <ClInclude Include="src\Viewport.h" />
    <ClInclude Include="src\Widgets\TextEditor.h" />
    <ClInclude Include="src\thid_party\levenshtein-sse.hpp" />
    <ClInclude Include="src\thid_party\platform_folders.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="src\AssetBrowser.cpp" />
    <ClCompile Include="src\CodeEditor.cpp" />
    <ClCompile Include="src\EditorApp.cpp" />
    <ClCompile Include="src\FileDrop.cpp" />
    <ClCompile Include="src\FileWatcherThread.cpp" />
    <ClCompile Include="src\Fonts\Pinch.cpp" />
    <ClCompile Include="src\Fonts\PinchMono.cpp" />
    <ClCompile Include="src\Fonts\Roboto.cpp" />
    <ClCompile Include="src\Fonts\RobotoMono.cpp" />
    <ClCompile Include="src\FuzzyFileSearch.cpp" />
    <ClCompile Include="src\Hierarchy.cpp" />
    <ClCompile Include="src\Inspector.cpp" />
    <ClCompile Include="src\LogWindow.cpp" />
    <ClCompile Include="src\Project.cpp" />
    <ClCompile Include="src\Utilities\GLFWHelpers.cpp" />
    <ClCompile Include="src\Viewport.cpp" />
    <ClCompile Include="src\Widgets\TextEditor.cpp" />
    <ClCompile Include="src\thid_party\platform_folders.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Chroma\Chroma.vcxproj">
      <Project>{1F05C3AB-0BA7-ED81-F461-01D6E0A274D2}</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>